{"version":3,"file":"server.js","mappings":"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","sources":["webpack://the_game/webpack/bootstrap","webpack://the_game/webpack/runtime/compat get default export","webpack://the_game/webpack/runtime/define property getters","webpack://the_game/webpack/runtime/hasOwnProperty shorthand","webpack://the_game/webpack/runtime/make namespace object","webpack://the_game/external commonjs \"dotenv/config\"","webpack://the_game/external commonjs \"express\"","webpack://the_game/external commonjs \"cookie-parser\"","webpack://the_game/./src/config/routes/routes.ts","webpack://the_game/external commonjs \"http-proxy-middleware\"","webpack://the_game/./src/services/API/API.service.ts","webpack://the_game/./src/server/middlewares/apiProxy.ts","webpack://the_game/external commonjs \"express-rate-limit\"","webpack://the_game/./src/server/middlewares/limiter.ts","webpack://the_game/external commonjs \"react\"","webpack://the_game/external commonjs \"react-dom/server\"","webpack://the_game/external commonjs \"react-router-dom\"","webpack://the_game/external commonjs \"react-redux\"","webpack://the_game/external commonjs \"react-helmet\"","webpack://the_game/external commonjs \"redux\"","webpack://the_game/external commonjs \"redux-thunk\"","webpack://the_game/external commonjs \"antd\"","webpack://the_game/./src/api/Auth/Auth.api.ts","webpack://the_game/./src/api/Profile/Profile.api.ts","webpack://the_game/./src/actions/types/profile.types.ts","webpack://the_game/./src/helpers/environment.ts","webpack://the_game/./src/helpers/acess.ts","webpack://the_game/./src/actions/profile.actions.ts","webpack://the_game/./src/reducers/profile.reducer.ts","webpack://the_game/./src/actions/types/auth.types.ts","webpack://the_game/./src/actions/auth.actions.ts","webpack://the_game/./src/reducers/auth.reducer.ts","webpack://the_game/./src/actions/types/theme.types.ts","webpack://the_game/./src/actions/types/topic.types.ts","webpack://the_game/./src/reducers/topic.reducer.ts","webpack://the_game/./src/actions/types/leaderboard.types.ts","webpack://the_game/./src/reducers/leaderboard.reducer.ts","webpack://the_game/./src/actions/types/forum.types.ts","webpack://the_game/./src/reducers/forum.reducer.ts","webpack://the_game/./src/store/store.ts","webpack://the_game/./src/reducers/theme.reducer.ts","webpack://the_game/./src/components/ErrorBoundary/ErrorBoundary.view.tsx","webpack://the_game/./src/components/GameModal/GameModal.view.tsx","webpack://the_game/./src/components/GameModal/GameModal.module.scss?8f3d","webpack://the_game/./src/config/apiRoutes.ts","webpack://the_game/./src/api/OAuth/OAuth.api.ts","webpack://the_game/./src/hooks/useMountEffect.ts","webpack://the_game/external commonjs \"@ant-design/icons\"","webpack://the_game/./src/components/Container/Container.view.tsx","webpack://the_game/./src/components/Container/Container.module.scss?007d","webpack://the_game/./src/components/PageMeta/PageMeta.view.tsx","webpack://the_game/./src/components/Password/Password.view.tsx","webpack://the_game/./src/components/Button/Button.view.tsx","webpack://the_game/./src/hooks/useSelector.ts","webpack://the_game/./src/components/Header/Header.module.scss?43c6","webpack://the_game/./src/components/Switch/Switch.view.tsx","webpack://the_game/./src/api/Theme/Theme.api.ts","webpack://the_game/./src/actions/theme.actions.ts","webpack://the_game/./src/components/NavBar/NavBar.view.tsx","webpack://the_game/./src/components/NavBar/Navbar.helpers.tsx","webpack://the_game/./src/components/NavBar/NavBar.module.scss?6b54","webpack://the_game/./src/components/Header/Header.view.tsx","webpack://the_game/./src/components/Header/Header.helpers.tsx","webpack://the_game/./src/components/PageLoader/PageLoader.view.tsx","webpack://the_game/./src/components/PageLoader/PageLoader.module.scss?f5c1","webpack://the_game/./src/pages/SignIn/SignIn.helpers.ts","webpack://the_game/./src/pages/SignIn/YandexSignIn/YandexSignIn.view.tsx","webpack://the_game/./src/pages/SignIn/YandexSignIn/YandexSignIn.module.scss?19d5","webpack://the_game/./src/pages/SignIn/SignIn.view.tsx","webpack://the_game/./src/pages/SignIn/SignIn.module.scss?4778","webpack://the_game/./src/pages/SignUp/SignUp.helpers.ts","webpack://the_game/./src/pages/SignUp/SignUp.view.tsx","webpack://the_game/./src/pages/SignUp/SignUp.module.scss?5a10","webpack://the_game/./src/pages/Main/Main.module.scss?d753","webpack://the_game/./src/pages/Main/Main.view.tsx","webpack://the_game/external commonjs \"antd/lib/form/Form\"","webpack://the_game/./src/pages/Profile/Profile.helpers.ts","webpack://the_game/./src/pages/Profile/components/FormFields/FormFields.helpers.tsx","webpack://the_game/./src/pages/Profile/components/FormFields/FormFields.view.tsx","webpack://the_game/./src/pages/Profile/components/FormControls/FormControls.view.tsx","webpack://the_game/./src/pages/Profile/components/FormControls/FormControls.module.scss?9b3d","webpack://the_game/./src/pages/Profile/Profile.view.tsx","webpack://the_game/./src/pages/Profile/Profile.module.scss?6a18","webpack://the_game/./src/pages/Forum/Forum.module.scss?49e8","webpack://the_game/./src/api/Forum/Forum.api.ts","webpack://the_game/./src/actions/forum.actions.ts","webpack://the_game/./src/pages/Forum/Forum.view.tsx","webpack://the_game/./src/pages/Forum/Forum.helpers.ts","webpack://the_game/./src/pages/About/About.view.tsx","webpack://the_game/./src/config/leaderboard.ts","webpack://the_game/./src/api/Leaderboard/Leaderboard.api.ts","webpack://the_game/./src/actions/leaderboard.actions.ts","webpack://the_game/./src/pages/Leaderboard/components/Pagination/Pagination.view.tsx","webpack://the_game/./src/pages/Leaderboard/components/Pagination/Pagination.module.scss?861b","webpack://the_game/./src/pages/Leaderboard/LeaderBoard.view.tsx","webpack://the_game/./src/pages/Leaderboard/LeaderBoard.module.scss?adfe","webpack://the_game/./src/pages/Leaderboard/LeaderBoard.helpers.ts","webpack://the_game/./src/pages/Error/Error.module.scss?fbf6","webpack://the_game/./src/pages/Error/Error.helpers.ts","webpack://the_game/./src/pages/Error/Error.view.tsx","webpack://the_game/./src/game/core/geometry/geometry.ts","webpack://the_game/./src/game/world/world.config.ts","webpack://the_game/./src/game/core/physics/physics.ts","webpack://the_game/./src/game/core/renderer.ts","webpack://the_game/./src/game/core/utils/color.ts","webpack://the_game/./src/game/core/utils/box2.ts","webpack://the_game/./src/game/core/utils/vector.ts","webpack://the_game/./src/game/core/geometry/rectangle/rectangle.ts","webpack://the_game/./src/game/core/scene.ts","webpack://the_game/./src/game/core/object.ts","webpack://the_game/./src/game/core/animations/animation.ts","webpack://the_game/./src/game/core/animations/move/moveAnimation.ts","webpack://the_game/./src/game/core/animations/sprite/spriteAnimation.ts","webpack://the_game/./src/game/core/animations/attack/attack.ts","webpack://the_game/./src/game/world/objects/wall.ts","webpack://the_game/./src/game/world/objects/weapon.ts","webpack://the_game/./src/game/world/world.helpers.ts","webpack://the_game/./src/game/world/objects/enemy.ts","webpack://the_game/./src/game/world/world.events.ts","webpack://the_game/./src/game/core/eventBus.ts","webpack://the_game/./src/game/world/objects/player.ts","webpack://the_game/./src/game/world/objects/ground.ts","webpack://the_game/./src/game/core/camera.ts","webpack://the_game/./src/game/world/ui/health.ts","webpack://the_game/./src/game/world/ui/player.ui.ts","webpack://the_game/./src/game/world/world.manager.ts","webpack://the_game/./src/game/world/world.ts","webpack://the_game/./src/pages/Game/Game.helpers.ts","webpack://the_game/./src/pages/Game/Menu/Main.module.scss?d7f8","webpack://the_game/./src/pages/Game/Menu/Menu.view.tsx","webpack://the_game/./src/pages/Game/Game.view.tsx","webpack://the_game/./src/hooks/useUnmountEffect.ts","webpack://the_game/./src/pages/Game/Game.module.scss?a508","webpack://the_game/./src/pages/Offline/Offline.module.scss?ef53","webpack://the_game/./src/pages/Offline/Offline.view.tsx","webpack://the_game/./src/pages/Topic/Comment/Comment.view.tsx","webpack://the_game/./src/pages/Topic/Comment/Comment.module.scss?01a9","webpack://the_game/./src/pages/Topic/CommentInput/CommentInput.view.tsx","webpack://the_game/./src/pages/Topic/CommentInput/CommentInput.module.scss?c8a9","webpack://the_game/./src/actions/topic.actions.ts","webpack://the_game/./src/pages/Topic/Topic.view.tsx","webpack://the_game/./src/pages/Topic/Topic.helpers.ts","webpack://the_game/./src/pages/Topic/Topic.module.scss?314d","webpack://the_game/./src/components/Input/Input.view.tsx","webpack://the_game/./src/pages/TopicEdit/TopicEdit.helpers.ts","webpack://the_game/./src/pages/TopicEdit/TopicEdit.view.tsx","webpack://the_game/./src/pages/TopicEdit/TopicEdit.module.scss?fc28","webpack://the_game/./src/components/AccessRoute/AccessRoute.tsx","webpack://the_game/./src/components/AccessRedirectRoute/AccessRedirectRoute.tsx","webpack://the_game/./src/components/Router/Routes/Routes.view.tsx","webpack://the_game/./src/components/Router/Router.view.tsx","webpack://the_game/./src/components/App/App.helpers.tsx","webpack://the_game/./src/components/App/App.module.scss?4676","webpack://the_game/./src/components/App/App.view.tsx","webpack://the_game/./src/server/utils/httpStatuses.ts","webpack://the_game/./src/server/middlewares/serverRender.tsx","webpack://the_game/./src/server/router/appRoutes.ts","webpack://the_game/./src/server/utils/makeHTMLPage.ts","webpack://the_game/./src/server/middlewares/redirect.ts","webpack://the_game/external commonjs \"body-parser\"","webpack://the_game/./src/server/middlewares/auth.ts","webpack://the_game/external commonjs \"sequelize\"","webpack://the_game/external commonjs \"sequelize-typescript\"","webpack://the_game/./src/server/db/forum/models/topic.ts","webpack://the_game/./src/server/db/forum/actions/topics.ts","webpack://the_game/./src/server/utils/safeDecorator.ts","webpack://the_game/./src/server/controllers/forum/topics.ts","webpack://the_game/./src/server/db/themes/models/themes.ts","webpack://the_game/./src/server/db/themes/actions/themes.ts","webpack://the_game/./src/server/controllers/themes/themes.ts","webpack://the_game/./src/server/router/apiRoutes.ts","webpack://the_game/./src/server/router/yandexApiRoutes.ts","webpack://the_game/./src/server/server.ts","webpack://the_game/./src/server/db/init.ts","webpack://the_game/./src/server/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"dotenv/config\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cookie-parser\");","export type Route = {\n    path: string\n};\n\nexport type Routes = {\n    [key: string]: Route;\n};\n\nexport const routes: Routes = {\n    main: {\n        path: \"/main\",\n    },\n    signIn: {\n        path: \"/signin\",\n    },\n    signUp: {\n        path: \"/signup\",\n    },\n    profile: {\n        path: \"/profile\",\n    },\n    forum: {\n        path: \"/forum\",\n    },\n    topic: {\n        path: \"/topics/:id\",\n    },\n    topicEdit: {\n        path: \"/topic/edit\",\n    },\n    leaderboard: {\n        path: \"/leaderboard\",\n    },\n    about: {\n        path: \"/about\",\n    },\n    game: {\n        path: \"/game\",\n    },\n    theme: {\n        path: \"/themes/:id\",\n    },\n};\n\nexport const findRoute = (path: Route[\"path\"]): Route | null => {\n    const route = Object.values(routes).find((route) => route.path === path);\n    return route ?? null;\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http-proxy-middleware\");","export enum Method {\n    GET = \"GET\",\n    POST = \"POST\",\n    PUT = \"PUT\",\n    PATCH = \"PATCH\",\n    DELETE = \"DELETE\",\n}\n\nexport const root = \"https://ya-praktikum.tech\";\nexport const base = \"/api/v2\";\nexport const apiBase = \"/api/local\";\n\nclass APIService {\n    private readonly base: Request | string;\n\n    constructor(isLocalBase?: boolean) {\n        this.base = isLocalBase ? apiBase : base;\n    }\n\n    async request(method: Method, url: string, data = {}) {\n        const response = await fetch(`${this.base}/${url}`, {\n            method,\n            mode: \"cors\", // no-cors, *cors, same-origin\n            cache: \"no-cache\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Credentials\": \"true\",\n            },\n            ...(method !== Method.GET && { body: JSON.stringify(data) }),\n        });\n        return response ?? null;\n    }\n}\n\nexport default new APIService();\n\nexport const LocalAPIService = new APIService(true);\n","import { createProxyMiddleware } from \"http-proxy-middleware\";\nimport { root, base } from \"@/services/API/API.service\";\n\nexport const apiProxy = createProxyMiddleware(base, {\n    target: root,\n    changeOrigin: true,\n    cookieDomainRewrite: \"udg.nomoredomains.work\",\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express-rate-limit\");","/* @ts-ignore */\nimport rateLimit from \"express-rate-limit\";\n\n// NOTE: Базовая защита от DDOS\nexport const limiterMiddleware = rateLimit({\n    windowMs: 20 * 60 * 1000,\n    max: 100,\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-dom/server\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-router-dom\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-redux\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-helmet\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"redux\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"redux-thunk\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"antd\");","import { notification } from \"antd\";\n\nimport APIService from \"@/services/API\";\nimport { Method } from \"@/services/API/API.service\";\n\nexport interface SignUpData {\n    second_name: string;\n    first_name: string;\n    email: string;\n    phone: string;\n    login: string;\n    password: string;\n}\n\nexport interface SignInData {\n    login: string;\n    password: string;\n}\n\nexport interface UserInfo extends SignUpData {\n    id: number,\n    avatar: string\n}\n\nconst root = \"auth\";\n\ntype Request = \"signIn\" | \"signOut\" | undefined;\n\nclass AuthApi {\n    isSuccessfulRequest(response: Response, type: Request = undefined) {\n        let message = \"Регистрация прошла успешно\";\n        let errorMessage = \"Отправленные данные не корректны\";\n        switch (response.status) {\n            case 200:\n                if (type) {\n                    message = type === \"signIn\"\n                        ? \"Выполнен вход в приложение\" : \"Выполнен выход из приложения\";\n                }\n                notification.success({ message });\n                return true;\n            case 400:\n                if (type === \"signIn\") {\n                    errorMessage = \"Пользователь уже авторизован в системе\";\n                }\n                notification.error({ message: errorMessage });\n                return false;\n            case 401:\n                notification.error({ message: \"Неверный логин или пароль\" });\n                return false;\n            case 500:\n                notification.error({ message: \"Произошла неизвестная ошибка\" });\n                return false;\n            default:\n                return false;\n        }\n    }\n\n    public async signUp(data: SignUpData): Promise<string | null> {\n        const response = await APIService.request(Method.POST, `${root}/signup`, data);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result.id ?? null;\n            }\n        }\n        return null;\n    }\n\n    public async signIn(data: SignInData): Promise<boolean> {\n        const response = await APIService.request(Method.POST, `${root}/signin`, data);\n        if (response) {\n            return this.isSuccessfulRequest(response, \"signIn\");\n        }\n        return false;\n    }\n\n    public async logOut(): Promise<boolean> {\n        const response = await APIService.request(Method.POST, `${root}/logout`);\n        if (response) {\n            return this.isSuccessfulRequest(response, \"signOut\");\n        }\n        return false;\n    }\n\n    public async getUserInfo(): Promise<UserInfo | null> {\n        const response = await APIService.request(Method.GET, `${root}/user`);\n        if (response.status === 200) {\n            const result = await response.json();\n            return result ?? null;\n        }\n        return null;\n    }\n}\n\nexport default new AuthApi();\n","import { notification } from \"antd\";\n\nimport APIService from \"@/services/API\";\nimport { Method } from \"@/services/API/API.service\";\nimport { SignUpData, UserInfo } from \"@/api/Auth\";\n\nconst root = \"user\";\n\nexport interface PasswordData {\n    oldPassword: string,\n    newPassword: string\n}\n\nenum ProfileDataType {\n    Common = \"Common\",\n    Password = \"Password\",\n}\n\ntype DisplayName = {\n    display_name: \"\"\n};\n\nclass ProfileApi {\n    isSuccessfulRequest(response: Response, dataType?: ProfileDataType) {\n        const errorMessage = \"Отправленные данные не корректны\";\n        let message = \"Данные успешно изменены\";\n        if (dataType) {\n            message = dataType === ProfileDataType.Common ? \"Данные профиля успешно изменены\"\n                : \"Пароль успешно изменен\";\n        }\n        switch (response.status) {\n            case 200:\n                notification.success({ message });\n                return true;\n            case 400:\n                notification.error({ message: errorMessage });\n                return false;\n            case 401:\n                notification.error({ message: \"Ошибка авторизации\" });\n                return false;\n            case 500:\n                notification.error({ message: \"Произошла неизвестная ошибка\" });\n                return false;\n            default:\n                return false;\n        }\n    }\n\n    public async setProfile(data: Omit<SignUpData, \"password\">): Promise<UserInfo | null> {\n        const requestData: Omit<SignUpData, \"password\"> & DisplayName = {\n            ...data,\n            display_name: \"\",\n        };\n        const response = await APIService.request(Method.PUT, `${root}/profile`, requestData);\n        if (response) {\n            const success = this.isSuccessfulRequest(response, ProfileDataType.Common);\n            if (success) {\n                const result = await response.json();\n                return result ?? null;\n            }\n        }\n        return null;\n    }\n\n    public async setPassword(data: PasswordData): Promise<boolean> {\n        const response = await APIService.request(Method.PUT, `${root}/password`, data);\n        if (response) {\n            return this.isSuccessfulRequest(response, ProfileDataType.Password);\n        }\n        return false;\n    }\n\n    // todo\n    public async setAvatar(data: any): Promise<UserInfo | null> {\n        const response = await APIService.request(Method.PUT, `${root}/avatar`, data);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result ?? null;\n            }\n        }\n        return null;\n    }\n}\n\nexport default new ProfileApi();\n","export const GET_PROFILE = \"GET_PROFILE\";\nexport const SET_PROFILE = \"SET_PROFILE\";\nexport const SET_PASSWORD = \"SET_PASSWORD\";\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\n","export const isServer = !(\r\n    typeof window !== \"undefined\"\r\n    && window.document\r\n    && window.document.createElement\r\n);\n","import { isServer } from \"./environment\";\n\n/* eslint-disable */\nexport const getCookie = (name: string) => {\n    if (!isServer) {\n        const matches = document.cookie.match(\n            new RegExp(\n                `(?:^|; )${\n                    name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\")\n                }=([^;]*)`,\n            ),\n        );\n\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    }\n\n    return false;\n};\n/* eslint-enable */\n\nexport const checkAccess = (): boolean => getCookie(\"isSignedIn\") === \"true\" || false;\n\nexport const checkOAuthSigned = (): boolean => getCookie(\"setSignedInOAuth\") === \"true\" || false;\n\nexport const setSigned = (value: boolean) => {\n    document.cookie = `isSignedIn=${value.toString()}`;\n};\n\nexport const setSignedOAuth = (value: boolean) => {\n    document.cookie = `setSignedInOAuth=${value.toString()}`;\n};\n\nexport const getUserIdCookie = () => getCookie(\"userId\") || \"\";\nexport const setUserIdCookie = (id: number) => document.cookie = `userId=${id.toString()}`;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport api, { SignUpData, UserInfo } from \"@/api/Auth/Auth.api\";\nimport profileApi, { PasswordData } from \"@/api/Profile/Profile.api\";\n\nimport {\n    GET_PROFILE,\n    PROFILE_LOADING,\n    SET_PROFILE,\n    SET_PASSWORD,\n} from \"./types/profile.types\";\nimport { setUserIdCookie } from \"@/helpers/acess\";\n\ntype ProfileFetched = {\n    type: typeof GET_PROFILE;\n    payload: { data: UserInfo };\n};\n\ntype ProfileUploaded = {\n    type: typeof SET_PROFILE;\n    payload: { data: UserInfo };\n};\n\ntype ProfileLoading = {\n    type: typeof PROFILE_LOADING;\n    payload: { isLoading: boolean };\n};\n\ntype PasswordUpdated = {\n    type: typeof SET_PASSWORD;\n};\n\nexport enum ProfileStages {\n    INIT = \"init\",\n    LOADING = \"loading\",\n    DONE = \"done\",\n}\n\nconst loading = (isLoading: boolean): ProfileLoading => ({\n    type: PROFILE_LOADING,\n    payload: { isLoading },\n});\n\nexport const profileFetchSuccess = (data: UserInfo): ProfileFetched => ({\n    type: GET_PROFILE,\n    payload: { data },\n});\n\nconst profileUploadSuccess = (data: UserInfo): ProfileFetched => ({\n    type: GET_PROFILE,\n    payload: { data },\n});\n\nconst passwordUpdateSuccess = () => ({\n    type: SET_PASSWORD,\n});\n\n// eslint-disable-next-line max-len\nexport const getProfile = (): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(loading(true));\n    try {\n        const response = await api.getUserInfo();\n        if (response) {\n            dispatch(profileFetchSuccess(response));\n            setUserIdCookie(response.id);\n        } else {\n            dispatch(loading(false));\n        }\n    } catch (error) {\n        dispatch(loading(false));\n    }\n};\n\nexport const setProfile = (\n    data: Omit<SignUpData, \"password\">,\n): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(loading(true));\n    try {\n        const response = await profileApi.setProfile(data);\n        if (response) {\n            dispatch(profileUploadSuccess(response));\n        } else {\n            dispatch(loading(false));\n        }\n    } catch (error) {\n        dispatch(loading(false));\n    }\n};\n\n// eslint-disable-next-line max-len\nexport const setPassword = (data: PasswordData): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(loading(true));\n    try {\n        const response = await profileApi.setPassword(data);\n        if (response) {\n            dispatch(passwordUpdateSuccess());\n        } else {\n            dispatch(loading(false));\n        }\n    } catch (error) {\n        dispatch(loading(false));\n    }\n};\n\nexport type ProfileAction =\n    | ProfileFetched\n    | ProfileUploaded\n    | ProfileLoading\n    | PasswordUpdated;\n","import { ProfileAction, ProfileStages } from \"@/actions/profile.actions\";\nimport {\n    GET_PROFILE,\n    PROFILE_LOADING,\n    SET_PASSWORD,\n    SET_PROFILE,\n} from \"@/actions/types/profile.types\";\n\nexport interface ProfileState {\n    data: {\n        id: number;\n        second_name: string;\n        first_name: string;\n        email: string;\n        phone: string;\n        login: string;\n        password: string;\n        avatar: string;\n    };\n    isLoading: boolean;\n    stage: ProfileStages;\n}\n\nconst initialState: ProfileState = {\n    data: {\n        id: 0,\n        second_name: \"\",\n        first_name: \"\",\n        email: \"\",\n        phone: \"\",\n        login: \"\",\n        password: \"\",\n        avatar: \"\",\n    },\n    isLoading: false,\n    stage: ProfileStages.INIT,\n};\n\n/* eslint-disable @typescript-eslint/default-param-last */\nexport const profileReducer = (\n    state: ProfileState = initialState,\n    action: ProfileAction,\n) => {\n    switch (action.type) {\n        case GET_PROFILE:\n            return {\n                data: { ...action.payload.data },\n                isLoading: false,\n                stage: ProfileStages.DONE,\n            };\n        case SET_PROFILE:\n            return {\n                data: { ...action.payload.data },\n                isLoading: false,\n                stage: ProfileStages.DONE,\n            };\n        case SET_PASSWORD:\n            return {\n                ...state,\n                isLoading: false,\n                stage: ProfileStages.DONE,\n            };\n        case PROFILE_LOADING:\n            return {\n                data: {},\n                isLoading: action.payload.isLoading,\n                stage: ProfileStages.LOADING,\n            };\n        default:\n            return state;\n    }\n};\n/* eslint-enable @typescript-eslint/default-param-last */\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_IN_OAUTH = \"SIGN_IN_OAUTH\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const LOADING = \"LOADING\";\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport { History } from \"history\";\nimport api, { SignInData } from \"@/api/Auth\";\nimport { routes } from \"@/config/routes/routes\";\nimport { setUserIdCookie, setSigned, setSignedOAuth } from \"@/helpers/acess\";\n\nimport {\n    LOADING, SIGN_IN, SIGN_OUT, SIGN_IN_OAUTH,\n} from \"./types/auth.types\";\n\ntype SignedIn = {\n    type: typeof SIGN_IN;\n};\n\ntype SignedInOAuth = {\n    type: typeof SIGN_IN_OAUTH;\n};\n\ntype SignedOut = {\n    type: typeof SIGN_OUT;\n};\n\ntype Loading = {\n    type: typeof LOADING;\n    payload: { isLoading: boolean };\n};\n\nexport enum AuthStages {\n    INIT = \"init\",\n    LOADING = \"loading\",\n    DONE = \"done\",\n}\n\nconst loading = (isLoading: boolean): Loading => ({\n    type: LOADING,\n    payload: { isLoading },\n});\n\nexport const signInSuccess = (): SignedIn => ({ type: SIGN_IN });\n\nexport const signInOAuthSuccess = (): SignedInOAuth => ({\n    type: SIGN_IN_OAUTH,\n});\n\nexport const signOutSuccess = (): SignedOut => ({ type: SIGN_OUT });\n\nexport const signIn = (\n    data: SignInData,\n    history: History,\n): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(loading(true));\n    try {\n        const response = await api.signIn(data);\n        if (response) {\n            dispatch(signInSuccess());\n            setSigned(true);\n            history.push(routes.main.path);\n        } else {\n            dispatch(loading(false));\n        }\n    } catch (error) {\n        dispatch(loading(false));\n    }\n};\n\n// eslint-disable-next-line max-len\nexport const signInOAuth = (history: History): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(signInOAuthSuccess());\n    setSignedOAuth(true);\n    history.push(routes.main.path);\n};\n\n// eslint-disable-next-line max-len\nexport const signOut = (history: History): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(loading(true));\n    setSigned(false);\n    setSignedOAuth(false);\n    setUserIdCookie(0);\n    history.push(routes.signIn.path);\n    try {\n        const response = await api.logOut();\n        if (response) {\n            dispatch(signOutSuccess());\n        } else {\n            dispatch(loading(false));\n        }\n    } catch (error) {\n        dispatch(loading(false));\n    }\n};\n\nexport type AuthAction = SignedOut | SignedIn | Loading | SignedInOAuth;\n","import {\n    LOADING,\n    SIGN_IN,\n    SIGN_OUT,\n    SIGN_IN_OAUTH,\n} from \"@/actions/types/auth.types\";\nimport { checkAccess } from \"@/helpers/acess\";\nimport { AuthAction, AuthStages } from \"@/actions/auth.actions\";\n\nexport interface AuthState {\n    isSignedIn: boolean;\n    isSignedInOAuth: boolean;\n    isLoading: boolean;\n    stage: AuthStages;\n}\n\nexport const initialState: AuthState = {\n    isSignedIn: checkAccess(),\n    isSignedInOAuth: checkAccess(),\n    isLoading: false,\n    stage: AuthStages.INIT,\n};\n\n/* eslint-disable @typescript-eslint/default-param-last */\nexport const authReducer = (\n    state: AuthState = initialState,\n    action: AuthAction,\n) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return {\n                isSignedIn: true,\n                isSignedInOAuth: false,\n                isLoading: false,\n                stage: AuthStages.DONE,\n            };\n        case SIGN_IN_OAUTH:\n            return {\n                isSignedIn: false,\n                isSignedInOAuth: true,\n                isLoading: false,\n                stage: AuthStages.DONE,\n            };\n        case SIGN_OUT:\n            return {\n                isSignedIn: false,\n                isSignedInOAuth: false,\n                isLoading: false,\n                stage: AuthStages.DONE,\n            };\n        case LOADING:\n            return {\n                isSignedIn: false,\n                isSignedInOAuth: false,\n                isLoading: action.payload.isLoading,\n                stage: AuthStages.LOADING,\n            };\n        default:\n            return state;\n    }\n};\n/* eslint-enable @typescript-eslint/default-param-last */\n","export const SET_THEME = \"SET_THEME\";\n","export const TOPIC_LOAD = \"TOPIC_LOAD\";\nexport const TOPIC_SET_LOADING = \"TOPIC_SET_LOADING\";\n","import { TopicAction } from \"@/actions/topic.actions\";\nimport { TOPIC_LOAD, TOPIC_SET_LOADING } from \"@/actions/types/topic.types\";\n\nexport interface TopicEditData {\n    title: string,\n    body: string,\n}\n\ninterface TopicData extends TopicEditData {\n    id: number,\n    created_at: string,\n    user_id: number,\n    comments_count: number | null,\n}\n\nexport interface TopicState {\n    isLoading: boolean\n    data: TopicData\n}\n\nexport const TOPIC_INIT_STATE: TopicState = {\n    isLoading: false,\n    data: {\n        id: 0,\n        title: \"\",\n        body: \"\",\n        created_at: \"\",\n        user_id: 0,\n        comments_count: null,\n    },\n};\n\n/* eslint-disable @typescript-eslint/default-param-last */\nexport const topicReducer = (\n    state: TopicState = TOPIC_INIT_STATE,\n    action: TopicAction,\n): TopicState => {\n    switch (action.type) {\n        case TOPIC_LOAD:\n            return {\n                ...state,\n                data: action.payload.data,\n            };\n        case TOPIC_SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload.isLoading,\n            };\n        default:\n            return state;\n    }\n};\n/* eslint-enable @typescript-eslint/default-param-last */\n","export const LOAD = \"LOAD_LEADERBOARD\";\nexport const SET_LOADING = \"SET_LOADING_LEADERBOARD\";\n","import { LeaderBoardAction } from \"@/actions/leaderboard.actions\";\nimport { LOAD, SET_LOADING } from \"@/actions/types/leaderboard.types\";\nimport { LeaderBoardData } from \"@/config/leaderboard\";\n\nexport interface LeaderBoardState {\n    isLoading: boolean\n    data: LeaderBoardData\n}\n\nexport const LEADERBOARD_INIT_STATE: LeaderBoardState = {\n    isLoading: false,\n    data: [],\n};\n\n/* eslint-disable @typescript-eslint/default-param-last */\nexport const leaderBoardReducer = (\n    state: LeaderBoardState = LEADERBOARD_INIT_STATE,\n    action: LeaderBoardAction,\n): LeaderBoardState => {\n    switch (action.type) {\n        case LOAD:\n            return {\n                ...state,\n                data: action.payload.data,\n            };\n        case SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload.isLoading,\n            };\n        default:\n            return state;\n    }\n};\n/* eslint-enable @typescript-eslint/default-param-last */\n","export const FORUM_LOAD = \"LOAD_FORUM\";\nexport const FORUM_SET_LOADING = \"SET_LOADING_FORUM\";\n","import { ForumAction } from \"@/actions/forum.actions\";\nimport { FORUM_LOAD, FORUM_SET_LOADING } from \"@/actions/types/forum.types\";\n\nexport interface ForumState {\n    isLoading: boolean\n    data: any\n}\n\nexport const FORUM_INIT_STATE: ForumState = {\n    isLoading: false,\n    data: [],\n};\n\n/* eslint-disable @typescript-eslint/default-param-last */\nexport const forumReducer = (\n    state: ForumState = FORUM_INIT_STATE,\n    action: ForumAction,\n): ForumState => {\n    switch (action.type) {\n        case FORUM_LOAD:\n            return {\n                ...state,\n                data: action.payload.data,\n            };\n        case FORUM_SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload.isLoading,\n            };\n        default:\n            return state;\n    }\n};\n/* eslint-enable @typescript-eslint/default-param-last */\n","import {\n    createStore, compose, combineReducers, applyMiddleware,\n} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { profileReducer, ProfileState } from \"@/reducers/profile.reducer\";\nimport { authReducer, AuthState } from \"@/reducers/auth.reducer\";\nimport { themeReducer } from \"@/reducers/theme.reducer\";\nimport { Theme } from \"@/api/Theme/Theme.api\";\nimport { topicReducer, TopicState } from \"@/reducers/topic.reducer\";\nimport {\n    leaderBoardReducer,\n    LeaderBoardState,\n} from \"@/reducers/leaderboard.reducer\";\n\nimport { isServer } from \"@/helpers/environment\";\nimport { ForumState, forumReducer } from \"@/reducers/forum.reducer\";\n\nexport interface RootState {\n    auth: AuthState;\n    profile: ProfileState;\n    leaderBoard: LeaderBoardState;\n    theme: Theme;\n    forum: ForumState;\n    topic: TopicState;\n}\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    profile: profileReducer,\n    leaderBoard: leaderBoardReducer,\n    theme: themeReducer,\n    forum: forumReducer,\n    topic: topicReducer,\n});\n\nconst initialState = !isServer ? window.__INITIAL_STATE__ : {};\n\nconst configureStore = () => createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(thunk),\n        !isServer && window.__REDUX_DEVTOOLS_EXTENSION__\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\n            : (f: () => void) => f,\n    ),\n);\n\nexport default configureStore;\n","import { ThemeAction } from \"@/actions/theme.actions\";\nimport { Theme } from \"@/api/Theme/Theme.api\";\nimport { SET_THEME } from \"@/actions/types/theme.types\";\n\nconst initialState: Theme = null;\n\n/* eslint-disable @typescript-eslint/default-param-last */\nexport const themeReducer = (\n    state: Theme = initialState,\n    action: ThemeAction,\n) => {\n    switch (action.type) {\n        case SET_THEME:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n/* eslint-enable @typescript-eslint/default-param-last */\n","import React, { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props {\n    children: ReactNode;\n}\n\ninterface State {\n    error: Error | null,\n    errorInfo: ErrorInfo | null\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n            errorInfo: null,\n        };\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({\n            error,\n            errorInfo,\n        });\n        // Log error info somewhere\n    }\n\n    // todo\n    render() {\n        if (this.state.error) {\n            return <h2>Something went wrong!</h2>;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React, { FC, ReactNode } from \"react\";\n\nimport { Modal as CustomModal } from \"antd\";\n\nimport styles from \"./GameModal.module.scss\";\n\ninterface Props {\n    isActive?: boolean;\n    children?: ReactNode;\n    title?: string;\n}\n\nconst GameModal: FC<Props> = ({ isActive, children, title }) => (\n    <CustomModal\n        className={styles.gameModal}\n        title={title}\n        visible={isActive}\n        footer={null}\n        closable={false}\n    >\n        <div className={styles.buttonContainer}>{children}</div>\n    </CustomModal>\n);\n\nexport default GameModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"ultcbUs8Qt8tCIj5tXOH\",\"gameModal\":\"xIdsnPhxwe4Zq0BRMNiF\",\"title\":\"DuSwT0NBq2F0kQETkcW_\"};","export const apiRoutes = {\n    oauth: {\n        providerURLRoot: \"https://oauth.yandex.ru/authorize?response_type=code\",\n        redirectURI: \"https://udg.nomoredomains.work\", // localhost:3000\n        serviceId: \"oauth/yandex/service-id\",\n        signIn: \"oauth/yandex\",\n        udcClientId: \"b7aa7e3038ed42358ea3cd11acddef45\",\n    },\n};\n","import { notification } from \"antd\";\n\nimport APIService from \"@/services/API\";\nimport { Method } from \"@/services/API/API.service\";\nimport { apiRoutes } from \"@/config/apiRoutes\";\n\nconst { serviceId, signIn, redirectURI } = apiRoutes.oauth;\n\nclass OAuthApi {\n    isSuccessfulRequest(response: Response, isSignIn?: boolean) {\n        const errorMessage = \"Отправленные данные не корректны\";\n        switch (response.status) {\n            case 200:\n                if (isSignIn) {\n                    notification.success({ message: \"Вход выполнен успешно\" });\n                }\n                return true;\n            case 400:\n                notification.error({ message: errorMessage });\n                return false;\n            case 401:\n                notification.error({ message: \"Ошибка доступа\" });\n                return false;\n            case 500:\n                notification.error({ message: \"Произошла неизвестная ошибка\" });\n                return false;\n            default:\n                return false;\n        }\n    }\n\n    public async getServiceId(redirectURI: string): Promise<string | null> {\n        const response = await APIService.request(Method.GET, serviceId, redirectURI);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result.service_id ?? null;\n            }\n        }\n        return null;\n    }\n\n    public async signUpWithYandex(code: string): Promise<boolean> {\n        const response = await APIService.request(Method.POST, signIn, {\n            code,\n            redirect_uri: redirectURI,\n        });\n        if (response) {\n            return this.isSuccessfulRequest(response, true);\n        }\n        return false;\n    }\n}\n\nexport default new OAuthApi();\n","import { useEffect } from \"react\";\n\n/**\n * Вызывает effectCallback при маунте компонента\n */\nexport const useMountEffect = (effectCallback: () => (() => void) | void) => {\n    useEffect(effectCallback, []);\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@ant-design/icons\");","import React, { FC } from \"react\";\n\nimport styles from \"./Container.module.scss\";\n\nconst Container: FC = ({ children }) => (\n    <div className={styles.container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kJXI1z3_FtxH2idolQUx\"};","import React, { FC } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\ntype Props = {\r\n    title?: string;\r\n    description?: string;\r\n    image?: string;\r\n};\r\n\r\nconst cutTags = (text: string = \"\") => text.replace(/<\\/?.+?>/gi, \"\");\r\n\r\nconst prepareData = ({ title, description, image }: Props) => ({\r\n    title: cutTags(title),\r\n    description: cutTags(description).substr(0, 250),\r\n    image,\r\n});\r\n\r\nconst PageMeta: FC<Props> = (props) => {\r\n    const { title, description, image } = prepareData(props);\r\n\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta property=\"og:title\" content={title} />\r\n            <meta property=\"twitter:title\" content={title} />\r\n            {Boolean(description) && (\r\n                <meta name=\"description\" content={description} />\r\n            )}\r\n            {Boolean(description) && (\r\n                <meta property=\"og:description\" content={description} />\r\n            )}\r\n            {Boolean(description) && (\r\n                <meta property=\"twitter:description\" content={description} />\r\n            )}\r\n            {Boolean(image) && <meta property=\"og:image\" content={image} />}\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageMeta;\r\n","import React, { FC } from \"react\";\nimport { Input as CustomInput } from \"antd\";\n\nimport { LockOutlined } from \"@ant-design/icons\";\n\ninterface Props {\n    placeholder: string\n}\n\nconst { Password } = CustomInput;\n\nconst CustomPassword:FC<Props> = (props) => (\n    <Password\n        prefix={<LockOutlined />}\n        iconRender={() => false}\n        {...props}\n    />\n);\n\nexport default CustomPassword;\n","import React, { FC } from \"react\";\nimport { Button as CustomButton, ButtonProps } from \"antd\";\n\ninterface Props extends ButtonProps {}\n\nconst Button:FC<Props> = (props) => (<CustomButton {...props}/>);\n\nexport default Button;\n","import {\n    useSelector as useReduxSelector,\n    TypedUseSelectorHook,\n} from \"react-redux\";\n\nimport { RootState } from \"store/store\";\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"mTFHSVjnSUFdoSnWwGhe\",\"logo\":\"AQj0qjGusBKgpXIQViBm\",\"logoMainSymbol\":\"aNbRr60ArYUg5LfoQFU1\",\"buttonContainer\":\"zVYRLMeG9dFBljEerzGQ\",\"routesContainer\":\"XUShHu6oinx4l6jUlqoK\",\"signUp\":\"HEQhGHtynWtNqUFywT1T\",\"signIn\":\"AprMwPhjHqR_T2NfcvnM\"};","import React, { FC } from \"react\";\nimport { Switch as CustomSwitch, SwitchProps } from \"antd\";\n\ninterface Props extends SwitchProps {}\n\nconst Switch:FC<Props> = (props) => (<CustomSwitch {...props}/>);\n\nexport default Switch;\n","import { Method, LocalAPIService } from \"@/services/API/API.service\";\n\nexport type Theme = \"light\" | \"dark\" | null;\nexport type ThemeData = {\n    theme: Theme;\n    user_id: string;\n    id?: number\n};\n\nconst root = \"themes\";\n\nclass ThemeApi {\n    public async getTheme(id: string): Promise<ThemeData | null> {\n        const response = await LocalAPIService.request(Method.GET, `${root}/${id}`);\n\n        if (response.status === 200) {\n            const result = await response.json();\n            return result ?? null;\n        }\n\n        return null;\n    }\n\n    public async updateTheme(id: string, data: Theme): Promise<ThemeData | null> {\n        // eslint-disable-next-line max-len\n        const response = await LocalAPIService.request(Method.PUT, `${root}/${id}`, { theme: data });\n        if (response.status === 200) {\n            const result = await response.json();\n            return result ?? null;\n        }\n        return null;\n    }\n\n    public async createTheme(data: ThemeData): Promise<ThemeData | null> {\n        const response = await LocalAPIService.request(Method.POST, root, data);\n        if (response.status === 200) {\n            const result = await response.json();\n            return result ?? null;\n        }\n        return null;\n    }\n}\n\nexport default new ThemeApi();\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { getUserIdCookie } from \"@/helpers/acess\";\n\nimport api, { Theme, ThemeData } from \"@/api/Theme/Theme.api\";\n\nimport {\n    SET_THEME,\n} from \"./types/theme.types\";\n\ntype ThemeRequest = {\n    type: typeof SET_THEME;\n    payload: Theme | null;\n};\n\nconst LIGHT_THEME = \"light\";\nconst DARK_THEME = \"dark\";\n\n// Обновляем тему в DOM\nconst updateDOMTheme = (theme: string) => {\n    if (theme === DARK_THEME) {\n        document.body.classList.remove(LIGHT_THEME);\n    } else if (theme === LIGHT_THEME) {\n        document.body.classList.remove(DARK_THEME);\n    }\n\n    document.body.classList.add(theme);\n};\n\nexport const themeRequest = (data: Theme | null): ThemeRequest => ({\n    type: SET_THEME,\n    payload: data,\n});\n\n// eslint-disable-next-line max-len\nexport const getTheme = (): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    const id = getUserIdCookie();\n    const themeData: ThemeData | null = await api.getTheme(id);\n    const theme = themeData?.theme || LIGHT_THEME;\n    dispatch(themeRequest(theme));\n    //\n    updateDOMTheme(theme);\n};\n\n// eslint-disable-next-line max-len\nexport const updateTheme = (data: Theme): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    const id = getUserIdCookie();\n    const themeData: ThemeData | null = await api.updateTheme(id, data);\n    const theme = themeData?.theme || LIGHT_THEME;\n    dispatch(themeRequest(theme));\n    //\n    updateDOMTheme(theme);\n};\n\n// eslint-disable-next-line max-len\nexport const createTheme = (data: Theme): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    const userId = getUserIdCookie();\n    const themeData: ThemeData | null = await api.createTheme({\n        theme: data,\n        user_id: userId,\n    });\n    const theme = themeData?.theme || LIGHT_THEME;\n    dispatch(themeRequest(theme));\n    //\n    if (!themeData) return;\n    //\n    updateDOMTheme(theme);\n};\n\nexport type ThemeAction =\n    | ThemeRequest;\n","import React, { FC, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./NavBar.module.scss\";\n\nimport Switch from \"@/components/Switch\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\nimport { routes as appRoutes } from \"@/config/routes/routes\";\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { useTheme } from \"./Navbar.helpers\";\n\nexport interface Route {\n    path: string;\n    label: string;\n}\n\ninterface Props {\n    currentPath?: string;\n}\n\nconst NavBar: FC<Props> = ({ currentPath }) => {\n    const isSignedIn = useSelector((state) => state.auth.isSignedIn);\n    const isSignedInOAuth = useSelector((state) => state.auth.isSignedInOAuth);\n    const [routes, setRoutes] = useState<Route[]>([]);\n    const { theme, changeTheme } = useTheme();\n\n    const allRoutes = [\n        // { path: appRoutes.about.path, label: \"Об игре\" },\n        { path: appRoutes.profile.path, label: \"Профиль\" },\n        { path: appRoutes.leaderboard.path, label: \"Таблица лидеров\" },\n        { path: appRoutes.forum.path, label: \"Форум\" },\n        { path: appRoutes.signUp.path, label: \"Регистрация\" },\n        { path: appRoutes.signIn.path, label: \"Вход\" },\n    ];\n\n    useMountEffect(() => {\n        if (isSignedIn || isSignedInOAuth) {\n            setRoutes(\n                allRoutes.filter(\n                    (route) => route.path !== appRoutes.signUp.path\n                                && route.path !== appRoutes.signIn.path,\n                ),\n            );\n        } else {\n            setRoutes(\n                allRoutes.filter(\n                    (route) => route.path === appRoutes.signUp.path\n                                || route.path === appRoutes.signIn.path,\n                ),\n            );\n        }\n    });\n\n    return (\n        <nav className={styles.ulContainer}>\n            <ul className={styles.ul}>\n                {routes.map((route) => (\n                    <li\n                        className={\n                            route.path === currentPath\n                                ? styles.active\n                                : styles.inactive\n                        }\n                        key={route.path}\n                    >\n                        <Link to={route.path}>{route.label}</Link>\n                    </li>\n                ))}\n\n                {(isSignedIn || isSignedInOAuth) && <Switch onClick={() => changeTheme(theme)} />}\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import { useDispatch } from \"react-redux\";\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { Theme } from \"@/api/Theme/Theme.api\";\nimport { updateTheme, createTheme } from \"@/actions/theme.actions\";\n\nexport const useTheme = () => {\n    const dispatch = useDispatch();\n    const theme = useSelector((state) => state.theme);\n\n    const changeTheme = (theme: Theme | null) => {\n        if (theme === \"light\") {\n            dispatch(updateTheme(\"dark\"));\n        } else if (theme === \"dark\") {\n            dispatch(updateTheme(\"light\"));\n        } else {\n            dispatch(createTheme(\"dark\"));\n        }\n    };\n\n    return {\n        theme,\n        changeTheme,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ulContainer\":\"FGIBGaQePsS7MPrLD6AI\",\"ul\":\"VhefOyE6KqL2INmTvax_\",\"active\":\"eb4qUgSDxGoiL722sZWU\",\"inactive\":\"FeWI55JQiPAKhK8Rt5kQ\"};","import React, { FC } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"antd\";\n\nimport { useHeader } from \"./Header.helpers\";\nimport { routes as appRoutes } from \"@/config/routes/routes\";\nimport { useSelector } from \"@/hooks/useSelector\";\n\nimport styles from \"./Header.module.scss\";\nimport NavBar from \"../NavBar\";\n\nconst { Text } = Typography;\n\ninterface Props {\n    currentPath?: string;\n}\n\nconst Header: FC<Props> = ({ currentPath }) => {\n    const { renderSignOutButton } = useHeader();\n\n    const isSignedIn = useSelector((state) => state.auth.isSignedIn);\n    const isSignedInOAuth = useSelector((state) => state.auth.isSignedInOAuth);\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.logo}>\n                <Link to={appRoutes.main.path} className={styles.logoSymbols}>\n                    <span className={styles.logoMainSymbol}>U</span>\n                    <Text type=\"secondary\">DC</Text>\n                </Link>\n            </div>\n            <div className={styles.routesContainer}>\n                <NavBar currentPath={currentPath} />\n                <div className={styles.buttonContainer}>\n                    {(isSignedIn || isSignedInOAuth) && renderSignOutButton()}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { signOut } from \"@/actions/auth.actions\";\nimport Button from \"@/components/Button\";\n\nexport const useHeader = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onSignOut = useCallback(async (event: any) => {\n        event.preventDefault();\n        dispatch(signOut(history));\n    }, []);\n\n    const renderSignOutButton = () => (\n        <Button onClick={onSignOut}>Выйти</Button>\n    );\n\n    return {\n        renderSignOutButton,\n    };\n};\n","import React, { FC } from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./PageLoader.module.scss\";\n\ninterface Props {\n    isSpinning: boolean;\n}\n\nconst PageLoader: FC<Props> = ({ isSpinning, children }) => {\n    const antIcon = <LoadingOutlined style={{ fontSize: 72 }} spin />;\n    return (\n        <>\n            <Spin className={styles.spinner} indicator={antIcon}size={\"large\"}\n                spinning={isSpinning} />\n            <div className={!isSpinning ? styles.init : styles.loading}>\n                {children}\n            </div>\n        </>\n    );\n};\n\nexport default PageLoader;\n","// extracted by mini-css-extract-plugin\nexport default {\"init\":\"NK4oWEno3OTBZGk14ybv\",\"loading\":\"E504S1U9EEZmM5IH4xUx\",\"spinner\":\"kySekU_9UevbfgBcgQyY\"};","import { useHistory } from \"react-router-dom\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport { SignInData } from \"@/api/Auth\";\nimport { signIn } from \"@/actions/auth.actions\";\nimport { useSelector } from \"@/hooks/useSelector\";\n\nexport enum SignInFieldNames {\n    Login = \"login\",\n    Password = \"password\",\n}\n\nexport const useSignInForm = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const isLoading = useSelector((state) => state.auth.isLoading);\n\n    const onFinish = useCallback(async (values: SignInData) => {\n        dispatch(signIn(values, history));\n    }, []);\n\n    const onFinishFailed = (errorInfo: Error) => console.log(\"Failed:\", errorInfo);\n\n    return {\n        currentPath: routes.signIn.path,\n        onFinish,\n        onFinishFailed,\n        isLoading,\n    };\n};\n","import React, { FC, useCallback } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { LoginOutlined } from \"@ant-design/icons\";\n\nimport Button from \"@/components/Button\";\n// import api from \"@/api/OAuth\";\nimport { apiRoutes } from \"@/config/apiRoutes\";\n// import { getProfile } from \"@/actions/profile.actions\";\n\nimport styles from \"./YandexSignIn.module.scss\";\n\nconst { providerURLRoot, redirectURI, udcClientId } = apiRoutes.oauth;\n\nconst providerURL = (clientId: string) => `${providerURLRoot}&client_id=${clientId}\n&redirect_uri=${redirectURI}`;\n\nconst YandexSignIn: FC = () => {\n    // const dispatch = useDispatch();\n\n    const onClick = useCallback(async () => {\n        // api.getServiceId(redirectURI)\n        //     .then((serviceId) => {\n        //         if (serviceId) {\n        //             window.location.replace(providerURL(serviceId));\n        //         }\n        //         dispatch(getProfile());\n        //     })\n        //     .catch((error) => {\n        //         console.log(error);\n        //     });\n        window.location.replace(providerURL(udcClientId));\n    }, []);\n\n    return (\n        <Button className={styles.link} onClick={onClick} >\n            <LoginOutlined className={styles.icon}/>\n            Войти через Яндекс\n        </Button>\n    );\n};\n\nexport default YandexSignIn;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"yHwKfZYQBg7DNphUOjwh\",\"icon\":\"tsI5LJ1GqWtO8I4zgmyX\"};","import React, { FC } from \"react\";\nimport { Input, Button, Form } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport Container from \"@/components/Container\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Password from \"@/components/Password\";\nimport Header from \"@/components/Header\";\nimport PageLoader from \"@/components/PageLoader\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport styles from \"./SignIn.module.scss\";\nimport { SignInFieldNames, useSignInForm } from \"./SignIn.helpers\";\nimport YandexSignIn from \"./YandexSignIn/YandexSignIn.view\";\n\nconst SignIn: FC = () => {\n    const { onFinish, onFinishFailed, isLoading } = useSignInForm();\n\n    return (\n        <PageLoader isSpinning={isLoading}>\n            <Container>\n                <PageMeta title=\"SignIn\" description=\"SignIn page\" />\n                <Header currentPath={routes.signIn.path} />\n                <div className={styles.formContainer}>\n                    <Form\n                        name=\"signIn\"\n                        onFinish={onFinish}\n                        onFinishFailed={() => onFinishFailed}\n                        layout=\"vertical\"\n                    >\n                        <Form.Item\n                            name={SignInFieldNames.Login}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Введите логин\",\n                                },\n                            ]}\n                        >\n                            <Input\n                                placeholder=\"логин\"\n                                prefix={<UserOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name={SignInFieldNames.Password}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Введите пароль\",\n                                },\n                            ]}\n                        >\n                            <Password placeholder=\"пароль\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button block type=\"primary\" htmlType=\"submit\">\n                                Войти\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <YandexSignIn/>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Container>\n        </PageLoader>\n    );\n};\n\nexport default SignIn;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"C9kTxACIRCoIHh4xS7yE\"};","import { useHistory } from \"react-router-dom\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport api, { SignUpData } from \"@/api/Auth\";\n\nenum SignUpFieldNames {\n    SecondName = \"second_name\",\n    FirstName = \"first_name\",\n    Email = \"email\",\n    Phone = \"phone\",\n    Login = \"login\",\n    Password = \"password\",\n}\n\nexport const useSignUp = () => {\n    const history = useHistory();\n\n    const fieldSet = [\n        {\n            name: SignUpFieldNames.SecondName,\n            rules: [{ required: true, message: \"Введите фамилию\" }],\n            placeholder: \"Фамилия\",\n        },\n        {\n            name: SignUpFieldNames.FirstName,\n            rules: [{ required: true, message: \"Введите имя\" }],\n            placeholder: \"Имя\",\n        },\n        {\n            name: SignUpFieldNames.Email,\n            rules: [{ required: true, message: \"Введите почту\" }],\n            placeholder: \"Эл. почта\",\n        },\n        {\n            name: SignUpFieldNames.Phone,\n            rules: [{ required: true, message: \"Введите телефон\" }],\n            placeholder: \"Телефон\",\n        },\n        {\n            name: SignUpFieldNames.Login,\n            rules: [{ required: true, message: \"Введите логин\" }],\n            placeholder: \"Логин\",\n        },\n        {\n            name: SignUpFieldNames.Password,\n            rules: [{ required: true, message: \"Введите пароль\" }],\n            placeholder: \"Пароль\",\n            type: \"password\",\n        },\n    ];\n\n    const onFinish = async (values: SignUpData) => {\n        const response = await api.signUp(values);\n        if (response) {\n            history.push(routes.signIn.path);\n        }\n    };\n\n    const onFinishFailed = (errorInfo: Error) => console.log(\"Failed:\", errorInfo);\n\n    return {\n        currentPath: routes.signUp.path,\n        fieldSet,\n        onFinish,\n        onFinishFailed,\n    };\n};\n","import React, { FC } from \"react\";\nimport { Input, Button, Form } from \"antd\";\n\nimport Container from \"@/components/Container\";\nimport Header from \"@/components/Header\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport styles from \"./SignUp.module.scss\";\nimport { useSignUp } from \"./SignUp.helpers\";\n\nconst SignUp: FC = () => {\n    const {\n        fieldSet, onFinish, onFinishFailed,\n    } = useSignUp();\n\n    return (\n        <Container>\n            <Header currentPath={routes.signUp.path} />\n            <div className={styles.formContainer}>\n                <Form\n                    name=\"signUp\"\n                    onFinish={onFinish}\n                    onFinishFailed={() => onFinishFailed}\n                    layout=\"vertical\"\n                >\n                    {fieldSet.map((set, index) => (\n                        <Form.Item\n                            name={set.name}\n                            rules={set.rules}\n                            key={`${set.name}-${index}`}\n                        >\n                            <Input\n                                type={set.type ?? \"\"}\n                                placeholder={set.placeholder}\n                            />\n                        </Form.Item>\n                    ))}\n                    <Form.Item>\n                        <Button block type=\"primary\" htmlType=\"submit\">\n                            Зарегистрироваться\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </Container>\n    );\n};\n\nexport default SignUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"_4r4fQwgzOuwIOzlNjdva\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pAZsGDSIwHLk6FyMvuHq\",\"infoContainer\":\"SCceGicoKjZbSFCUBNKH\",\"title\":\"jmDUZnAIerxVoLf7HHyx\",\"titleMain\":\"DSp6h4AcHxJnmSxh5kSL\",\"info\":\"oautDfGR7aAKuM_pwWJO\",\"gameHref\":\"cXj9rBw90d6eB9h24ZiA\"};","import React, { FC } from \"react\";\nimport { Typography, Button } from \"antd\";\n\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport Container from \"@/components/Container\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Header from \"@/components/Header\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport styles from \"./Main.module.scss\";\nimport { getProfile } from \"@/actions/profile.actions\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\n\nconst { Text } = Typography;\n\nconst Main: FC = () => {\n    const {\n        title, info, infoContainer, container,\n    } = styles;\n\n    const dispatch = useDispatch();\n\n    useMountEffect(() => {\n        dispatch(getProfile());\n    });\n\n    return (\n        <Container>\n            <PageMeta title=\"Main\" description=\"Main page\" />\n            <Header />\n            <div className={container}>\n                <div className={infoContainer}>\n                    <Typography className={title}>\n                        <span className={styles.titleMain}>Ultimate</span>\n                        <Text type=\"secondary\"> Dungeon Crawler</Text>\n                    </Typography>\n                    <Typography className={info}>\n                        Очисти некогда великую обитель от насилия монстров и заблудших душ\n                    </Typography>\n                    <Link to={routes.game.path}>\n                        <Button type=\"primary\">\n                            Играть\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Main;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"antd/lib/form/Form\");","import {\n    FC, useCallback, useEffect, useState,\n} from \"react\";\nimport { Input } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useDispatch, shallowEqual } from \"react-redux\";\n\nimport { PasswordData } from \"api/Profile\";\nimport { routes } from \"@/config/routes/routes\";\nimport Password from \"@/components/Password\";\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { getProfile, setPassword, setProfile } from \"@/actions/profile.actions\";\nimport { SignUpData, UserInfo } from \"@/api/Auth\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\nimport { checkOAuthSigned } from \"@/helpers/acess\";\n\nexport interface FieldSet {\n    name: string,\n    disabled: boolean,\n    required: boolean,\n    message?: string,\n    placeholder: string,\n    component: typeof Input | FC<any>,\n}\n\nconst initialFields: FieldSet[] = [\n    {\n        name: \"first_name\",\n        disabled: true,\n        required: false,\n        placeholder: \"Имя\",\n        component: Input,\n    },\n    {\n        name: \"second_name\",\n        disabled: true,\n        required: false,\n        placeholder: \"Фамилия\",\n        component: Input,\n    },\n    {\n        name: \"email\",\n        disabled: true,\n        required: true,\n        message: \"Введите эл. почту\",\n        placeholder: \"Эл. почта\",\n        component: Input,\n    },\n    {\n        name: \"phone\",\n        disabled: true,\n        required: false,\n        placeholder: \"Телефон\",\n        component: Input,\n    },\n    {\n        name: \"login\",\n        disabled: true,\n        required: true,\n        message: \"Введите логин\",\n        placeholder: \"Логин\",\n        component: Input,\n    },\n];\n\nconst passwordFields: FieldSet[] = [\n    {\n        name: \"oldPassword\",\n        disabled: true,\n        required: false,\n        message: \"Введите старый пароль\",\n        placeholder: \"Старый пароль\",\n        component: Password,\n    },\n    // todo добавить validationRules фнукцию, триггерит обязательность, если заполнен oldPassword\n    {\n        name: \"newPassword\",\n        disabled: true,\n        required: false,\n        message: \"Введите новый пароль\",\n        placeholder: \"Новый пароль\",\n        component: Password,\n    },\n];\n\nexport const useProfileForm = () => {\n    const [isEdit, setIsEdit] = useState<boolean>(false);\n    const [isOAuthSigned, setIsOAuthSigned] = useState<boolean>(false);\n    const [form] = useForm();\n    const dispatch = useDispatch();\n\n    const { data, isLoading } = useSelector((state) => state.profile, shallowEqual);\n\n    useMountEffect(() => {\n        dispatch(getProfile());\n        setIsOAuthSigned(checkOAuthSigned());\n    });\n\n    useEffect(() => {\n        form.setFieldsValue(data);\n    }, [form, data]);\n\n    const onFinish = useCallback((values: SignUpData & PasswordData) => {\n        const { oldPassword, newPassword, ...rest } = values;\n        dispatch(setProfile(rest));\n        if (oldPassword && newPassword) {\n            dispatch(setPassword({ oldPassword, newPassword }));\n        }\n    }, []);\n\n    const onFinishFailed = useCallback(\n        (errorInfo: UserInfo) => console.log(\"Failed:\", errorInfo),\n        [],\n    );\n\n    return {\n        currentPath: routes.profile.path,\n        onFinish,\n        onFinishFailed,\n        isEdit,\n        setIsEdit,\n        isOAuthSigned,\n        profile: data,\n        form,\n        fields: initialFields,\n        passwordFields,\n        isLoading,\n    };\n};\n","import React from \"react\";\nimport { Form } from \"antd\";\n\nimport { FieldSet } from \"../../Profile.helpers\";\n\n// TODO: либо отключить правило в eslint либо затянуть конфиг для Prettier\n// eslint-disable-next-line max-len\nexport const renderFieldSet = (fields: FieldSet[], isEdit: boolean) => fields.map((item: any, index: number) => {\n    const {\n        component: Item, name, message, required, disabled, placeholder,\n    } = item;\n    return (\n        <Form.Item\n            key={`item-${index}`}\n            name={name}\n            rules={[{ required, message }]}\n        >\n            <Item disabled={disabled && !isEdit} placeholder={placeholder} />\n        </Form.Item>\n    );\n});\n","import React, { FC } from \"react\";\n\nimport { useProfileForm } from \"../../Profile.helpers\";\nimport { FormElement } from \"../../Profile.types\";\nimport { renderFieldSet } from \"../../components/FormFields/FormFields.helpers\";\n\nconst FormFields: FC<Pick<FormElement, \"isEdit\">> = ({ isEdit }) => {\n    const { fields, passwordFields } = useProfileForm();\n    return (\n        <>\n            {renderFieldSet(fields, isEdit)}\n            {isEdit && renderFieldSet(passwordFields, isEdit)}\n        </>\n    );\n};\n\nexport default FormFields;\n","import React, { FC, useCallback } from \"react\";\nimport { Button, Form, Modal } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nimport { FormElement } from \"../../Profile.types\";\nimport styles from \"./FormControls.module.scss\";\n\nconst FormControls: FC<FormElement> = ({\n    isEdit,\n    setIsEdit,\n    onFinish,\n    form,\n}) => {\n    const handleCancel = useCallback(() => {\n        setIsEdit(!isEdit);\n        form.resetFields();\n    }, [form, isEdit]);\n\n    const handleEdit = useCallback(() => {\n        setIsEdit(!isEdit);\n    }, [isEdit]);\n\n    if (isEdit) {\n        return (\n            <>\n                <Form.Item>\n                    <Button\n                        block\n                        type=\"primary\"\n                        onClick={() => {\n                            Modal.confirm({\n                                title: \"Сохранить?\",\n                                content: \"Будут изменены данные профиля\",\n                                cancelText: \"Нет\",\n                                okText: \"Да\",\n                                onOk() {\n                                    setIsEdit(false);\n                                    onFinish(form.getFieldsValue(true));\n                                },\n                                onCancel() {\n                                    setIsEdit(false);\n                                    form.resetFields();\n                                },\n                            });\n                        }}\n                    >\n                        Сохранить\n                        <EditOutlined />\n                    </Button>\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        block\n                        className={styles.cancelButton}\n                        type=\"default\"\n                        onClick={handleCancel}\n                    >\n                        Отменить\n                    </Button>\n                </Form.Item>\n            </>\n        );\n    }\n\n    return (\n        <Form.Item>\n            <Button block type=\"primary\" onClick={handleEdit}>\n                Редактировать\n                <EditOutlined />\n            </Button>\n        </Form.Item>\n    );\n};\n\nexport default FormControls;\n","// extracted by mini-css-extract-plugin\nexport default {\"cancelButton\":\"XcpXT3fVczqQykjGsWKX\"};","import React from \"react\";\nimport {\n    Form, Space, Image as AntdImage,\n} from \"antd\";\n\nimport Container from \"@/components/Container\";\nimport Header from \"@/components/Header\";\nimport PageMeta from \"@/components/PageMeta\";\nimport PageLoader from \"@/components/PageLoader\";\n\nimport FormFields from \"./components/FormFields\";\nimport FormControls from \"./components/FormControls\";\n\nimport styles from \"./Profile.module.scss\";\nimport ProfileDefault from \"../../../assets/images/default_profile.png\";\n\nimport { useProfileForm } from \"./Profile.helpers\";\n\nconst Profile = () => {\n    const {\n        currentPath,\n        onFinish,\n        isEdit,\n        setIsEdit,\n        isOAuthSigned,\n        profile,\n        form,\n        isLoading,\n    } = useProfileForm();\n\n    return (\n        <PageLoader isSpinning={isLoading}>\n            <Container>\n                <PageMeta title=\"Profile\" description=\"Profile page\" />\n                <Header currentPath={currentPath} />\n                <div className={styles.formContainer}>\n                    <Space className={styles.formInnerContainer} direction=\"vertical\" size=\"middle\">\n                        {profile.avatar && <AntdImage\n                            width={200}\n                            height={200}\n                            src={`api/v2/resources${profile.avatar}`}\n                            crossOrigin={\"use-credentials\"}\n                            fallback={ProfileDefault}\n                        />}\n                        {!profile.avatar && <div className={styles.imageEmpty}></div>}\n                        <Form\n                            name=\"profile\"\n                            form={form}\n                            initialValues={profile}\n                            layout=\"vertical\"\n                        >\n                            <FormFields isEdit={isEdit} />\n\n                            {!isOAuthSigned && (\n                                <FormControls\n                                    isEdit={isEdit}\n                                    setIsEdit={setIsEdit}\n                                    form={form}\n                                    onFinish={onFinish}\n                                />\n                            )}\n                        </Form>\n                    </Space>\n                </div>\n            </Container>\n        </PageLoader>\n    );\n};\n\nexport default Profile;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"NeTQGkuyOTT60EAvRHMH\",\"formInnerContainer\":\"nNNqd4uYzsCMlqnKPxLF\",\"imageEmpty\":\"qGDfz5gGyncaGneQYXco\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableContainer\":\"h4pJAZ6ZYAtiycUJJW3g\",\"title\":\"S_BnvX9K7zmCBzCnTxlY\",\"counter\":\"Vu0ebY7tJswaf1LhSZfy\",\"buttonContainer\":\"Z90jr4hKQ5ZF2P5MiEzw\"};","import { notification } from \"antd\";\nimport { Method, LocalAPIService } from \"@/services/API/API.service\";\nimport { TopicEditData } from \"@/reducers/topic.reducer\";\n\ntype ForumData = {};\n\nconst root = \"topics\";\n\nclass ForumApi {\n    isSuccessfulRequest(response: Response) {\n        const errorMessage = \"Отправленные данные не корректны\";\n        switch (response.status) {\n            case 200:\n            case 201:\n                return true;\n            case 400:\n                notification.error({ message: errorMessage });\n                return false;\n            case 401:\n                notification.error({ message: \"Ошибка авторизации\" });\n                return false;\n            case 500:\n                notification.error({ message: \"Произошла неизвестная ошибка\" });\n                return false;\n            default:\n                return false;\n        }\n    }\n\n    public async getTopics(): Promise<ForumData[] | []> {\n        const response = await LocalAPIService.request(Method.GET, root);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result ?? [];\n            }\n        }\n        return [];\n    }\n\n    public async getTopic(id: number): Promise<ForumData | null> {\n        const response = await LocalAPIService.request(Method.GET, `${root}/${id}`);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result ?? null;\n            }\n        }\n        return null;\n    }\n\n    public async createTopic(data: TopicEditData): Promise<boolean> {\n        const response = await LocalAPIService.request(Method.POST, root, data);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result;\n            }\n        }\n        return false;\n    }\n\n    public async updateTopic(id: number, data: TopicEditData): Promise<TopicEditData | null> {\n        const response = await LocalAPIService.request(Method.PUT, `${root}/${id}`, data);\n        if (response) {\n            const success = this.isSuccessfulRequest(response);\n            if (success) {\n                const result = await response.json();\n                return result ?? null;\n            }\n        }\n        return null;\n    }\n}\n\nexport default new ForumApi();\n","import { ForumState } from \"reducers/forum.reducer\";\nimport { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { FORUM_LOAD, FORUM_SET_LOADING } from \"./types/forum.types\";\nimport forumApi from \"../api/Forum\";\n\nexport type ForumAction = GetForumTopics | SetLoading;\n\ntype GetForumTopics = {\n    type: typeof FORUM_LOAD,\n    payload: Pick<ForumState, \"data\">\n};\nconst getTopics = (data: any[]): GetForumTopics => ({\n    type: FORUM_LOAD,\n    payload: { data },\n});\n\ntype SetLoading = {\n    type: typeof FORUM_SET_LOADING,\n    payload: Pick<ForumState, \"isLoading\">\n};\nconst setLoading = (isLoading: boolean): SetLoading => ({\n    type: FORUM_SET_LOADING,\n    payload: { isLoading },\n});\n\nexport const loadForumTopics = ():\nThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(setLoading(true));\n    try {\n        const data = await forumApi.getTopics();\n        if (data) {\n            dispatch(getTopics(data));\n        }\n        dispatch(setLoading(false));\n    } catch (error) {\n        dispatch(setLoading(false));\n    }\n};\n","import React, { FC, useCallback } from \"react\";\nimport { Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\n\nimport Container from \"@/components/Container\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Header from \"@/components/Header\";\nimport { routes } from \"@/config/routes/routes\";\nimport Button from \"@/components/Button\";\n\nimport styles from \"./Forum.module.scss\";\nimport { useForum } from \"./Forum.helpers\";\n\ninterface ForumRecord {\n    id: number,\n    title: string,\n    comments_count: number\n}\n\nconst Forum: FC = () => {\n    const {\n        data,\n        isLoading,\n        table,\n        history,\n    } = useForum();\n\n    const columns: ColumnsType<ForumRecord> = [\n        {\n            title: \"Заголовок\",\n            dataIndex: [\"data\", \"title\"],\n            render: (value: string, item: ForumRecord) => (\n                <div className={styles.title}>\n                    {item?.title}\n                </div>\n            ),\n        },\n        {\n            title: \"Кол-во сообщений\",\n            dataIndex: [\"data\", \"messagesCount\"],\n            render: (value: string, item: ForumRecord) => (\n                <div className={styles.counter}>\n                    {item?.comments_count ?? 0}\n                </div>\n            ),\n        },\n        {\n            title: \"Действия\",\n            // todo кнопки\n        },\n    ];\n\n    const handleRowClick = useCallback((record: ForumRecord) => ({\n        onClick: () => history.push(routes.topic.path.replace(\":id\", record?.id.toString())),\n    }), []);\n\n    const getRowKey = useCallback((record: ForumRecord) => record?.id, []);\n\n    const onCreate = useCallback(() => history.push(routes.topicEdit.path), []);\n\n    return (\n        <Container>\n            <PageMeta title=\"Forum\" description=\"Game forum\" />\n            <Header currentPath={routes.forum.path} />\n            <div className={styles.tableContainer}>\n                <Table\n                    ref={table}\n                    className={styles.leaderBoardTable}\n                    columns={columns}\n                    dataSource={data}\n                    rowKey={getRowKey}\n                    onRow={handleRowClick}\n                    loading={{\n                        size: \"large\",\n                        spinning: isLoading,\n                    }}\n                    scroll={{\n                        y: 400,\n                    }}\n                    pagination={false}\n                />\n            </div>\n            <div className={styles.buttonContainer}>\n                <Button type=\"primary\" onClick={onCreate}>Создать</Button>\n            </div>\n        </Container>\n    );\n};\n\nexport default Forum;\n","import {\n    useRef,\n} from \"react\";\nimport { shallowEqual, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\nimport { loadForumTopics } from \"@/actions/forum.actions\";\n\nexport const useForum = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const table = useRef<HTMLDivElement>(null);\n\n    const { data, isLoading } = useSelector((state) => state.forum, shallowEqual);\n\n    useMountEffect(() => {\n        dispatch(loadForumTopics());\n    });\n\n    return {\n        data,\n        isLoading,\n        table,\n        history,\n    };\n};\n","import React, { FC } from \"react\";\n\nimport Container from \"@/components/Container\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Header from \"@/components/Header\";\nimport { routes } from \"@/config/routes/routes\";\n\nconst About: FC = () => (\n    <Container>\n        <PageMeta title=\"About\" description=\"About game\" />\n        <Header currentPath={routes.about.path} />\n    </Container>\n);\n\nexport default About;\n","export const TEAM_SCORE = \"southParkGameScore\";\nexport const RECORDS_PER_PAGE = 10;\n\nexport interface LeaderBoardRecord {\n    login: string\n    [TEAM_SCORE]: number\n}\n\nexport type LeaderBoardRecordRequest = {\n    data: LeaderBoardRecord,\n    ratingFieldName: typeof TEAM_SCORE,\n    teamName: \"southpark\"\n};\n\nexport type LeaderBoardGetRequest = {\n    ratingFieldName: typeof TEAM_SCORE,\n    cursor: number,\n    limit: typeof RECORDS_PER_PAGE\n};\n\n// NOTE: any потому что сюда могут любую какашку положить\nexport type LeaderBoardData = Array<{ data: LeaderBoardRecord & any }>;\n","import { notification } from \"antd\";\n\nimport APIService from \"@/services/API\";\nimport { Method } from \"@/services/API/API.service\";\nimport {\n    LeaderBoardData,\n    LeaderBoardGetRequest,\n    LeaderBoardRecord,\n    LeaderBoardRecordRequest,\n    RECORDS_PER_PAGE,\n    TEAM_SCORE,\n} from \"@/config/leaderboard\";\n\nconst root = \"leaderboard\";\n\nclass LeaderBoardApi {\n    public async getLeaderBoard(cursor: number): Promise<LeaderBoardData | null> {\n        const body: LeaderBoardGetRequest = {\n            ratingFieldName: TEAM_SCORE,\n            cursor,\n            limit: RECORDS_PER_PAGE,\n        };\n        const response = await APIService.request(Method.POST, `${root}/all`, body);\n        if (response.ok) {\n            const result = await response.json();\n            return result ?? null;\n        }\n        if (response.status >= 400 && response.status < 500) {\n            // notification.success({ message: \"\" });\n        }\n        if (response.status >= 500) {\n            notification.error({ message: \"Не удалось получить данные лидерборда\" });\n        }\n        return null;\n    }\n\n    public async createLeaderBoardRecord(data: LeaderBoardRecord): Promise<boolean | null> {\n        const body: LeaderBoardRecordRequest = {\n            data,\n            ratingFieldName: TEAM_SCORE,\n            teamName: \"southpark\",\n        };\n        const response = await APIService.request(Method.POST, `${root}`, body);\n        if (response.ok) {\n            notification.success({ message: \"Рекорд сохранен\" });\n            return true;\n        }\n        if (response.status >= 400 && response.status < 500) {\n            notification.error({ message: \"Не удалось сохранить рекорд\" });\n        }\n        if (response.status >= 500) {\n            notification.error({ message: \"Не удалось сохранить рекорд\" });\n        }\n        return null;\n    }\n}\n\nexport default new LeaderBoardApi();\n","import { LeaderBoardData } from \"config/leaderboard\";\nimport { LeaderBoardState } from \"reducers/leaderboard.reducer\";\nimport { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { LOAD, SET_LOADING } from \"./types/leaderboard.types\";\nimport LeaderboardApi from \"../api/Leaderboard\";\n\nexport type LeaderBoardAction = GetLeaderBoard | SetLoading;\n\ntype GetLeaderBoard = {\n    type: typeof LOAD,\n    payload: Pick<LeaderBoardState, \"data\">\n};\nconst getLeaderBoard = (data: LeaderBoardData): GetLeaderBoard => ({\n    type: LOAD,\n    payload: { data },\n});\n\ntype SetLoading = {\n    type: typeof SET_LOADING,\n    payload: Pick<LeaderBoardState, \"isLoading\">\n};\nconst setLoading = (isLoading: boolean): SetLoading => ({\n    type: SET_LOADING,\n    payload: { isLoading },\n});\n\nexport const loadLeaderBoard = (cursor: number):\nThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(setLoading(true));\n    try {\n        const data = await LeaderboardApi.getLeaderBoard(cursor);\n        if (data) {\n            dispatch(getLeaderBoard(data));\n        }\n        dispatch(setLoading(false));\n    } catch (error) {\n        dispatch(setLoading(false));\n    }\n};\n","import { Button } from \"antd\";\nimport React, { FC } from \"react\";\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./Pagination.module.scss\";\n\ntype PaginationProps = {\n    onMoveLeft: () => void\n    canMoveLeft: boolean\n    onMoveRight: () => void\n    canMoveRight: boolean\n    isLoading: boolean\n};\n\nconst Pagination: FC<PaginationProps> = (props: PaginationProps) => (\n    <div className={styles.container}>\n        <Button\n            type=\"default\"\n            icon={<LeftOutlined />}\n            onClick={props.onMoveLeft}\n            disabled={!props.canMoveLeft}\n        >\n        </Button>\n        <Button\n            className={styles.buttonRight}\n            type=\"default\"\n            icon={<RightOutlined />}\n            onClick={props.onMoveRight}\n            disabled={!props.canMoveRight}\n        >\n        </Button>\n    </div>\n);\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"shyebdQ7V79WnyJEEzeC\",\"buttonRight\":\"bCl2fYvnr1euix4tqdmM\"};","import React, { FC, useCallback } from \"react\";\nimport { Table, TablePaginationConfig } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport {\n    FilterValue,\n    SorterResult,\n    TableCurrentDataSource,\n} from \"antd/lib/table/interface\";\n\nimport Header from \"@/components/Header\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Container from \"@/components/Container\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport styles from \"./LeaderBoard.module.scss\";\nimport { useLeaderBoard } from \"./LeaderBoard.helpers\";\nimport { LeaderBoardRecord, TEAM_SCORE } from \"@/config/leaderboard\";\nimport Pagination from \"./components/Pagination\";\n\n// Колонки таблицы\nconst columns: ColumnsType<{ data: LeaderBoardRecord }> = [\n    {\n        title: \"Логин\",\n        dataIndex: [\"data\", \"login\"],\n        render: (value: string, item: { data: LeaderBoardRecord }) => {\n            const score = item.data[TEAM_SCORE];\n            return (\n                <div\n                    className={`${styles.nameContainer} ${\n                        score > 100 ? styles.nameActive : styles.nameBanned\n                    }`}\n                >\n                    {value}\n                </div>\n            );\n        },\n    },\n    {\n        title: \"Очки\",\n        dataIndex: [\"data\", TEAM_SCORE],\n    },\n];\n\n// Дефолтный колбэк при сортировке/пагинации/фильтрации\nconst onChange = (\n    pagination: TablePaginationConfig,\n    filters: Record<string, FilterValue | null>,\n    sorter: SorterResult<{ data: LeaderBoardRecord }> | SorterResult<any>[],\n    extra: TableCurrentDataSource<any>,\n) => {\n    console.log(\"params\", pagination, filters, sorter, extra);\n};\n\nconst LeaderBoard: FC<{}> = () => {\n    const {\n        data,\n        isLoading,\n        canMoveLeft,\n        onMoveLeft,\n        canMoveRight,\n        onMoveRight,\n        table,\n        tableScroll,\n    } = useLeaderBoard();\n\n    const getRowKey = useCallback(\n        (record: { data: LeaderBoardRecord }) => record.data.login,\n        [],\n    );\n\n    return (\n        <Container>\n            <PageMeta title=\"Leaderboard\" description=\"Leaderboard page\" />\n            <Header currentPath={routes.leaderboard.path} />\n            <div className={styles.leaderBoardContainer}>\n                <Table\n                    ref={table}\n                    className={styles.leaderBoardTable}\n                    columns={columns}\n                    dataSource={data}\n                    onChange={onChange}\n                    rowKey={getRowKey}\n                    loading={{\n                        size: \"large\",\n                        spinning: isLoading,\n                    }}\n                    scroll={{\n                        y: tableScroll,\n                    }}\n                    pagination={false}\n                />\n            </div>\n            <Pagination\n                onMoveLeft={onMoveLeft}\n                canMoveLeft={canMoveLeft}\n                onMoveRight={onMoveRight}\n                canMoveRight={canMoveRight}\n                isLoading={isLoading}\n            />\n        </Container>\n    );\n};\n\nexport default LeaderBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"leaderBoardContainer\":\"VNtOnQ9u1eqRD7cD6rL3\",\"leaderBoardTable\":\"L3SZByFwQnpU08n5SPsJ\",\"nameContainer\":\"HcjLexU_ULLT64Fy5m_N\",\"nameActive\":\"A9tTBCkPNUB1VMe4nsR2\",\"nameBanned\":\"SyFk3md3WBR2rgiLvKh5\"};","import {\n    useCallback, useEffect, useRef, useState,\n} from \"react\";\nimport { shallowEqual, useDispatch } from \"react-redux\";\nimport { loadLeaderBoard } from \"@/actions/leaderboard.actions\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { RECORDS_PER_PAGE } from \"@/config/leaderboard\";\nimport { isServer } from \"@/helpers/environment\";\n\nexport const useLeaderBoard = () => {\n    const [canMoveLeft, setCanMoveLeft] = useState(false);\n    const [canMoveRight, setCanMoveRight] = useState(false);\n    const [cursor, setCursor] = useState(0);\n    const dispatch = useDispatch();\n\n    const table = useRef<HTMLDivElement>(null);\n    const [tableScroll, setTableScroll] = useState(!isServer ? window?.innerHeight : 0);\n\n    const { data, isLoading } = useSelector((state) => state.leaderBoard, shallowEqual);\n\n    useMountEffect(() => {\n        dispatch(loadLeaderBoard(cursor));\n        if (table.current) {\n            const tableHeight = table.current.clientHeight;\n            const header = table.current.getElementsByClassName(\"ant-table-header\");\n            const headerHeight = header.length ? header[0].clientHeight : 0;\n            setTableScroll(tableHeight - headerHeight);\n        }\n    });\n\n    useEffect(() => {\n        const canMoveRight = data.length >= RECORDS_PER_PAGE;\n        setCanMoveRight(canMoveRight);\n        const canMoveLeft = cursor !== 0;\n        setCanMoveLeft(canMoveLeft);\n    }, [data]);\n\n    const onMoveRight = useCallback(() => {\n        const newCursor = cursor + RECORDS_PER_PAGE;\n        setCursor(newCursor);\n        dispatch(loadLeaderBoard(newCursor));\n    }, [data]);\n\n    const onMoveLeft = useCallback(() => {\n        const newCursor = cursor - RECORDS_PER_PAGE;\n        setCursor(newCursor);\n        dispatch(loadLeaderBoard(newCursor));\n    }, [data]);\n\n    return {\n        data,\n        isLoading,\n        canMoveLeft,\n        onMoveLeft,\n        canMoveRight,\n        onMoveRight,\n        table,\n        tableScroll,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ZysAcaq2wqNhjy8Izjfx\",\"info\":\"OdAUtezfXOkkacFZbGNV\",\"notFound\":\"_oqEYBV8I5tzU_K4b01Q\",\"container\":\"hvuBUQ5BuCflJ3z7EgLb\",\"errorContainer\":\"a9XtgsE_WJB8ErZLTHBl\",\"back\":\"H7clTc6gQPwiqxfv0oHg\"};","export const ErrorInfo = {\n    404: \"Страница не существует\",\n    403: \"Доступ закрыт\",\n    500: \"Неизвестная ошибка\",\n};\n","import React, { FC } from \"react\";\nimport { Typography } from \"antd\";\n\nimport { Link } from \"react-router-dom\";\nimport Container from \"@/components/Container\";\nimport { routes } from \"@/config/routes/routes\";\n\nimport styles from \"./Error.module.scss\";\nimport { ErrorInfo } from \"./Error.helpers\";\n\ninterface Props {\n    status: \"404\" | \"403\" | \"500\"\n}\n\nconst Error: FC<Props> = ({ status = \"404\" }) => {\n    const {\n        container, errorContainer, title, info, back, notFound,\n    } = styles;\n\n    return (\n        <Container>\n            <div className={container}>\n                <div className={errorContainer}>\n                    <Typography className={title}>{status}</Typography>\n                    <Typography className={info}>{ErrorInfo[status]}</Typography>\n                    <Link\n                        to={status === \"403\" ? routes.signIn.path : routes.main.path}\n                        className={back}\n                    >\n                        Вернуться\n                    </Link>\n                </div>\n                <div className={notFound}/>\n            </div>\n        </Container>\n    );\n};\n\nexport default Error;\n","import { Box2 } from \"../utils/box2\";\nimport { Circle } from \"../utils/circle\";\nimport { Object2D } from \"../object\";\n\nexport enum GeometryTypes {\n    Rectangle = \"Rectangle\",\n    Circle = \"Circle\",\n    Shape = \"Shape\", // Свободная форма\n}\n\ntype GeometryProps = {\n    geomType: string, // GeometryTypes\n};\n\n// Get unique geometry id (ssr)\nconst getGeomId = (function () {\n    let geometryId = 0;\n    return () => {\n        geometryId += 1;\n        return geometryId;\n    };\n}());\n\nexport class Geometry {\n    // Уникальный id геометрии\n    id: number;\n    // Опциональное имя\n    name: string;\n    // Bounding box геометрии (для расчетов)\n    boundingBox: Box2 | null;\n    // Bounding circle геометрии (для расчетов)\n    boundingCircle: Circle | null;\n    // Тип геометрии (для отрисовки)\n    type: string;\n\n    constructor(props: GeometryProps) {\n        this.id = getGeomId();\n        this.name = \"\";\n        this.type = props.geomType;\n\n        this.boundingBox = null;\n        this.boundingCircle = null;\n    }\n\n    // TODO: Методы работы с геометрией\n    calculateBoundingBox(object: Object2D) {\n\n    }\n\n    calculateBoundingCircle(object: Object2D) {\n\n    }\n}\n","export const LEVEL_SIZE = 640; // in px\nexport const TILE_SIZE = 16; // in px\n\nexport const STEP = 1 / 60; // in sec\n\n// Список всех событий в игре\nexport enum EventTypes {\n    // Передвижение\n    ArrowLeftDown = \"ArrowLeftDown\",\n    ArrowTopDown = \"ArrowTopDown\",\n    ArrowBottomDown = \"ArrowBottomDown\",\n    ArrowRightDown = \"ArrowRightDown\",\n    ArrowLeftUp = \"ArrowLeftUp\",\n    ArrowTopUp = \"ArrowTopUp\",\n    ArrowBottomUp = \"ArrowBottomUp\",\n    ArrowRightUp = \"ArrowRightUp\",\n    // Удар\n    SpaceDown = \"SpaceDown\",\n    SpaceUp = \"SpaceUp\",\n    // Resize\n    Resize = \"Resize\",\n}\n\nexport enum KeyboardEvents {\n    // Move\n    ArrowLeft = \"ArrowLeft\",\n    ArrowUp = \"ArrowUp\",\n    ArrowDown = \"ArrowDown\",\n    ArrowRight = \"ArrowRight\",\n    // Attack\n    Space = \" \",\n}\n\nexport const TOGGLE_MENU_BUTTON = \"q\";\nexport const TOGGLE_FULLSCREEN_BUTTON = \"f\";\n","import { STEP } from \"../../world/world.config\";\nimport { MoveAnimation } from \"../animations/move/moveAnimation\";\nimport { RectangleGeometry } from \"../geometry/rectangle/rectangle\";\nimport { Object2D } from \"../object\";\nimport { Box2 } from \"../utils/box2\";\nimport { Vector2D } from \"../utils/vector\";\n\nexport interface Collidable {\n    canCollide: boolean\n    onCollide(obstacle: Object2D & Collidable, ...args: any): void\n}\n\nexport function isImplementingCollision(obj1: Object2D): obj1 is Object2D & Collidable {\n    return (obj1 as Object).hasOwnProperty(\"canCollide\");\n}\n\nclass Physics {\n    hasBox2DCollided(obj1: Object2D, obj2: Object2D): boolean {\n        // Пересчитываем BoundingBox\n        obj1.geometry.calculateBoundingBox(obj1);\n        obj2.geometry.calculateBoundingBox(obj2);\n        // Получаем BB объектов\n        const box1 = obj1.geometry.boundingBox as Box2;\n        const box2 = obj2.geometry.boundingBox as Box2;\n        // Простая AABB проверка\n        if (\n            box1.min.x < box2.max.x\n            && box1.max.x > box2.min.x\n            && box1.min.y < box2.max.y\n            && box1.max.y > box2.min.y\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    // Общая идея в том, чтобы определить в следствие какого движения произошло столкновение\n    // Для этого мы берем предыдущую позицию и проверяем произойдет ли столкновение\n    // если передвинуться на расчетное значение delta\n    // Если столкновение произойдет, то пересчитываем позицию\n    // иначе восстанавливаем текущую позицию\n    getNewPositionAfterWallCollision(\n        object: Object2D,\n        obstacle: Object2D,\n        moveAnimation: MoveAnimation,\n        prevPosition: Vector2D,\n    ): Vector2D {\n        // Края объекта не должны пересекаться с bounding box obstacle\n        const objGeom = object.geometry as RectangleGeometry;\n        const obstGeomBB = obstacle.geometry.boundingBox as Box2;\n        const {\n            isMovingRight, isMovingLeft, isMovingDown, isMovingTop,\n        } = moveAnimation.moveState;\n        // Сохраняем текущую позицию (позиция после движения)\n        const position = object.position.copy();\n        const delta = STEP * moveAnimation.speed;\n        if (isMovingRight) {\n            // Устанавливаем предыдущую позицию\n            object.position = prevPosition.copy();\n            // Делаем шаг вправо\n            object.position.x += delta;\n            // Проверяем стало ли это причиной столкновения\n            const isCollisionCause = this.hasBox2DCollided(object, obstacle);\n            if (isCollisionCause) {\n                // Обновляем координаты если стало\n                object.position.x = obstacle.position.x - objGeom.width;\n                object.position.y = position.y;\n                // Дальше не идем, иначе восстановим случайно позицию\n                return object.position;\n            }\n\n            // Восстанавливаем позицию\n            object.position = position;\n        }\n        if (isMovingDown) {\n            object.position = prevPosition.copy();\n            object.position.y += delta;\n            const isCollisionCause = this.hasBox2DCollided(object, obstacle);\n            if (isCollisionCause) {\n                object.position.x = position.x;\n                object.position.y = obstGeomBB.min.y - objGeom.height;\n                return object.position;\n            }\n\n            object.position = position;\n        }\n        if (isMovingLeft) {\n            object.position = prevPosition.copy();\n            object.position.x -= delta;\n            const isCollisionCause = this.hasBox2DCollided(object, obstacle);\n            if (isCollisionCause) {\n                object.position.x = obstGeomBB.max.x;\n                object.position.y = position.y;\n                return object.position;\n            }\n\n            object.position = position;\n        }\n        if (isMovingTop) {\n            object.position = prevPosition.copy();\n            object.position.y -= delta;\n            const isCollisionCause = this.hasBox2DCollided(object, obstacle);\n            if (isCollisionCause) {\n                object.position.x = position.x;\n                object.position.y = obstGeomBB.max.y;\n                return object.position;\n            }\n\n            object.position = position;\n        }\n        return object.position;\n    }\n}\n\nexport default new Physics();\n","import { Camera } from \"./camera\";\nimport { GeometryTypes } from \"./geometry/geometry\";\nimport { RectangleGeometry } from \"./geometry/rectangle/rectangle\";\nimport { Object2D } from \"./object\";\nimport Physics, { isImplementingCollision } from \"./physics/physics\";\nimport { Scene } from \"./scene\";\n\ntype RendererProps = {\n    canvas: HTMLCanvasElement | null\n    width: number\n    height: number\n};\n\ntype PositionValues = {\n    x: number\n    y: number\n    width: number\n    height: number\n};\n\nexport class Renderer {\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n\n    constructor(props: RendererProps) {\n        if (!props.canvas) {\n            throw new Error(\"Ошибка инициализации\");\n        }\n        const context = props.canvas.getContext(\"2d\");\n        if (!context) {\n            throw new Error(\"Ошибка получения контекста канвас\");\n        }\n\n        this.canvas = props.canvas;\n        this.context = context;\n\n        this.init(props.width, props.height);\n    }\n\n    init(width: number, height: number) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n\n    // Нарисовать все объекты сцены на канвасе. Обрезать камерой лишнее\n    render(scene: Scene, camera: Camera) {\n        const c = this.context;\n        const { canvas } = this;\n        const { background } = scene;\n        // TODO: Обрезать объекты в сцене камерой\n\n        // Сначала очищаем канвас\n        c.clearRect(0, 0, canvas.width, canvas.height);\n        // Затем рисуем бэкграунд\n        c.fillStyle = `rgba(${background.r}, ${background.g}, ${background.b}, ${background.a})`;\n        c.fillRect(0, 0, canvas.width, canvas.height);\n        // Отрисовка в цикле всех объектов в сцене\n        for (const obj of scene.objects) {\n            switch (obj.geometry.type) {\n                case GeometryTypes.Rectangle:\n                    this._drawRectangle(obj, camera);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    // Запустить физику и пересчитать анимацию\n    prerender(scene: Scene) {\n        // Сначала пересчитываем анимацию\n        for (const obj of scene.objectWithPhysics) {\n            obj.updateState();\n        }\n        // TODO: Реализовать Quadtree collison detection\n        /* eslint-disable */\n        // https://gamedevelopment.tutsplus.com/tutorials/quick-tip-use-quadtrees-to-detect-likely-collisions-in-2d-space--gamedev-374\n        // https://stackoverflow.com/questions/4981866/quadtree-for-2d-collision-detection\n        /* eslint-enable */\n\n        // Затем проверяем столкновение объектов в сцене\n        for (let i = 0; i < scene.objectWithPhysics.length; i += 1) {\n            for (let j = i + 1; j < scene.objectWithPhysics.length; j += 1) {\n                const obj1 = scene.objectWithPhysics[i];\n                const obj2 = scene.objectWithPhysics[j];\n\n                if (\n                    isImplementingCollision(obj1)\n                    && isImplementingCollision(obj2)\n                ) {\n                    const collided = Physics.hasBox2DCollided(obj1, obj2);\n                    // TODO: Определить очередность вызова callback\n                    // Например, если в движущегося игрока попадает пуля, то игрок не должен\n                    // от этого переместиться, а пуля должна уничтожиться\n                    if (collided) {\n                        obj1.onCollide(obj2);\n                        obj2.onCollide(obj1);\n                    }\n                }\n            }\n        }\n    }\n\n    // Отрисовка rectangle на канвасе\n    private _drawRectangle(object: Object2D, camera: Camera) {\n        // Ренедерим только видимые объекты\n        if (!object.visible) {\n            return;\n        }\n        const c = this.context;\n        const geom = object.geometry as RectangleGeometry;\n        const { color } = object;\n        // Пересчитываем координаты мира в координаты на canvas\n        // с учетом позиционирования камеры\n        const K = this.canvas.width / camera.size;\n        const {\n            x, y, width, height,\n        } = this._recalculateWorldValuesToCanvasValues(\n            camera,\n            {\n                x: object.position.x,\n                y: object.position.y,\n                width: geom.width,\n                height: geom.height,\n            },\n        );\n        // Выполняем преобразования для корректного отображения\n        // Translate to position\n        c.translate(x, y);\n        // Flip object\n        if (object.spriteConfig?.shouldFlip) {\n            c.translate(width, 0);\n            c.scale(-1, 1);\n        }\n        // Rotate object\n        if (object.rotation && object.rotationCenter) {\n            // Поворачиваем относительно центра\n            c.translate(object.rotationCenter.x * K, object.rotationCenter.y * K);\n            c.rotate(object.rotation);\n            c.translate(-object.rotationCenter.x * K, -object.rotationCenter.y * K);\n        }\n        // Draw Image (Sprite)\n        if (object.spriteConfig?.image) {\n            const sp = object.spriteConfig.sprite;\n            const image = object.spriteConfig.image as HTMLImageElement;\n            c.drawImage(image, sp.sx, sp.sy, sp.sWidth, sp.sHeight, 0, 0, width, height);\n        } else { // Or default Rectangle\n            c.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n            c.fillRect(0, 0, width, height);\n        }\n        // Reset transformations to default\n        c.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    private _recalculateWorldValuesToCanvasValues(\n        camera: Camera,\n        values: PositionValues,\n    ): PositionValues {\n        // Смещаем координаты отностительно объекта привязки камеры\n        if (camera.bindedObject) {\n            values.x = camera.size / 2 + (values.x - camera.bindedObject.position.x);\n            values.y = camera.size / 2 + (values.y - camera.bindedObject.position.y);\n        }\n        // Переводим world coordinates в координаты отрисовки\n        // TODO: Проблема округления координат\n        const K = this.canvas.width / camera.size;\n        values.x *= K;\n        // Рассчитываем с поправкой на позиционирование камеры\n        if (camera.bindedObject) {\n            values.y = K * values.y - ((camera.size / 2) * K - this.canvas.height / 2);\n        } else {\n            values.y *= K;\n        }\n        values.width *= K;\n        values.height *= K;\n\n        return values;\n    }\n}\n","export class Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n}\n","import { Vector2D } from \"./vector\";\n\nexport class Box2 {\n    min: Vector2D;\n    max: Vector2D;\n\n    constructor(min: Vector2D, max: Vector2D) {\n        this.min = min;\n        this.max = max;\n    }\n}\n","export class Vector2D {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    add(vector: Vector2D): Vector2D {\n        this.x += vector.x;\n        this.y += vector.y;\n\n        return this;\n    }\n\n    rotateAround(center: Vector2D, angle: number): Vector2D {\n        this.x = Math.cos(angle) * (this.x - center.x)\n                - Math.sin(angle) * (this.y - center.y) + center.x;\n        this.y = Math.sin(angle) * (this.x - center.x)\n                 + Math.cos(angle) * (this.y - center.y) + center.y;\n\n        return this;\n    }\n\n    copy(): Vector2D {\n        return new Vector2D(this.x, this.y);\n    }\n}\n","import { Object2D } from \"game/core/object\";\nimport { Box2 } from \"../../utils/box2\";\nimport { Vector2D } from \"../../utils/vector\";\nimport { Geometry, GeometryTypes } from \"../geometry\";\n\nexport class RectangleGeometry extends Geometry {\n    width: number;\n    height: number;\n\n    constructor(width: number, height: number) {\n        super({ geomType: GeometryTypes.Rectangle });\n\n        this.width = width;\n        this.height = height;\n    }\n\n    // Учитываем поворот и shouldFlip\n    calculateBoundingBox(object: Object2D) {\n        if (!this.boundingBox) {\n            this.boundingBox = new Box2(\n                new Vector2D(0, 0),\n                new Vector2D(0, 0),\n            );\n        }\n        const rectangle = new Vector2D(this.width, this.height);\n        const { position } = object;\n        if (object.rotation && object.rotationCenter) {\n            // Угол и центр поворота\n            let angle = object.rotation;\n            // TODO: Баг позиционирования слева и дальности удара !\n            if (object.spriteConfig?.shouldFlip) {\n                angle = -angle;\n            }\n            const center = object.rotationCenter.copy().add(\n                new Vector2D(object.position.x, object.position.y),\n            );\n            // Вращаем каждую точку вокруг центра\n            const p1 = new Vector2D(object.position.x, object.position.y);\n            const p2 = new Vector2D(object.position.x, object.position.y + this.height);\n            const p3 = new Vector2D(object.position.x + this.width, object.position.y);\n            const p4 = new Vector2D(\n                object.position.x + this.width,\n                object.position.y + this.height,\n            );\n            p1.rotateAround(center, angle);\n            p2.rotateAround(center, angle);\n            p3.rotateAround(center, angle);\n            p4.rotateAround(center, angle);\n            // Собираем новый BB из точек\n            const minX = Math.min(p1.x, p2.x, p3.x, p4.x);\n            const maxX = Math.max(p1.x, p2.x, p3.x, p4.x);\n            const minY = Math.min(p1.y, p2.y, p3.y, p4.y);\n            const maxY = Math.max(p1.y, p2.y, p3.y, p4.y);\n            const newMin = new Vector2D(minX, minY);\n            const newMax = new Vector2D(maxX, maxY);\n            // Новый BB\n            this.boundingBox = new Box2(newMin, newMax);\n        } else {\n            this.boundingBox.min = position;\n            this.boundingBox.max = position.copy().add(rectangle);\n        }\n    }\n}\n","import { Object2D } from \"./object\";\nimport { Color } from \"./utils/color\";\n\nexport class Scene {\n    // TODO: Добавить поддержку Object в качесте бэкграунда (+ sprite)\n    public background: Color;\n    // Список объектов в сцене\n    public objects: Object2D[];\n    // Список объектов в сцене с физикой\n    public objectWithPhysics: Object2D[];\n\n    constructor(background?: Color) {\n        this.objects = [];\n        this.objectWithPhysics = [];\n\n        this.background = background || new Color(255, 255, 255);\n    }\n\n    add(objects: Object2D[] | Object2D) {\n        if (Array.isArray(objects)) {\n            this.objects.push(...objects);\n        } else {\n            this.objects.push(objects);\n        }\n    }\n\n    addObjectWithPhysics(objects: Object2D[] | Object2D) {\n        if (Array.isArray(objects)) {\n            this.objectWithPhysics.push(...objects);\n        } else {\n            this.objectWithPhysics.push(objects);\n        }\n    }\n\n    remove(object: Object2D) {\n        this.objects = this.objects.filter((x) => x !== object);\n        this.objectWithPhysics = this.objectWithPhysics.filter((x) => x !== object);\n    }\n}\n","import { Sprite } from \"game/world/world.manager\";\nimport { Geometry } from \"./geometry/geometry\";\nimport { Color } from \"./utils/color\";\nimport { Vector2D } from \"./utils/vector\";\n\nexport type Object2DProps = {\n    geometry: Geometry\n    color?: Color\n};\n\nexport type ObjectSpriteConfig = {\n    // Изображение\n    image: HTMLImageElement | undefined\n    sprite: Sprite\n    // Нужно ли повернуть\n    shouldFlip?: boolean\n};\n\n// Get unique geometry id (ssr)\nconst getObject2DId = (function () {\n    let objectId = 0;\n    return () => objectId += 1;\n}());\n\nexport class Object2D {\n    // Уникальный id в сцене\n    id: number;\n    // Опциональное имя объета\n    name: string;\n    // Позиция объекта в сцене\n    // NOTE: x = left, y = top\n    position: Vector2D;\n    // Rotation in radians\n    rotation: number;\n    // For Canvas Rendering\n    rotationCenter: Vector2D | undefined;\n    // Видимость объектв в сцене\n    visible: boolean;\n    // Должен ли объект обрезаться камерой при рендеринге\n    frustumCulled: boolean;\n    // Опциональные данные\n    userData: Object | null;\n    // Геометрия объекта\n    geometry: Geometry;\n    // Цвет\n    color: Color;\n    // Спрайт\n    // TODO: Определить тип и реализовать функционал\n    spriteConfig: ObjectSpriteConfig | null;\n\n    constructor(props: Object2DProps) {\n        // Задаем дефолтные значения\n        this.id = getObject2DId();\n        this.name = \"\";\n        this.position = new Vector2D(0, 0);\n        this.visible = true;\n        this.frustumCulled = false;\n        this.userData = null;\n        this.spriteConfig = null;\n        // Сохраняем тип геометрии\n        this.geometry = props.geometry;\n        this.color = props.color || new Color(0, 0, 0);\n    }\n\n    // Базовые методы для объекта\n    move(vect: Vector2D) {\n        this.position.add(vect);\n    }\n\n    /**\n     *  Вращает вокруг центра на заданнный угол\n        @center - Точка вокруг которой вращается\n        @angle - Угол вращения в радианах\n    */\n    rotateAround(center: Vector2D, angle: number) {\n        this.rotation = angle;\n        this.rotationCenter = new Vector2D(\n            center.x - this.position.x,\n            center.y - this.position.y,\n        );\n    }\n\n    scale() {\n\n    }\n\n    // Обобщенный метод обновления текущего состояния\n    // Каждый объект определяет самостоятельно\n    // Происходит каждые STEP\n    updateState() {\n\n    }\n}\n","export class GameAnimation {\n\n}\n","import { Vector2D } from \"../../utils/vector\";\nimport { STEP } from \"../../../world/world.config\";\nimport { GameAnimation } from \"../animation\";\n\ntype MoveAnimationProps = {\n    speed: number\n};\n\nexport type MoveState = {\n    isMovingLeft: boolean;\n    isMovingRight: boolean;\n    isMovingTop: boolean;\n    isMovingDown: boolean;\n};\n\nexport class MoveAnimation extends GameAnimation {\n    moveState: MoveState;\n    speed: number;\n\n    constructor(props: MoveAnimationProps) {\n        super();\n        this.speed = props.speed;\n        //\n        this.moveState = {\n            isMovingLeft: false,\n            isMovingRight: false,\n            isMovingTop: false,\n            isMovingDown: false,\n        };\n        //\n    }\n\n    update(position: Vector2D): Vector2D {\n        const delta = STEP * this.speed;\n        if (this.moveState.isMovingDown) {\n            position.y += delta;\n        }\n        if (this.moveState.isMovingTop) {\n            position.y -= delta;\n        }\n        if (this.moveState.isMovingRight) {\n            position.x += delta;\n        }\n        if (this.moveState.isMovingLeft) {\n            position.x -= delta;\n        }\n        return position;\n    }\n\n    isMoving(): boolean {\n        return Object.values(this.moveState).reduce(\n            (res, val) => res || val,\n            false,\n        );\n    }\n}\n","import { ObjectSpriteConfig } from \"game/core/object\";\nimport { Sprite } from \"game/world/world.manager\";\nimport { STEP } from \"../../../world/world.config\";\nimport { GameAnimation } from \"../animation\";\nimport { MoveAnimation } from \"../move/moveAnimation\";\n\ntype SpriteAnimationProps = {\n    sprites: AnimationSprites\n};\n\nexport type AnimationSprites = {\n    idle_0: Sprite,\n    idle_1: Sprite,\n    idle_2: Sprite,\n    idle_3: Sprite,\n    run_0: Sprite,\n    run_1: Sprite,\n    run_2: Sprite,\n    run_3: Sprite,\n};\n\nexport class SpriteAnimation extends GameAnimation {\n    timeAfterLastSpriteUpdate: number; // in ms\n    sprites: AnimationSprites;\n\n    constructor(props: SpriteAnimationProps) {\n        super();\n        this.sprites = props.sprites;\n        this.timeAfterLastSpriteUpdate = 0;\n    }\n\n    update(\n        spriteConfig: ObjectSpriteConfig | null,\n        moveAnimation: MoveAnimation,\n    ): ObjectSpriteConfig | null {\n        this.timeAfterLastSpriteUpdate += STEP;\n        const shouldUpdateSprite = this.shouldUpdateSprite();\n        if (spriteConfig && shouldUpdateSprite) {\n            const isMoving = moveAnimation.isMoving();\n            const isCurrentSpriteIdle = this.isCurrentSpriteIdle(spriteConfig);\n            if (isMoving) {\n                if (isCurrentSpriteIdle) {\n                    spriteConfig.sprite = this.sprites.run_0;\n                } else {\n                    spriteConfig.sprite = this.getNextRunSprite(spriteConfig);\n                }\n            } else if (!isCurrentSpriteIdle) {\n                spriteConfig.sprite = this.sprites.idle_0;\n            } else {\n                spriteConfig.sprite = this.getNextIdleSprite(spriteConfig);\n            }\n        }\n        // NOTE: Обновляем shouldFlip после установки нового спрайта\n        if (spriteConfig) {\n            if (moveAnimation.moveState.isMovingRight) {\n                spriteConfig.shouldFlip = false;\n            }\n            if (moveAnimation.moveState.isMovingLeft) {\n                spriteConfig.shouldFlip = true;\n            }\n        }\n        return spriteConfig;\n    }\n\n    shouldUpdateSprite(): boolean {\n        // Обновляем 12 раз в секунду\n        if (this.timeAfterLastSpriteUpdate > 5 * STEP) {\n            this.timeAfterLastSpriteUpdate = 0;\n            return true;\n        }\n        return false;\n    }\n\n    isCurrentSpriteIdle(spriteConfig: ObjectSpriteConfig): boolean {\n        const sprite = spriteConfig?.sprite;\n        return sprite === this.sprites.idle_0\n                || sprite === this.sprites.idle_1\n                || sprite === this.sprites.idle_2\n                || sprite === this.sprites.idle_3;\n    }\n\n    getNextRunSprite(spriteConfig: ObjectSpriteConfig): Sprite {\n        const sprite = spriteConfig?.sprite;\n        switch (sprite) {\n            case this.sprites.run_0:\n                return this.sprites.run_1;\n            case this.sprites.run_1:\n                return this.sprites.run_2;\n            case this.sprites.run_2:\n                return this.sprites.run_3;\n            case this.sprites.run_3:\n                return this.sprites.run_0;\n            default:\n                return this.sprites.run_0;\n        }\n    }\n\n    getNextIdleSprite(spriteConfig: ObjectSpriteConfig): Sprite {\n        const sprite = spriteConfig?.sprite;\n        switch (sprite) {\n            case this.sprites.idle_0:\n                return this.sprites.idle_1;\n            case this.sprites.idle_1:\n                return this.sprites.idle_2;\n            case this.sprites.idle_2:\n                return this.sprites.idle_3;\n            case this.sprites.idle_3:\n                return this.sprites.idle_0;\n            default:\n                return this.sprites.idle_0;\n        }\n    }\n}\n","import { Weapon } from \"game/world/objects/weapon\";\nimport { RectangleGeometry } from \"game/core/geometry/rectangle/rectangle\";\nimport { Object2D } from \"game/core/object\";\nimport { GameAnimation } from \"../animation\";\nimport { Vector2D } from \"../../utils/vector\";\n\nexport interface CanAttack {\n    weapon: Weapon\n    attackAnimation: AttackAnimation\n}\n\ntype AttackAnimationProps = {\n\n};\n\n// TODO: Создать разные анимации атаки для разных видов оружия\nexport class AttackAnimation extends GameAnimation {\n    currentRotation: number = 0;\n    maxAnimationStep: number = 10;\n    maxRotation: number = 2.4;\n\n    constructor(props?: AttackAnimationProps) {\n        super();\n    }\n\n    // Обновить позиции оружия и анимировать удар, если он активен\n    update(weapon: Weapon, object: Object2D): Weapon {\n        // Анимация удара\n        if (weapon.active) {\n            // Нужно ли перевернуть\n            const shouldFlip = object.spriteConfig?.shouldFlip;\n            // Определяем позицию\n            const geom = object.geometry as RectangleGeometry;\n            const { x } = object.position;\n            const { y } = object.position;\n            const { width } = geom;\n            const { height } = geom;\n            // Позицинируем меч (подобрано)\n            // TODO: Баг позиционирования слева и дальности удара !\n            let weaponX = x + width * 0.55;\n            if (shouldFlip) {\n                weaponX = x - width * 0.15;\n            }\n            const weaponY = y - height * 0.5;\n            weapon.position.x = weaponX;\n            weapon.position.y = weaponY;\n            // Определяем угол поворота (текущий)\n            this.currentRotation += this.maxRotation / this.maxAnimationStep;\n            // Центром поворота устанавливаем ручку оружия\n            const weaponGeom = weapon.geometry as RectangleGeometry;\n            const center = new Vector2D(weapon.position.x, weapon.position.y + weaponGeom.height);\n            weapon.rotateAround(center, this.currentRotation);\n            // Конец анимации\n            if (this.currentRotation >= this.maxRotation) {\n                this.currentRotation = 0;\n                weapon.attackCount += 1;\n                weapon.active = false;\n                weapon.visible = false;\n            }\n        }\n        return weapon;\n    }\n}\n","import { Object2D, Object2DProps } from \"../../core/object\";\nimport { Collidable } from \"../../core/physics/physics\";\n\ntype WallProps = Object2DProps & {\n\n};\n\nexport class Wall extends Object2D implements Collidable {\n    canCollide: boolean = true;\n\n    constructor(props: WallProps) {\n        super(props);\n        this.init();\n    }\n\n    init() {\n\n    }\n\n    onCollide() {\n        // console.log(`В стену ${this.id} кто-то врезался :(`);\n    }\n}\n","import { RectangleGeometry } from \"game/core/geometry/rectangle/rectangle\";\nimport { Object2D, Object2DProps } from \"../../core/object\";\nimport { Collidable } from \"../../core/physics/physics\";\n\ntype WeaponProps = Object2DProps & {\n    geometry: RectangleGeometry,\n    damage: number // Сколько жизней отнимает\n};\n\nexport class Weapon extends Object2D implements Collidable {\n    canCollide: boolean = true;\n    active: boolean; // Наносит ли урон в данный момент времени\n    damage: number;\n    attackCount: number; // Количество атак и номер текущей атаки\n\n    constructor(props: WeaponProps) {\n        super(props);\n        this.damage = props.damage;\n        this.active = false;\n        this.attackCount = 0;\n        this.init();\n    }\n\n    init() {\n\n    }\n\n    onCollide() {\n        // console.log(`В стену ${this.id} кто-то врезался :(`);\n    }\n}\n","import { Vector2D } from \"../core/utils/vector\";\nimport { TILE_SIZE } from \"./world.config\";\n\n// Матрица уровня 40х40\nexport type Level = Array<Array<number>>;\n\n// Виды значений в матрице уровня\nexport enum TileTypes {\n    Ground = \"Ground\",\n    Wall = \"Wall\",\n    UI = \"UI\",\n}\n\ntype TileIndexed = {\n    [key: number]: string\n};\n\nexport const TILE_TYPES: TileIndexed = {\n    1: TileTypes.Ground,\n    2: TileTypes.Wall,\n    3: TileTypes.UI,\n};\n\nexport type Direction = {\n    name: string\n    chance: number\n};\n\nexport type Directions = {\n    left: Direction\n    right: Direction\n    down: Direction\n    top: Direction\n};\n\nexport const getRandomDirection = (directions: Directions): Direction => {\n    let min = 0;\n    const random = Math.random();\n    if (random < directions.left.chance) {\n        return directions.left;\n    }\n    min += directions.left.chance;\n    if (random < min + directions.right.chance) {\n        return directions.right;\n    }\n    min += directions.right.chance;\n    if (random < min + directions.down.chance) {\n        return directions.down;\n    }\n    min += directions.down.chance;\n    if (random < min + directions.top.chance) {\n        return directions.top;\n    }\n    return { name: \"\", chance: -1 };\n};\n\nconst fillMatrix = (level: Level, i: number, j: number, window: number): Level => {\n    const matrix = level;\n    for (let k = i; k < i + window; k += 1) {\n        for (let f = j; f < j + window; f += 1) {\n            matrix[k][f] = 1;\n        }\n    }\n    return matrix;\n};\n\n// TODO: Фикс багов генерации уровня\n/**\n    Генерирует рандомную матрицу уровня 40х40\n*/\nexport const generateRandomLevel = (): Level => {\n    // Размер доступной части level\n    const minRight = 1;\n    const maxRight = 38;\n    const minDown = 1;\n    const maxDown = 38;\n    // Level по дефолту ui background\n    let level: Level = new Array(maxRight + 2).fill(0).map((x) => new Array(maxDown + 2).fill(3));\n    // Шанс перейти на след tile\n    const directions: Directions = {\n        left: { name: \"left\", chance: 0 },\n        right: { name: \"right\", chance: 0.8 },\n        down: { name: \"down\", chance: 0.2 },\n        top: { name: \"top\", chance: 0 },\n    };\n    // Считаем сколько раз шагнули вниз, чтобы разрешить шагать вверх\n    // let downCount = 0;\n    // Окно генерации уровня\n    const pathWindow = 6;\n    // Указатели tile уровня\n    let tileHorizontal = Math.round(Math.random() * (maxRight - minRight) + minRight);\n    let tileVertical = minDown;\n    // Случайно генерируем путь уровня, выставляя 1 где можно ходить\n    while (tileVertical + pathWindow < maxDown) {\n        // Выбираем направление\n        let directon = getRandomDirection(directions);\n        // Шагаем в зависимости от направления\n        if (directon === directions.right) {\n            // Если справа есть куда шагать\n            if (tileHorizontal + 2 * pathWindow < maxRight) {\n                // Делаем шаг вправо\n                tileHorizontal += pathWindow;\n                // Обновляем уровень\n                level = fillMatrix(level, tileVertical, tileHorizontal, pathWindow);\n                // Следующий шаг со след рандомными значениями\n                directions.left.chance = 0.45;\n                directions.right.chance = 0.45;\n                directions.down.chance = 0.1;\n                directions.top.chance = 0;\n            } else { // Иначе шагаем вниз\n                directon = directions.down;\n                // След шаг только влево или вниз, тк вправо больше некуда шагать\n                directions.left.chance = 0.9;\n                directions.right.chance = 0;\n                directions.down.chance = 0.1;\n                directions.top.chance = 0;\n            }\n        }\n        if (directon === directions.down) {\n            if (tileVertical + 2 * pathWindow < maxDown) {\n                // Делаем шаг вниз\n                tileVertical += pathWindow;\n                // Шагаем вниз и даем возможность шагать влево\n                level = fillMatrix(level, tileVertical, tileHorizontal, pathWindow);\n                // Влево или вправо рандомно\n                directions.left.chance = 0.45;\n                directions.right.chance = 0.45;\n                //\n                // downCount++\n                // if(downCount === 3) {\n                //     directions.top.chance = 0.05\n                //     directions.down.chance = 0.05\n                //     downCount = 0\n                // }\n                // else {\n                //     directions.top.chance = 0\n                //     directions.down.chance = 0.1\n                // }\n            } else {\n                // Заканчиваем генерацию\n                tileVertical += pathWindow;\n            }\n        }\n        if (directon === directions.left) {\n            if (tileHorizontal - pathWindow > minRight) {\n                // Шаг влево\n                tileHorizontal -= pathWindow;\n                level = fillMatrix(level, tileVertical, tileHorizontal, pathWindow);\n                // Для след шага\n                directions.left.chance = 0.45;\n                directions.right.chance = 0.45;\n                directions.down.chance = 0.1;\n                directions.top.chance = 0;\n            } else {\n                // Иначе шагаем вниз\n                directon = directions.down;\n                // Влево больше некуда шагать\n                directions.right.chance = 0.9;\n                directions.left.chance = 0;\n                directions.down.chance = 0.1;\n                directions.top.chance = 0;\n            }\n        }\n        // if(directon === directions.top) {\n\n        // }\n    }\n    // Проставляем стены\n    for (let i = 0; i < level.length; i += 1) {\n        for (let j = 0; j < level.length; j += 1) {\n            // Ставим стены рядом с землей\n            if (level[i][j] === 1) {\n                if (level[i + 1][j] === 3) {\n                    level[i + 1][j] = 2;\n                }\n                if (level[i - 1][j] === 3) {\n                    level[i - 1][j] = 2;\n                }\n                if (level[i + 1][j - 1] === 3) {\n                    level[i + 1][j - 1] = 2;\n                }\n                if (level[i + 1][j + 1] === 3) {\n                    level[i + 1][j + 1] = 2;\n                }\n                if (level[i][j - 1] === 3) {\n                    level[i][j - 1] = 2;\n                    level[i - 1][j - 1] = 2;\n                }\n                if (level[i][j + 1] === 3) {\n                    level[i][j + 1] = 2;\n                    level[i - 1][j + 1] = 2;\n                }\n            }\n        }\n    }\n    return level;\n};\n\n/**\n    Найти первый доступный для размещения кусок земли с начала\n*/\nexport const getFirstGroundTileOnLevel = (level: Level): Vector2D | undefined => {\n    for (let i = 0; i < level.length; i += 1) {\n        for (let j = 0; j < level.length; j += 1) {\n            const number = level[i][j];\n            if (TILE_TYPES[number] === TileTypes.Ground) {\n                return new Vector2D(j * TILE_SIZE, i * TILE_SIZE);\n            }\n        }\n    }\n    return undefined;\n};\n\n/**\n    Найти первый доступный для размещения кусок земли с конца\n*/\nexport const getLastGroundTileOnLevel = (level: Level): Vector2D | undefined => {\n    for (let i = level.length - 1; i >= 0; i -= 1) {\n        for (let j = level.length - 1; j >= 0; j -= 1) {\n            const number = level[i][j];\n            if (TILE_TYPES[number] === TileTypes.Ground) {\n                return new Vector2D(j * TILE_SIZE, i * TILE_SIZE);\n            }\n        }\n    }\n    return undefined;\n};\n","import { CanReceiveDamage } from \"game/core/animations/damage/damage\";\nimport { Scene } from \"game/core/scene\";\nimport { MoveAnimation } from \"../../core/animations/move/moveAnimation\";\nimport { AnimationSprites, SpriteAnimation } from \"../../core/animations/sprite/spriteAnimation\";\nimport { Vector2D } from \"../../core/utils/vector\";\nimport { Object2D, Object2DProps } from \"../../core/object\";\nimport Physics, { Collidable } from \"../../core/physics/physics\";\nimport { Player } from \"./player\";\nimport { Weapon } from \"./weapon\";\nimport { Directions, getRandomDirection } from \"../world.helpers\";\nimport { Wall } from \"./wall\";\nimport WorldManager from \"../world.manager\";\n\ntype EnemyProps = Object2DProps & {\n    scene: Scene;\n    maxHealth: number;\n    image?: HTMLImageElement\n};\n\nconst ENEMY_MOVE_DIRECTIONS: Directions = {\n    left: { name: \"left\", chance: 0.25 },\n    right: { name: \"right\", chance: 0.25 },\n    down: { name: \"down\", chance: 0.25 },\n    top: { name: \"top\", chance: 0.25 },\n};\n\nexport class Enemy extends Object2D implements Collidable, CanReceiveDamage {\n    scene: Scene;\n    canCollide: boolean = true;\n    //\n    speed: number = 50;\n    moveAnimation: MoveAnimation;\n    prevPosition: Vector2D;\n    //\n    spriteAnimation: SpriteAnimation;\n    enemySprites: AnimationSprites;\n    //\n    prevRecievedDamage: number;\n    // Здоровье\n    maxHealth: number;\n    private _health: number;\n    // Частота обновления позиции\n    currentMoveStateCounter: number = 0;\n    maxMoveStateUpdate: number = 30;\n\n    // TODO: Додумать реализацию\n    get health(): number {\n        return this._health;\n    }\n    set health(value: number) {\n        this._health = value;\n        if (this._health <= 0) {\n            this.onDeath();\n        }\n    }\n\n    constructor(props: EnemyProps) {\n        super(props);\n\n        this.scene = props.scene;\n        this.maxHealth = props.maxHealth;\n        this._health = this.maxHealth;\n        this._createEnemySprites(props.image);\n        this.init();\n    }\n\n    init() {\n        // Создаем логику анимации движения\n        this.moveAnimation = new MoveAnimation({\n            speed: this.speed,\n        });\n        this.moveStateUpdateCondition();\n        // Создаем логику анимации смены sprite\n        this.spriteAnimation = new SpriteAnimation({\n            sprites: this.enemySprites,\n        });\n    }\n\n    updateState() {\n        // Обновляем sprite\n        this.spriteConfig = this.spriteAnimation.update(this.spriteConfig, this.moveAnimation);\n        // Обновляем position\n        this.prevPosition = this.position.copy();\n        this.moveStateUpdateCondition();\n        this.position = this.moveAnimation.update(this.position);\n    }\n\n    //\n    onCollide(obstacle: Object2D & Collidable) {\n        if (obstacle instanceof Wall) {\n            this.position = Physics.getNewPositionAfterWallCollision(\n                this,\n                obstacle,\n                this.moveAnimation,\n                this.prevPosition,\n            );\n        }\n        if (obstacle instanceof Player) {\n            obstacle.health -= 0.5;\n        }\n        if (obstacle instanceof Weapon && obstacle.active) {\n            if (this.prevRecievedDamage !== obstacle.attackCount) {\n                this.health -= obstacle.damage;\n                this.prevRecievedDamage = obstacle.attackCount;\n            }\n        }\n    }\n\n    onDeath() {\n        this.scene.remove(this);\n        const enemiesCount = this.scene.objects.filter((x) => x instanceof Enemy).length;\n        if (!enemiesCount) {\n            WorldManager.gameWinCallback();\n        }\n    }\n\n    // TODO: Вынести AI к анимациям\n    moveStateUpdateCondition() {\n        // Обновляем направление движение раз в 60 / maxMoveStateUpdate сек\n        if (this.currentMoveStateCounter < this.maxMoveStateUpdate) {\n            this.currentMoveStateCounter += 1;\n            return;\n        }\n\n        this.currentMoveStateCounter = 0;\n\n        const { moveState } = this.moveAnimation;\n        moveState.isMovingDown = false;\n        moveState.isMovingLeft = false;\n        moveState.isMovingRight = false;\n        moveState.isMovingTop = false;\n        // Случайным образом выбираем направление и устанавливаем флаг\n        const direction = getRandomDirection(ENEMY_MOVE_DIRECTIONS);\n        switch (direction) {\n            case ENEMY_MOVE_DIRECTIONS.left:\n                moveState.isMovingLeft = true;\n                break;\n            case ENEMY_MOVE_DIRECTIONS.right:\n                moveState.isMovingRight = true;\n                break;\n            case ENEMY_MOVE_DIRECTIONS.down:\n                moveState.isMovingDown = true;\n                break;\n            case ENEMY_MOVE_DIRECTIONS.top:\n                moveState.isMovingTop = true;\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _createEnemySprites(image?: HTMLImageElement) {\n        this.enemySprites = {\n            idle_0: {\n                sx: 368,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            idle_1: {\n                sx: 368 + 16,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            idle_2: {\n                sx: 368 + 16 * 2,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            idle_3: {\n                sx: 368 + 16 * 3,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            run_0: {\n                sx: 432,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            run_1: {\n                sx: 432 + 16,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            run_2: {\n                sx: 432 + 16 * 2,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n            run_3: {\n                sx: 432 + 16 * 3,\n                sy: 80,\n                sWidth: 16,\n                sHeight: 16,\n            },\n        };\n        // Устанавливаем дефолтный спрайт\n        this.spriteConfig = {\n            image,\n            sprite: this.enemySprites.idle_0,\n            shouldFlip: false,\n        };\n    }\n}\n","import { EventBus } from \"../core/eventBus\";\nimport { EventTypes, KeyboardEvents } from \"./world.config\";\n\ntype KeyListener = (this: Window, ev: KeyboardEvent) => any;\ntype Listener = (this: Window, ev: Event) => any;\n\nclass WorldEvents extends EventBus {\n    // События, от которых нужно отписаться\n    private _keyDownListener: KeyListener;\n    private _keyUpListener: KeyListener;\n    private _resizeListener: Listener;\n\n    init() {\n        const eventBus = this;\n\n        this._keyDownListener = (e: KeyboardEvent) => {\n            switch (e.key) {\n                case KeyboardEvents.ArrowDown:\n                    eventBus.emit(EventTypes.ArrowBottomDown);\n                    break;\n                case KeyboardEvents.ArrowLeft:\n                    eventBus.emit(EventTypes.ArrowLeftDown);\n                    break;\n                case KeyboardEvents.ArrowRight:\n                    eventBus.emit(EventTypes.ArrowRightDown);\n                    break;\n                case KeyboardEvents.ArrowUp:\n                    eventBus.emit(EventTypes.ArrowTopDown);\n                    break;\n                case KeyboardEvents.Space:\n                    eventBus.emit(EventTypes.SpaceDown);\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        this._keyUpListener = (e: KeyboardEvent) => {\n            switch (e.key) {\n                case KeyboardEvents.ArrowDown:\n                    eventBus.emit(EventTypes.ArrowBottomUp);\n                    break;\n                case KeyboardEvents.ArrowLeft:\n                    eventBus.emit(EventTypes.ArrowLeftUp);\n                    break;\n                case KeyboardEvents.ArrowRight:\n                    eventBus.emit(EventTypes.ArrowRightUp);\n                    break;\n                case KeyboardEvents.ArrowUp:\n                    eventBus.emit(EventTypes.ArrowTopUp);\n                    break;\n                case KeyboardEvents.Space:\n                    eventBus.emit(EventTypes.SpaceUp);\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        this._resizeListener = (e: Event) => {\n            eventBus.emit(EventTypes.Resize);\n        };\n\n        window.addEventListener(\"keydown\", this._keyDownListener);\n        window.addEventListener(\"keyup\", this._keyUpListener);\n        window.addEventListener(\"resize\", this._resizeListener);\n    }\n\n    unsubscribe() {\n        window.removeEventListener(\"keydown\", this._keyDownListener);\n        window.removeEventListener(\"keyup\", this._keyUpListener);\n        window.removeEventListener(\"resize\", this._resizeListener);\n    }\n}\n\nexport default new WorldEvents();\n","// Класс, управляющий всеми событиями в игре\n// Например, для player если в prerender фиксируются зажатые клавишы передвижения, то\n// на основе пройденного времени нужно пересчитать перемещение объекта (+ скорость)\n// то есть пересчитать положение\nexport class EventBus {\n    private _listeners: Map<string, Array<Function>>;\n\n    constructor() {\n        this._listeners = new Map();\n    }\n\n    on(event: string, callback: Function): void {\n        const events = this._listeners.get(event) || [];\n        events.push(callback);\n        this._listeners.set(event, events);\n    }\n\n    off(event: string, callback: Function): void {\n        const events = this._listeners.get(event);\n\n        if (!events) {\n            return;\n        }\n\n        this._listeners.set(event, events.filter((listener) => listener !== callback));\n    }\n\n    emit(event: string, ...args: unknown[]) {\n        const events = this._listeners.get(event);\n\n        if (!events) {\n            return;\n        }\n        events.forEach((listener) => {\n            listener(...args);\n        });\n    }\n}\n","import { Vector2D } from \"game/core/utils/vector\";\nimport { RectangleGeometry } from \"game/core/geometry/rectangle/rectangle\";\nimport { CanReceiveDamage } from \"game/core/animations/damage/damage\";\nimport { Object2D, Object2DProps } from \"../../core/object\";\nimport Physics, { Collidable } from \"../../core/physics/physics\";\nimport { MoveAnimation } from \"../../core/animations/move/moveAnimation\";\nimport { AnimationSprites, SpriteAnimation } from \"../../core/animations/sprite/spriteAnimation\";\nimport { AttackAnimation, CanAttack } from \"../../core/animations/attack/attack\";\nimport { Weapon } from \"./weapon\";\nimport { Wall } from \"./wall\";\nimport { Enemy } from \"./enemy\";\nimport { EventTypes } from \"../world.config\";\nimport WorldManager from \"../world.manager\";\nimport WorldEvents from \"../world.events\";\n\ntype PlayerProps = Object2DProps & {\n    geometry: RectangleGeometry,\n    maxHealth: number;\n    image?: HTMLImageElement;\n};\n\nexport class Player extends Object2D implements Collidable, CanAttack, CanReceiveDamage {\n    //\n    geometry: RectangleGeometry;\n    // Скорость передвижения пиксель/сек\n    speed: number = 150;\n    // Анимация передвижения\n    moveAnimation: MoveAnimation;\n    prevPosition: Vector2D;\n    //\n    canCollide: boolean = true;\n    // Анимация изменения Sprite\n    spriteAnimation: SpriteAnimation;\n    playerSprites: AnimationSprites;\n    // Оружие и анимация аттаки\n    weapon: Weapon;\n    attackAnimation: AttackAnimation;\n    // Здоровье\n    maxHealth: number;\n    private _health: number;\n\n    // TODO: Додумать реализацию\n    get health(): number {\n        return this._health;\n    }\n    set health(value: number) {\n        this._health = value;\n        WorldManager.playerUI?.updateHealth(this._health);\n        if (this._health <= 0) {\n            this.onDeath();\n        }\n    }\n\n    constructor(props: PlayerProps) {\n        super(props);\n\n        this.maxHealth = props.maxHealth;\n        // По дефолту полное здоровье\n        this._health = this.maxHealth;\n\n        this._createPlayerSprites(props.image);\n        this._updateWeaponState();\n        this.init();\n    }\n\n    init() {\n        // Создаем логику анимации движения\n        this.moveAnimation = new MoveAnimation({\n            speed: this.speed,\n        });\n        this.moveStateUpdateCondition();\n        // Создаем логику анимации смены sprite\n        this.spriteAnimation = new SpriteAnimation({\n            sprites: this.playerSprites,\n        });\n        // Создаем логику анимации атаки\n        this.attackAnimation = new AttackAnimation();\n    }\n\n    updateState() {\n        // Обновляем sprite\n        this.spriteConfig = this.spriteAnimation.update(this.spriteConfig, this.moveAnimation);\n        if (this.weapon.spriteConfig) {\n            this.weapon.spriteConfig.shouldFlip = this.spriteConfig?.shouldFlip;\n        }\n        // Обновляем position\n        this.prevPosition = this.position.copy();\n        this.position = this.moveAnimation.update(this.position);\n        // Обновляем оружие\n        this.weapon = this.attackAnimation.update(this.weapon, this);\n    }\n\n    // NOTE: Если скорость объекта значительно больше размера препятствия, то\n    // может случиться \"проскок\" объекта\n    onCollide(obstacle: Object2D & Collidable) {\n        if (obstacle instanceof Wall || obstacle instanceof Enemy) {\n            this.position = Physics.getNewPositionAfterWallCollision(\n                this,\n                obstacle,\n                this.moveAnimation,\n                this.prevPosition,\n            );\n        }\n    }\n\n    onDeath() {\n        WorldManager.gameOverCallback();\n    }\n\n    moveStateUpdateCondition() {\n        const { moveState } = this.moveAnimation;\n        //\n        WorldEvents.on(\n            EventTypes.ArrowLeftDown,\n            () => (moveState.isMovingLeft = true),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowBottomDown,\n            () => (moveState.isMovingDown = true),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowTopDown,\n            () => (moveState.isMovingTop = true),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowRightDown,\n            () => (moveState.isMovingRight = true),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowLeftUp,\n            () => (moveState.isMovingLeft = false),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowTopUp,\n            () => (moveState.isMovingTop = false),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowBottomUp,\n            () => (moveState.isMovingDown = false),\n        );\n        WorldEvents.on(\n            EventTypes.ArrowRightUp,\n            () => (moveState.isMovingRight = false),\n        );\n    }\n\n    private _updateWeaponState() {\n        WorldEvents.on(\n            EventTypes.SpaceDown,\n            () => {\n                this.weapon.active = true;\n                this.weapon.visible = true;\n            },\n        );\n    }\n\n    private _createPlayerSprites(image?: HTMLImageElement) {\n        this.playerSprites = {\n            idle_0: {\n                sx: 128,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            idle_1: {\n                sx: 128 + 16,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            idle_2: {\n                sx: 128 + 16 * 2,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            idle_3: {\n                sx: 128 + 16 * 3,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            run_0: {\n                sx: 192,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            run_1: {\n                sx: 192 + 16,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            run_2: {\n                sx: 192 + 16 * 2,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n            run_3: {\n                sx: 192 + 16 * 3,\n                sy: 107,\n                sWidth: 16,\n                sHeight: 21,\n            },\n        };\n        // Устанавливаем дефолтный спрайт\n        this.spriteConfig = {\n            image,\n            sprite: this.playerSprites.idle_0,\n            shouldFlip: false,\n        };\n    }\n}\n","import { Object2D, Object2DProps } from \"../../core/object\";\n\ntype GroundProps = Object2DProps & {\n\n};\n\nexport class Ground extends Object2D {\n    constructor(props: GroundProps) {\n        super(props);\n        this.init();\n    }\n\n    init() {\n\n    }\n}\n","import { Object2D } from \"./object\";\n\nexport class Camera {\n    // TODO: Размеры viewport, zoom, объект привязки\n    bindedObject: Object2D | null;\n    size: number;\n\n    get x(): number {\n        return this.bindedObject?.position.x || 0;\n    }\n\n    get y(): number {\n        return this.bindedObject?.position.y || 0;\n    }\n\n    constructor(size: number) {\n        this.size = size;\n    }\n\n    bindObject(object: Object2D) {\n        this.bindedObject = object;\n    }\n    // TODO: frustumView culling\n}\n","import { Object2D, Object2DProps } from \"../../core/object\";\nimport { Sprite } from \"../world.manager\";\n\ntype HealthProps = Object2DProps & {\n    tileSetImage: HTMLImageElement\n    isHalf?: boolean // Половинка здоровья\n    isEmpty?: boolean // Половинка здоровья\n};\n\nconst HEALTH_SPITE: Sprite = {\n    sx: 288,\n    sy: 256,\n    sWidth: 16,\n    sHeight: 16,\n};\n\nconst HALF_HEALTH_SPITE: Sprite = {\n    sx: 304,\n    sy: 256,\n    sWidth: 16,\n    sHeight: 16,\n};\n\nconst EMPTY_HEALTH_SPITE: Sprite = {\n    sx: 320,\n    sy: 256,\n    sWidth: 16,\n    sHeight: 16,\n};\n\nexport class Health extends Object2D {\n    tileSetImage: HTMLImageElement;\n    isHalf: boolean;\n    isEmpty: boolean;\n\n    constructor(props: HealthProps) {\n        super(props);\n        this.isHalf = Boolean(props.isHalf);\n        this.isEmpty = Boolean(props.isEmpty);\n        this.tileSetImage = props.tileSetImage;\n        this.init();\n    }\n\n    init() {\n        this.spriteConfig = {\n            image: this.tileSetImage,\n            sprite: HEALTH_SPITE,\n        };\n        if (this.isHalf) {\n            this.spriteConfig.sprite = HALF_HEALTH_SPITE;\n        }\n        if (this.isEmpty) {\n            this.spriteConfig.sprite = EMPTY_HEALTH_SPITE;\n        }\n    }\n}\n","import { Camera } from \"../../core/camera\";\nimport { RectangleGeometry } from \"../../core/geometry/rectangle/rectangle\";\nimport { Renderer } from \"../../core/renderer\";\nimport { Color } from \"../../core/utils/color\";\nimport { Scene } from \"../../core/scene\";\nimport { LEVEL_SIZE } from \"../world.config\";\nimport { Health } from \"./health\";\n\ntype PlayerUIProps = {\n    canvas: HTMLCanvasElement,\n    tileSetImage: HTMLImageElement,\n    maxHealth: number\n};\n\nexport class PlayerUI {\n    canvas: HTMLCanvasElement;\n    renderer: Renderer;\n    camera: Camera;\n    scene: Scene;\n\n    health: number;\n    maxHealth: number;\n    score: number;\n\n    tileSetImage: HTMLImageElement;\n\n    constructor(props: PlayerUIProps) {\n        this.canvas = props.canvas;\n        this.canvas.style.position = \"absolute\";\n        this.canvas.height = window.innerHeight;\n        this.canvas.width = window.innerWidth;\n\n        this.maxHealth = props.maxHealth;\n        this.tileSetImage = props.tileSetImage;\n        this.init();\n    }\n\n    init() {\n        // Создаем Renderer\n        this.renderer = new Renderer({\n            canvas: this.canvas,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n        // Camera\n        this.camera = new Camera(LEVEL_SIZE * 1);\n        // Задаем бэкграунд и создаем сцену\n        // Прозрачный\n        const background = new Color(0, 0, 0, 0);\n        this.scene = new Scene(background);\n        //\n        this.updateHealth(this.maxHealth);\n    }\n\n    updateHealth(health: number) {\n        this.health = health;\n        const healthObjects: Health[] = [];\n        for (let i = 1; i <= this.maxHealth; i += 1) {\n            let isEmpty = false;\n            let isHalf = false;\n            if (i > this.health) {\n                if (i - this.health === 0.5) {\n                    isHalf = true;\n                } else {\n                    isEmpty = true;\n                }\n            }\n            const healthGeom = new RectangleGeometry(16, 16);\n            const healthObject = new Health({\n                geometry: healthGeom,\n                tileSetImage: this.tileSetImage,\n                isEmpty,\n                isHalf,\n            });\n            healthObject.position.x = (i - 1) * 16 + 5;\n            healthObject.position.y = 5;\n            healthObjects.push(healthObject);\n        }\n        this.scene.objects = this.scene.objects.filter((x) => x instanceof Health);\n        this.scene.add(healthObjects);\n    }\n\n    updateScore() {\n\n    }\n}\n","import { isServer } from \"@/helpers/environment\";\n\nimport { Color } from \"../core/utils/color\";\nimport { RectangleGeometry } from \"../core/geometry/rectangle/rectangle\";\nimport { Scene } from \"../core/scene\";\n\nimport { Player } from \"./objects/player\";\nimport { Enemy } from \"./objects/enemy\";\n\nimport {\n    generateRandomLevel, getFirstGroundTileOnLevel,\n    getLastGroundTileOnLevel, Level, TileTypes, TILE_TYPES,\n} from \"./world.helpers\";\nimport { Object2D } from \"../core/object\";\nimport { Vector2D } from \"../core/utils/vector\";\nimport { LEVEL_SIZE, TILE_SIZE } from \"./world.config\";\nimport { Ground } from \"./objects/ground\";\nimport { Wall } from \"./objects/wall\";\nimport { Camera } from \"../core/camera\";\n\nimport TileSetImage from \"../../../assets/tileset.png\";\nimport { Weapon } from \"./objects/weapon\";\nimport { PlayerUI } from \"./ui/player.ui\";\n\nexport type Sprite = {\n    // Положение на изображении\n    sx: number,\n    sy: number,\n    sWidth: number,\n    sHeight: number,\n};\n\nclass WorldManager {\n    // Scene\n    scene: Scene;\n    // Camera\n    camera: Camera;\n    // Игрок\n    player: Player;\n    // Картинка Sprites\n    tileSetImage: HTMLImageElement;\n    // Уровень\n    level: Level;\n    // UI canvas и управление\n    playerUI: PlayerUI | undefined;\n    // Callbacks\n    gameOverCallback: () => void;\n    gameWinCallback: () => void;\n\n    constructor() {\n        // TODO: костыль тк в ноде нельзя new Image\n        const tileSetImage = !isServer ? new Image(512, 512) : null;\n\n        if (!tileSetImage) return;\n\n        tileSetImage.src = TileSetImage;\n        this.tileSetImage = tileSetImage;\n    }\n\n    composeLevel(\n        gameOverCallback: () => void,\n        gameWinCallback: () => void,\n    ): [Scene, Camera] {\n        this.gameOverCallback = gameOverCallback;\n        this.gameWinCallback = gameWinCallback;\n        // Camera\n        this.camera = new Camera(LEVEL_SIZE);\n        // Задаем бэкграунд и создаем сцену\n        const background = new Color(0, 0, 0);\n        this.scene = new Scene(background);\n        // Генерируем рандомный уровень\n        this.level = generateRandomLevel();\n        // Создаем стены и землю из матрицы уровня\n        const objects = this._createWallsAndGroundFromLevel(this.level);\n        // И добавляем в сцену первыми\n        this.scene.add(objects);\n        // В отдельный список добавляем объекты, которые имеют физику\n        this.scene.addObjectWithPhysics(objects.filter((x) => x instanceof Wall));\n        // Создаем Игрока\n        const [player, sword] = this._createPlayer(this.level);\n        this.player = player;\n        // Добавляем в сцену\n        this.scene.add([sword, player]);\n        this.scene.addObjectWithPhysics([sword, player]);\n        // Устанавливаем объект привязки камеры\n        this.camera.bindObject(player);\n        // Создаем противников\n        this._createEnemies();\n\n        return [this.scene, this.camera];\n    }\n\n    composeUIScene(canvas: HTMLCanvasElement) {\n        // Создаем playerUI\n        this.playerUI = new PlayerUI({\n            canvas,\n            tileSetImage: this.tileSetImage,\n            maxHealth: this.player.maxHealth,\n        });\n    }\n\n    getTilePositionFromCoordinates(coordinates: Vector2D): Vector2D {\n        const x = Math.floor(coordinates.x / TILE_SIZE) * TILE_SIZE;\n        const y = Math.floor(coordinates.y / TILE_SIZE) * TILE_SIZE;\n        return new Vector2D(x, y);\n    }\n\n    private _createWallsAndGroundFromLevel(level: Level): Array<Object2D> {\n        const objects: Array<Object2D> = [];\n        for (let i = 0; i < level.length; i += 1) {\n            for (let j = 0; j < level.length; j += 1) {\n                const number = level[i][j];\n                const position: Vector2D = new Vector2D(j * TILE_SIZE, i * TILE_SIZE);\n                if (TILE_TYPES[number] === TileTypes.Ground) {\n                    const groundGeom = new RectangleGeometry(TILE_SIZE, TILE_SIZE);\n                    const color = new Color(225, 0, 0);\n                    const ground = new Ground({ geometry: groundGeom, color });\n                    ground.position = position;\n                    // TODO: Перенести в класс\n                    const sprite: Sprite = {\n                        sx: 16,\n                        sy: 64,\n                        sWidth: 16,\n                        sHeight: 16,\n                    };\n                    ground.spriteConfig = {\n                        image: this.tileSetImage,\n                        sprite,\n                    };\n                    objects.push(ground);\n                }\n                if (TILE_TYPES[number] === TileTypes.Wall) {\n                    const wallGeom = new RectangleGeometry(TILE_SIZE, TILE_SIZE);\n                    const color = new Color(0, 225, 0);\n                    const wall = new Wall({ geometry: wallGeom, color });\n                    wall.position = position;\n                    // TODO: Перенести в класс\n                    const sprite: Sprite = {\n                        sx: 16,\n                        sy: 16,\n                        sWidth: 16,\n                        sHeight: 16,\n                    };\n                    wall.spriteConfig = {\n                        image: this.tileSetImage,\n                        sprite,\n                    };\n                    objects.push(wall);\n                }\n            }\n        }\n        return objects;\n    }\n\n    private _createPlayer(\n        level: Level,\n    ): [Player, Weapon] {\n        const playerGeom = new RectangleGeometry(16, 21);\n        const player = new Player({\n            geometry: playerGeom,\n            image: this.tileSetImage,\n            maxHealth: 6,\n        });\n        // Зададим дефолтное положение\n        const playerPosition = getFirstGroundTileOnLevel(level);\n        if (!playerPosition) {\n            throw new Error(\"Уровень сгенерирован с ошибкой\");\n        }\n        player.position = playerPosition;\n        // Создадим оружие\n        const swordGeometry = new RectangleGeometry(10, 21);\n        const sword = new Weapon({\n            geometry: swordGeometry,\n            damage: 1,\n        });\n        sword.spriteConfig = {\n            image: this.tileSetImage,\n            sprite: {\n                sx: 323,\n                sy: 26,\n                sWidth: 10,\n                sHeight: 21,\n            },\n        };\n        sword.visible = false;\n        player.weapon = sword;\n        return [player, sword];\n    }\n\n    private _createEnemies() {\n        // Создаем противника 1\n        const enemy = this._createEnemy(this.scene, this.level);\n        // Добавляем в сцену\n        this.scene.add(enemy);\n        this.scene.addObjectWithPhysics(enemy);\n        // Создаем противника 2\n        const enemy2 = this._createEnemy(this.scene, this.level);\n        // Добавляем в сцену\n        this.scene.add(enemy2);\n        this.scene.addObjectWithPhysics(enemy2);\n        // Создаем противника 3\n        const enemy3 = this._createEnemy(this.scene, this.level);\n        // Добавляем в сцену\n        this.scene.add(enemy3);\n        this.scene.addObjectWithPhysics(enemy3);\n    }\n\n    private _createEnemy(\n        scene: Scene,\n        level: Level,\n    ): Enemy {\n        const enemyGeom = new RectangleGeometry(TILE_SIZE, TILE_SIZE);\n        const enemy = new Enemy({\n            scene,\n            geometry: enemyGeom,\n            color: new Color(0, 0, 255),\n            image: this.tileSetImage,\n            maxHealth: 1,\n        });\n        // Зададим дефолтное положение\n        const enemyPosition = getLastGroundTileOnLevel(level);\n        if (!enemyPosition) {\n            throw new Error(\"Уровень сгенерирован с ошибкой\");\n        }\n        enemy.position = enemyPosition;\n        return enemy;\n    }\n}\n\n// Синглтон\nexport default new WorldManager();\n","import { Camera } from \"../core/camera\";\nimport { Renderer } from \"../core/renderer\";\nimport { Scene } from \"../core/scene\";\nimport WorldManager from \"./world.manager\";\nimport WorldEvents from \"./world.events\";\nimport { EventTypes, STEP } from \"./world.config\";\n\ntype WorldProps = {\n    canvas: HTMLCanvasElement | null\n    uiCanvas: HTMLCanvasElement | null\n    gameOverCallback: () => void\n    gameWinCallback: () => void\n};\n\n// Игровой мир\nexport class World {\n    canvas: HTMLCanvasElement | null;\n    uiCanvas: HTMLCanvasElement | null;\n    renderer: Renderer;\n    // Управление анимацией рендеринга\n    animationNumber: number | undefined;\n    scene: Scene;\n    camera: Camera;\n\n    // Callback to interact with GUI\n    gameOverCallback: () => void;\n    gameWinCallback: () => void;\n\n    /**\n       Инициализирует world и начинает анимацию\n    */\n    init(props: WorldProps) {\n        this.canvas = props.canvas;\n        this.uiCanvas = props.uiCanvas;\n        this.gameOverCallback = props.gameOverCallback;\n        this.gameWinCallback = props.gameWinCallback;\n\n        // Создаем Renderer\n        this.renderer = new Renderer({\n            canvas: this.canvas,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n\n        // World Manager\n        [this.scene, this.camera] = WorldManager.composeLevel(\n            this.gameOverCallback,\n            this.gameWinCallback,\n        );\n\n        // Создаем playerUI\n        if (this.uiCanvas) {\n            WorldManager.composeUIScene(this.uiCanvas);\n        }\n\n        // Инициализируем события\n        WorldEvents.init();\n        // Подписываемся на событие ресайз\n        WorldEvents.on(EventTypes.Resize, this._onResize.bind(this));\n        // Начинаем анимацию\n        this.startAnimataion();\n    }\n\n    startAnimataion() {\n        let dt = 0; // определяем текущее время\n        let last = performance.now(); // в этой переменной сохраняем время вызова предыдущего кадра\n\n        const render = () => {\n            this.animationNumber = requestAnimationFrame(() => render());\n            // определяем текущее время\n            const now = performance.now();\n            // добавляем прошедшую разницу во времени\n            dt += Math.min(1, (now - last) / 1000); // исправление проблемы неактивных вкладок\n            while (dt > STEP) {\n                // вложенный цикл может вызывать обновление состояния несколько раз подряд\n                // если прошло больше времени, чем выделено на один кадр\n                dt -= STEP;\n                // Обновляем состояние каждый STEP\n                this.renderer.prerender(this.scene);\n                // TODO: Реализовать логику camera без привязки к объекту\n                // this.camera.update()\n            }\n            // сохраняем время отрисовки последнего кадра\n            last = now;\n            // Рендерим основной мир\n            this.renderer.render(this.scene, this.camera);\n            // Рендерим UI поверх\n            WorldManager.playerUI?.renderer.render(\n                WorldManager.playerUI.scene,\n                WorldManager.playerUI.camera,\n            );\n        };\n\n        render();\n    }\n\n    stopAnimation() {\n        if (this.animationNumber) {\n            cancelAnimationFrame(this.animationNumber);\n            this.animationNumber = undefined;\n        }\n    }\n\n    private _onResize() {\n        if (this.canvas && this.animationNumber) {\n            this.canvas.height = window.innerHeight;\n            this.canvas.width = window.innerWidth;\n            if (this.uiCanvas) {\n                this.uiCanvas.height = window.innerHeight;\n                this.uiCanvas.width = window.innerWidth;\n            }\n        }\n    }\n\n    destroy() {\n        this.stopAnimation();\n        WorldEvents.unsubscribe();\n    }\n}\n","import React, { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { shallowEqual } from \"react-redux\";\n\nimport { World } from \"@/game/world/world\";\nimport { routes } from \"@/config/routes/routes\";\nimport { TOGGLE_FULLSCREEN_BUTTON, TOGGLE_MENU_BUTTON } from \"@/game/world/world.config\";\nimport { TEAM_SCORE, LeaderBoardRecord } from \"@/config/leaderboard\";\nimport { useSelector } from \"@/hooks/useSelector\";\nimport LeaderboardApi from \"@/api/Leaderboard/Leaderboard.api\";\n\nconst togglePointerLock = () => {\n    document.documentElement.requestPointerLock();\n};\n\nconst togglePointerUnlock = () => {\n    document.exitPointerLock();\n};\n\nconst exitFullScreen = () => {\n    if (document.fullscreenElement) {\n        document.exitFullscreen();\n    }\n};\n\nconst openFullScreen = () => {\n    if (!document.fullscreenElement) {\n        document.documentElement.requestFullscreen();\n    }\n};\n\nconst toggleFullScreen = () => {\n    if (document.fullscreenElement) {\n        exitFullScreen();\n    } else {\n        openFullScreen();\n    }\n};\n\nexport const useGame = () => {\n    const [isActive, setActive] = useState(true);\n    const [isGameOver, setGameOver] = useState(false);\n    const [isGameWin, setGameWin] = useState(false);\n    const [isPaused, setPause] = useState(false);\n    const [world] = useState(new World());\n    const canvasRef = React.useRef<HTMLCanvasElement>(null);\n    const uiCanvasRef = React.useRef<HTMLCanvasElement>(null);\n    const history = useHistory();\n    const user = useSelector((state) => state.profile.data, shallowEqual);\n\n    const createRecord = useCallback(() => {\n        const data: LeaderBoardRecord = {\n            login: user.login,\n            [TEAM_SCORE]: Math.round(Math.random() * 200),\n        };\n        LeaderboardApi.createLeaderBoardRecord(data);\n    }, []);\n\n    const callMenu = useCallback((e: KeyboardEvent) => {\n        if (e.key === TOGGLE_MENU_BUTTON) {\n            setActive(true);\n            setPause(true);\n            world.stopAnimation();\n            togglePointerUnlock();\n        }\n        if (e.key === TOGGLE_FULLSCREEN_BUTTON) {\n            toggleFullScreen();\n        }\n    }, []);\n\n    const callGameOver = useCallback(() => {\n        setActive(true);\n        setGameOver(true);\n        world.destroy();\n        togglePointerUnlock();\n        createRecord();\n    }, []);\n\n    const callGameWin = useCallback(() => {\n        setActive(true);\n        setGameWin(true);\n        world.destroy();\n        togglePointerUnlock();\n        createRecord();\n    }, []);\n\n    const setUpPauseButton = useCallback(() => {\n        document.addEventListener(\"keydown\", callMenu);\n    }, []);\n\n    const onClose = useCallback(() => {\n        setActive(false);\n        exitFullScreen();\n        history.push(routes.main.path);\n    }, []);\n\n    const onStart = useCallback(() => {\n        world.init({\n            canvas: canvasRef.current,\n            uiCanvas: uiCanvasRef.current,\n            gameOverCallback: callGameOver,\n            gameWinCallback: callGameWin,\n        });\n        setGameOver(false);\n        setGameWin(false);\n        setPause(false);\n        setActive(false);\n        togglePointerLock();\n        openFullScreen();\n    }, []);\n\n    const onResume = useCallback(() => {\n        world.startAnimataion();\n        setPause(false);\n        setActive(false);\n        togglePointerLock();\n    }, []);\n\n    const onUnmount = useCallback(() => {\n        world.destroy();\n        document.removeEventListener(\"keydown\", callMenu);\n    }, []);\n\n    return {\n        isActive,\n        isPaused,\n        canvasRef,\n        uiCanvasRef,\n        onStart,\n        onResume,\n        onClose,\n        onUnmount,\n        setUpPauseButton,\n        isGameOver,\n        isGameWin,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"VJBHhg7XFDtxeSNUAZDw\",\"title\":\"eFlcKTx78Wlv2EtRSPio\"};","import React, { FC } from \"react\";\nimport { Modal as CustomModal, Typography, Button } from \"antd\";\n\nimport styles from \"./Main.module.scss\";\n\nconst { Title } = Typography;\ninterface Props {\n    isActive: boolean;\n    isPaused: boolean;\n    isGameOver: boolean;\n    isGameWin: boolean;\n    onClose: () => void;\n    onStart: () => void;\n    onResume: () => void;\n}\n\nconst Menu: FC<Props> = ({\n    isActive,\n    isPaused,\n    isGameOver,\n    isGameWin,\n    onClose,\n    onStart,\n    onResume,\n}) => (\n    <CustomModal\n        title=\"Меню\"\n        visible={isActive}\n        footer={null}\n        closable={false}\n    >\n        <div className={styles.buttonContainer}>\n            {isGameOver && (\n                <Title className={styles.title} level={3}>\n                    Потрачено!\n                </Title>\n            )}\n\n            {isGameWin && (\n                <Title className={styles.title} level={3}>\n                    Победа!\n                </Title>\n            )}\n\n            <Button type=\"primary\" onClick={isPaused ? onResume : onStart}>\n                {isPaused ? \"Продолжить\"\n                    : `Начать ${(isGameOver || isGameWin) ? \"заново\" : \"игру\"}`\n                }\n            </Button>\n\n            <Button type=\"primary\" onClick={onClose}>\n                Вернуться на главную\n            </Button>\n        </div>\n    </CustomModal>\n);\n\nexport default Menu;\n","import React, { FC } from \"react\";\n\nimport { useGame } from \"@/pages/Game/Game.helpers\";\nimport Menu from \"./Menu\";\nimport PageMeta from \"@/components/PageMeta\";\nimport styles from \"./Game.module.scss\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\nimport { useUnmountEffect } from \"@/hooks/useUnmountEffect\";\n\nconst Game: FC = () => {\n    const {\n        isActive,\n        isPaused,\n        canvasRef,\n        uiCanvasRef,\n        onStart,\n        onResume,\n        onClose,\n        onUnmount,\n        setUpPauseButton,\n        isGameOver,\n        isGameWin,\n    } = useGame();\n\n    useMountEffect(() => {\n        setUpPauseButton();\n    });\n\n    useUnmountEffect(() => {\n        onUnmount();\n    });\n\n    return (\n        <>\n            <PageMeta title=\"Game\" description=\"Game page\" />\n            <div className={styles.game}>\n                <canvas ref={canvasRef} />\n                <canvas ref={uiCanvasRef} />\n                <Menu\n                    isActive={isActive}\n                    onClose={onClose}\n                    onStart={onStart}\n                    isPaused={isPaused}\n                    isGameOver={isGameOver}\n                    isGameWin={isGameWin}\n                    onResume={onResume}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default Game;\n","import { useEffect } from \"react\";\n\n/**\n * Вызывает effectCallback при unmount компонента\n */\nexport const useUnmountEffect = (effectCallback: () => (() => void) | void) => {\n    useEffect(() => () => {\n        effectCallback();\n    }, []);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"game\":\"KQGV7dUqbgjYs1ZwpxXx\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"wN3ZAMOwZkdEOLnck1VB\",\"info\":\"WgBzMCi6qYIjWHRWiYJo\",\"notFound\":\"Au51wDy14LIeKsXdlStJ\",\"container\":\"aNybNIFFW5NPE8XGbE8a\",\"errorContainer\":\"pRiz7GMS75rLbl0hQ3MK\",\"back\":\"F5BSP_DuF2JWJpELV9l9\"};","import React from \"react\";\nimport { Typography } from \"antd\";\n\nimport { Link } from \"react-router-dom\";\nimport Container from \"@/components/Container\";\n\nimport styles from \"./Offline.module.scss\";\n\nconst Error = () => {\n    const {\n        container, errorContainer, title, info, back, notFound,\n    } = styles;\n\n    return (\n        <Container>\n            <div className={container}>\n                <div className={errorContainer}>\n                    <Typography className={title}>Вы сейчас оффлайн</Typography>\n                    <Typography className={info}>\n                        Попробуйте зайти позже\n                    </Typography>\n                    <Link to={\"/\"} className={back}>\n                        Вернуться\n                    </Link>\n                </div>\n                <div className={notFound} />\n            </div>\n        </Container>\n    );\n};\n\nexport default Error;\n","import React, { FC } from \"react\";\nimport { Comment } from \"antd\";\n\nimport styles from \"./Comment.module.scss\";\n\ninterface Props {\n    author?: string,\n    message?: string,\n}\n\nconst CommentContainer: FC<Props> = ({ author, message }) => (\n    <Comment\n        className={styles.comment}\n        author={<a>{author ?? \"author\"}</a>}\n        content={\n            <p>{message ?? \"Say what?\"}</p>\n        }\n    />\n);\n\nexport default CommentContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"comment\":\"TspRTE2G39H6tAirzKZs\",\"ant-comment-content-author-name\":\"l3_WNbYCgL44Ir5PsAEw\"};","import React, { FC, useCallback, useState } from \"react\";\nimport { Input } from \"antd\";\n\nimport styles from \"./CommentInput.module.scss\";\n\nimport Button from \"@/components/Button\";\n\nconst { TextArea } = Input;\n\nconst CommentInput: FC = () => {\n    const [message, setMessage] = useState(\"\");\n\n    const handleInput = useCallback((e: any) => setMessage(e.target.value), []);\n    const handleSubmit = useCallback(() => console.log(message), [message]);\n\n    return (\n        <>\n            <div className={styles.container}>\n                <TextArea maxLength={100} rows={3} onChange={handleInput} value={message} />\n            </div>\n            <div className={styles.buttonContainer} >\n                <Button type=\"primary\" onClick={handleSubmit}>Отправить</Button>\n            </div>\n        </>\n    );\n};\n\nexport default CommentInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"bTNmpK1ju_yi_nGhJ8V7\",\"buttonContainer\":\"Tn1PaCwUlNzlPDXni40j\"};","import { ForumState } from \"reducers/forum.reducer\";\nimport { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { History } from \"history\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport { TopicEditData } from \"@/reducers/topic.reducer\";\n\nimport { TOPIC_LOAD, TOPIC_SET_LOADING } from \"./types/topic.types\";\nimport api from \"../api/Forum\";\n\nexport type TopicAction = GetTopic | SetLoading;\n\ntype GetTopic = {\n    type: typeof TOPIC_LOAD,\n    payload: Pick<ForumState, \"data\">\n};\n\nconst getTopic = (data: any): GetTopic => ({\n    type: TOPIC_LOAD,\n    payload: { data },\n});\n\ntype SetLoading = {\n    type: typeof TOPIC_SET_LOADING,\n    payload: Pick<ForumState, \"isLoading\">\n};\n\nconst setLoading = (isLoading: boolean): SetLoading => ({\n    type: TOPIC_SET_LOADING,\n    payload: { isLoading },\n});\n\nexport const loadTopic = (id: number):\nThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(setLoading(true));\n    try {\n        const data = await api.getTopic(id);\n        if (data) {\n            dispatch(getTopic(data));\n        }\n        dispatch(setLoading(false));\n    } catch (error) {\n        dispatch(setLoading(false));\n    }\n};\n\nexport const createTopic = (\n    data: TopicEditData,\n    history: History,\n): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(setLoading(true));\n    try {\n        const response = await api.createTopic(data);\n        if (response) {\n            history.push(routes.forum.path);\n        } else {\n            dispatch(setLoading(false));\n        }\n    } catch (error) {\n        dispatch(setLoading(false));\n    }\n};\n\nexport const updateTopic = (\n    id: number,\n    data: TopicEditData,\n): ThunkAction<void, unknown, unknown, AnyAction> => async (dispatch, _state) => {\n    dispatch(setLoading(true));\n    try {\n        const response = await api.updateTopic(id, data);\n        if (response) {\n            // dispatch(signInSuccess());\n            // todo\n        } else {\n            dispatch(setLoading(false));\n        }\n    } catch (error) {\n        dispatch(setLoading(false));\n    }\n};\n","import React, { FC } from \"react\";\nimport { Typography } from \"antd\";\n\nimport Container from \"@/components/Container\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Header from \"@/components/Header\";\nimport { routes } from \"@/config/routes/routes\";\nimport PageLoader from \"@/components/PageLoader\";\n\nimport styles from \"./Topic.module.scss\";\nimport CommentContainer from \"./Comment\";\nimport CommentInput from \"./CommentInput\";\nimport { useTopic } from \"./Topic.helpers\";\n\nconst { Title, Text } = Typography;\n\nconst Topic: FC = () => {\n    const { topic, isLoading } = useTopic();\n    const { title, body } = topic;\n\n    return (\n        <PageLoader isSpinning={isLoading}>\n            <Container>\n                <PageMeta title=\"Topic\" description=\"About game\" />\n                <Header currentPath={routes.topic.path} />\n                <div className={styles.container}>\n                    <Title level={2}>{title}</Title>\n                    <Text>{body}</Text>\n                    <div className={styles.comments}>\n                        <CommentContainer/>\n                        <CommentContainer/>\n                        <CommentContainer/>\n                    </div>\n                    <CommentInput/>\n                </div>\n            </Container>\n        </PageLoader>\n    );\n};\n\nexport default Topic;\n","import { shallowEqual, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\nimport { loadTopic } from \"@/actions/topic.actions\";\n\nexport const useTopic = () => {\n    const dispatch = useDispatch();\n    const { data, isLoading } = useSelector((state) => state.topic, shallowEqual);\n    const { pathname } = useLocation();\n\n    const id = pathname.split(\"/\").slice(-1)[0];\n\n    useMountEffect(() => {\n        dispatch(loadTopic(Number(id)));\n    });\n\n    return {\n        topic: data,\n        isLoading,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"VRShYKvDw5s7uMOjoJ0w\",\"comments\":\"rEOOn71v_anhyYGzSuIJ\"};","import React, { FC } from \"react\";\nimport { Input as CustomInput, InputProps } from \"antd\";\n\ninterface Props extends InputProps {}\n\nconst Input:FC<Props> = (props) => (<CustomInput {...props}/>);\n\nexport default Input;\n","import { useHistory, useLocation } from \"react-router-dom\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { routes } from \"@/config/routes/routes\";\nimport { createTopic, updateTopic } from \"@/actions/topic.actions\";\nimport { useSelector } from \"@/hooks/useSelector\";\nimport { TopicEditData } from \"@/reducers/topic.reducer\";\n\nexport enum TopicFieldNames {\n    Title = \"title\",\n    Body = \"body\",\n}\n\nexport const useTopicForm = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const isLoading = useSelector((state) => state.topic.isLoading);\n    const { pathname } = useLocation();\n\n    const id = pathname.split(\"/\").slice(-1)[0];\n    const hasId = !isNaN(Number(id));\n\n    const submitLabel = hasId ? \"Редактировать\" : \"Создать\";\n    const titleLabel = hasId ? \"Редактирование темы\" : \"Создание темы\";\n\n    console.log(hasId);\n\n    const onFinish = useCallback(async (data: TopicEditData) => {\n        if (hasId) {\n            dispatch(updateTopic(Number(id), data));\n        } else {\n            dispatch(createTopic(data, history));\n        }\n    }, []);\n\n    const onFinishFailed = (errorInfo: Error) => console.log(\"Failed:\", errorInfo);\n\n    return {\n        currentPath: routes.topicEdit.path,\n        onFinish,\n        onFinishFailed,\n        isLoading,\n        submitLabel,\n        titleLabel,\n    };\n};\n","import React, { FC } from \"react\";\nimport {\n    Button, Form, Input as AntInput, Typography,\n} from \"antd\";\nimport { RightOutlined } from \"@ant-design/icons\";\n\nimport Container from \"@/components/Container\";\nimport PageMeta from \"@/components/PageMeta\";\nimport Header from \"@/components/Header\";\nimport PageLoader from \"@/components/PageLoader\";\nimport Input from \"@/components/Input\";\n\nimport styles from \"./TopicEdit.module.scss\";\nimport { TopicFieldNames, useTopicForm } from \"./TopicEdit.helpers\";\n\nconst { TextArea } = AntInput;\n\nconst TopicEdit: FC = () => {\n    const {\n        isLoading, onFinish, onFinishFailed, currentPath, submitLabel, titleLabel,\n    } = useTopicForm();\n\n    return (\n        <PageLoader isSpinning={isLoading}>\n            <Container>\n                <PageMeta title=\"Topic\" description=\"About game\" />\n                <Header currentPath={currentPath} />\n                <div className={styles.container}>\n                    <Typography className={styles.title}>{titleLabel}</Typography>\n                    <Form\n                        name=\"topicCreate\"\n                        onFinish={onFinish}\n                        onFinishFailed={() => onFinishFailed}\n                        layout=\"vertical\"\n                    >\n                        <Form.Item\n                            name={TopicFieldNames.Title}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Введите заголовок топика\",\n                                },\n                            ]}\n                        >\n                            <Input\n                                placeholder=\"заголовок\"\n                                prefix={<RightOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name={TopicFieldNames.Body}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Введите описание топика\",\n                                },\n                            ]}\n                        >\n                            <TextArea maxLength={100} rows={6} placeholder=\"описание\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button block type=\"primary\" htmlType=\"submit\">\n                                {submitLabel}\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Container>\n        </PageLoader>\n    );\n};\n\nexport default TopicEdit;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tVA28iwOv6hGtnPiEqJV\",\"title\":\"bsDM8hjmhcRnrixWOtoO\"};","import React, { FC } from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\nimport { useSelector } from \"@/hooks/useSelector\";\n\nimport { checkAccess } from \"@/helpers/acess\";\nimport Error from \"@/pages/Error\";\n\nconst AccessRoute: FC<RouteProps> = ({ component, ...props }) => {\n    const Component = component as\n        | React.ComponentClass\n        | React.FunctionComponent;\n    const isSignedInCookie = checkAccess();\n    const isSignedIn = useSelector((state) => state.auth.isSignedIn);\n    const isSignedInOAuth = useSelector((state) => state.auth.isSignedInOAuth);\n\n    const isSignedInAll = isSignedInCookie || isSignedIn || isSignedInOAuth;\n\n    return (\n        <Route\n            {...props}\n            render={() => (isSignedInAll ? <Component /> : <Error status=\"403\" />)\n            }\n        />\n    );\n};\n\nexport default AccessRoute;\n","import React, { FC } from \"react\";\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"@/hooks/useSelector\";\n\nimport { checkAccess } from \"@/helpers/acess\";\nimport { routes } from \"@/config/routes/routes\";\n\nconst AccessRoute: FC<RouteProps> = ({ component, ...props }) => {\n    const Component = component as\n        | React.ComponentClass\n        | React.FunctionComponent;\n    const isSignedInCookie = checkAccess();\n    const isSignedIn = useSelector((state) => state.auth.isSignedIn);\n    const isSignedInOAuth = useSelector((state) => state.auth.isSignedInOAuth);\n\n    const isSignedInAll = isSignedInCookie || isSignedIn || isSignedInOAuth;\n\n    return (\n        <Route\n            {...props}\n            render={() => (!isSignedInAll ? (\n                <Component />\n            ) : (\n                <Redirect to={routes.main.path} />\n            ))\n            }\n        />\n    );\n};\n\nexport default AccessRoute;\n","import React, { FC } from \"react\";\nimport {\n    Switch,\n    Route,\n    Redirect,\n    useLocation,\n    useHistory,\n} from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport api from \"@/api/OAuth\";\nimport { signInOAuth } from \"@/actions/auth.actions\";\nimport { useMountEffect } from \"@/hooks/useMountEffect\";\n\nimport { getProfile } from \"@/actions/profile.actions\";\nimport Login from \"@/pages/SignIn\";\nimport SignUpView from \"@/pages/SignUp\";\nimport Main from \"@/pages/Main\";\nimport Profile from \"@/pages/Profile\";\nimport Forum from \"@/pages/Forum\";\nimport About from \"@/pages/About\";\nimport Leaderboard from \"@/pages/Leaderboard\";\nimport Error from \"@/pages/Error\";\nimport Game from \"@/pages/Game\";\nimport Offline from \"@/pages/Offline\";\nimport Topic from \"@/pages/Topic\";\nimport TopicEdit from \"@/pages/TopicEdit\";\nimport AccessRoute from \"@/components/AccessRoute\";\nimport AccessRedirectRoute from \"@/components/AccessRedirectRoute\";\n\nimport { routes } from \"@/config/routes/routes\";\n\nconst Routes: FC = () => {\n    const { search } = useLocation();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useMountEffect(() => {\n        const code = new URLSearchParams(search).get(\"code\");\n        if (code) {\n            api.signUpWithYandex(code).then(() => {\n                dispatch(signInOAuth(history));\n                dispatch(getProfile());\n            });\n        }\n    });\n\n    return (\n        <Switch>\n            <Redirect exact from={\"/\"} to={routes.signIn.path} />\n            <AccessRedirectRoute\n                path={routes.signIn.path}\n                component={Login}\n            />\n            <AccessRedirectRoute\n                path={routes.signUp.path}\n                component={SignUpView}\n            />\n            <AccessRoute path={routes.main.path} component={Main} />\n            <AccessRoute path={routes.profile.path} component={Profile} />\n            <AccessRoute exact path={routes.forum.path} component={Forum} />\n            <AccessRoute path={routes.topic.path} component={Topic} />\n            <AccessRoute exact path={routes.topicEdit.path} component={TopicEdit} />\n            <AccessRoute\n                path={routes.leaderboard.path}\n                component={Leaderboard}\n            />\n            <Route path={routes.about.path} component={About} />\n            <AccessRoute path={routes.game.path} component={Game} />\n            <Route path={\"/error\"} component={Error} />\n            <Route path={\"/offline\"} component={Offline} />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React, { FC } from \"react\";\n\nimport Routes from \"./Routes/Routes.view\";\n\n// todo изменить на browserouter\nconst Router: FC = () => (\n    <Routes/>\n);\n\nexport default Router;\n","import React, {\n    FC, useState, useCallback, useEffect,\n} from \"react\";\nimport \"antd/dist/antd.css\";\n\nimport { Typography, Button } from \"antd\";\n\nimport styles from \"./App.module.scss\";\n\nimport { isServer } from \"@/helpers/environment\";\n\nconst { Title } = Typography;\n\ninterface Props {\n    onClose: Function;\n}\n\nexport const ModalChild: FC<Props> = ({ onClose }) => (\n    <>\n        <Title className={styles.title} level={2}>\n            Нет интернет соединения\n        </Title>\n\n        <Button type=\"primary\" onClick={() => onClose()}>\n            Закрыть\n        </Button>\n    </>\n);\n\nconst sw: unknown | null = !isServer ? navigator?.serviceWorker : null;\n\nexport const useServiceWorkers = () => {\n    const [isActive, setActive] = useState(false);\n\n    const onClose = useCallback(() => {\n        setActive(false);\n    }, []);\n\n    useEffect(() => {\n        function startServiceWorker() {\n            if (sw) {\n                window.addEventListener(\n                    \"load\",\n                    () => {\n                        (sw as ServiceWorkerContainer)\n                            .register(\"./sw.js\")\n                            .then((registration) => {\n                                console.log(\n                                    \"ServiceWorker registration successful \",\n                                    registration.scope,\n                                );\n                            })\n                            .then(() => {\n                                (sw as ServiceWorkerContainer).addEventListener(\n                                    \"message\",\n                                    ({ data }) => {\n                                        if (data === \"FORBIDDEN_METHOD\") {\n                                            setActive(true);\n                                        }\n                                    },\n                                );\n                            })\n                            .catch((error: string) => {\n                                console.log(\n                                    \"ServiceWorker registration failed: \",\n                                    error,\n                                );\n                            });\n                    },\n                    { once: true },\n                );\n            }\n        }\n\n        startServiceWorker();\n    }, []);\n\n    return {\n        isActive,\n        onClose,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"d6rBLli3BagIoSgKy2ws\",\"title\":\"UAUK2yU1qb5KDEJM4sbz\"};","import React, { useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\n\nimport { useDispatch } from \"react-redux\";\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\nimport GameModal from \"@/components/GameModal\";\n\nimport Router from \"@/components/Router\";\n\nimport styles from \"./App.module.scss\";\nimport { useServiceWorkers, ModalChild } from \"./App.helpers\";\nimport { getTheme } from \"@/actions/theme.actions\";\nimport { useSelector } from \"@/hooks/useSelector\";\n\nconst App = () => {\n    const dispatch = useDispatch();\n\n    const { onClose, isActive } = useServiceWorkers();\n    const userId = useSelector((state) => state.profile.data.id);\n\n    useEffect(() => {\n        dispatch(getTheme());\n    }, [userId]);\n\n    return (\n        <div className={styles.App}>\n            <GameModal isActive={isActive} title=\"Ошибка\">\n                <ModalChild onClose={onClose} />\n            </GameModal>\n\n            <ErrorBoundary>\n                <Router />\n            </ErrorBoundary>\n        </div>\n    );\n};\n\nexport default App;\n","export enum HttpStatuses {\n    OK = 200,\n    Created = 201,\n    Redirect = 302,\n    BadRequest = 400,\n    Unauthorized = 401,\n    Forbidden = 403,\n    NotFound = 404,\n    ServerError = 500,\n}\n","import { NextFunction, Request, Response } from \"express\";\nimport React from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport { StaticRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Helmet from \"react-helmet\";\nimport configureStore from \"@/store/store\";\nimport { makeHTMLPage } from \"../utils/makeHTMLPage\";\nimport App from \"../../components/App\";\nimport {\n    signInSuccess,\n    signOutSuccess,\n} from \"@/actions/auth.actions\";\nimport { HttpStatuses } from \"@/server/utils/httpStatuses\";\n\nconst store = configureStore();\n\nexport const serverRenderMiddleware = (\n    req: Request,\n    res: Response,\n    next: NextFunction,\n) => {\n    const location = req.url;\n    const host = req.get(\"Host\");\n    let protocol = \"https\";\n    if (host?.startsWith(\"localhost\")) {\n        protocol = \"http\";\n    }\n    const hostUrl = `${protocol}://${host}`;\n\n    if (req.cookies.uuid && req.cookies.authCookie) {\n        store.dispatch(signInSuccess());\n    } else {\n        store.dispatch(signOutSuccess());\n    }\n\n    const jsx = (\n        <Provider store={store}>\n            <StaticRouter location={location}>\n                <App />\n            </StaticRouter>\n        </Provider>\n    );\n    const reactHtml = renderToString(jsx);\n    const reduxState = store.getState();\n    const helmetData = Helmet.renderStatic();\n\n    // TODO: если отдавать 304 ридерект,\n    // то ломаются service-workers, надо подумать что с этим сделать\n    res.status(HttpStatuses.OK).send(\n        makeHTMLPage(hostUrl, reactHtml, helmetData, reduxState),\n    );\n\n    res.end();\n};\n","import express from \"express\";\r\nimport { routes, Routes } from \"@/config/routes/routes\";\r\nimport {\r\n    serverRenderMiddleware,\r\n    limiterMiddleware,\r\n    redirectMiddleware,\r\n} from \"../middlewares\";\r\n\r\nconst appRouter = express.Router();\r\n\r\nconst appRoutes = (function getRoutes(routesMap: Routes): string[] {\r\n    return Object.values(routesMap).reduce<string[]>(\r\n        (routes, route) => routes.concat([route.path]),\r\n        [],\r\n    );\r\n}(routes));\r\nappRoutes.push(\"/\");\r\n\r\nappRouter.get(appRoutes, limiterMiddleware, serverRenderMiddleware);\r\n// NOTE: Если дошли до сюда, то такого роута не существует и нужно сделать redirect или 404\r\nappRouter.get(\"/*\", redirectMiddleware);\r\n\r\nexport { appRouter };\r\n","import { HelmetData } from \"react-helmet\";\r\n\r\n/* eslint-disable max-len */\r\nconst makeHTMLPage = (\r\n    hostUrl: string,\r\n    content: string,\r\n    helmetData: HelmetData,\r\n    reduxState = {},\r\n) => `\r\n        <!DOCTYPE html>\r\n            <html lang=\"en\">\r\n                <head>\r\n                    <meta charset=\"UTF-8\">\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n                    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n                    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n                    <link rel=\"stylesheet\" href=\"${hostUrl}/main.css\"> \r\n                    <link href=\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\" rel=\"stylesheet\">\r\n                    ${helmetData.title.toString()}\r\n                    ${helmetData.meta.toString()}\r\n                </head>\r\n\r\n                <body>\r\n                    <div id=\"root\">${content}</div>\r\n                    <script>\r\n                        window.__INITIAL_STATE__ = ${JSON.stringify(reduxState)}\r\n                    </script>\r\n                    <script type=\"module\" src=\"${hostUrl}/bundle.js\"></script>\r\n                </body>\r\n        </html>\r\n    `;\r\n/* eslint-enable max-len */\r\n\r\nexport { makeHTMLPage };\r\n","import { Request, Response, NextFunction } from \"express\";\n\nexport const redirectMiddleware = (\n    req: Request,\n    res: Response,\n    next: NextFunction,\n) => {\n    res.redirect(\"/\");\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"body-parser\");","import { Request, Response, NextFunction } from \"express\";\nimport { HttpStatuses } from \"@/server/utils/httpStatuses\";\n\nexport const checkAuth = (\n    req: Request,\n    res: Response,\n    next: NextFunction,\n) => {\n    if (req.cookies.uuid && req.cookies.authCookie) {\n        next();\n    } else {\n        res.status(HttpStatuses.Unauthorized).send({ message: \"Пользователь не авторизован\" });\n    }\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"sequelize\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"sequelize-typescript\");","import {\n    AllowNull, AutoIncrement, Column,\n    DataType, Length, Model, PrimaryKey, Table,\n} from \"sequelize-typescript\";\n\nconst MAX_LENGTH = 512;\n\n@Table({\n    timestamps: true,\n    createdAt: \"created_at\",\n    updatedAt: false,\n    tableName: \"topics\",\n})\nexport class Topic extends Model<Topic> {\n    @AutoIncrement\n    @PrimaryKey\n    @Column(DataType.INTEGER)\n        id: number;\n\n    @Length({ max: MAX_LENGTH })\n    @AllowNull(false)\n    @Column(DataType.STRING)\n        title: string;\n\n    @AllowNull(false)\n    @Column(DataType.STRING)\n        body: string;\n\n    @AllowNull(true)\n    @Column(DataType.INTEGER)\n        user_id: number;\n\n    @AllowNull(true)\n    @Column(DataType.INTEGER)\n        comments_count: number;\n}\n","import { Topic } from \"../models/topic\";\n\nexport const getDBTopics = (): Promise<any> => Topic.findAll();\n\nexport const getDBTopic = (id: number): Promise<any> => Topic.findOne({ where: { id } });\n\n// TODO: Разобраться с типами\nexport const addDBTopic = (topic: any): Promise<any> => {\n    const data = {\n        title: topic?.title,\n        body: topic?.body,\n        user_id: topic?.user_id,\n    } as any;\n    return Topic.create(data);\n};\n\nexport const updateDBTopic = (id: number, topic: any): Promise<any> => {\n    const data = {} as any;\n    if (topic?.title) data.title = topic.title;\n    if (topic?.body) data.body = topic.body;\n    if (topic?.user_id) data.user_id = topic.user_id;\n    return Topic.update(data, { where: { id } });\n};\n\nexport const removeDBTopic = (id: number): Promise<any> => Topic.destroy({\n    where: { id },\n});\n","export const createSafeDecorator = (errorHandler: Function) => function safe(\n    target: Object,\n    propertyKey: string,\n    descriptor: TypedPropertyDescriptor<any>,\n): TypedPropertyDescriptor<any> {\n    // Запоминаем исходную функцию\n    const originalMethod = descriptor.value;\n    // Подменяем ее на нашу обертку\n    descriptor.value = function SafeWrapper() {\n        // Сохраняем аргументы (req и res)\n        // eslint-disable-next-line prefer-rest-params\n        const args = arguments;\n        // Заворачиваем в асинхронную обертку, чтобы работал try catch\n        const wrapper = async () => {\n            try {\n                // Вызываем исходный метод\n                await originalMethod.apply(this, args);\n            } catch (err) {\n                // Передаем в handler ошибку и Response\n                errorHandler.call(this, err, args[1]);\n            }\n        };\n        wrapper();\n    };\n    // Обновляем дескриптор\n    return descriptor;\n};\n","import { Request, Response } from \"express\";\nimport { ValidationError } from \"sequelize\";\nimport {\n    addDBTopic, getDBTopics, updateDBTopic, removeDBTopic, getDBTopic,\n} from \"@/server/db/forum/actions/topics\";\nimport { createSafeDecorator } from \"@/server/utils/safeDecorator\";\nimport { HttpStatuses } from \"@/server/utils/httpStatuses\";\n\nconst topicErrorHandler = (err: unknown, res: Response) => {\n    if (err instanceof ValidationError) {\n        return res.status(HttpStatuses.BadRequest).send({ message: \"Неверный формат данных\" });\n    }\n    return res.status(HttpStatuses.ServerError).send({ message: \"Ошибка сервера\" });\n};\nconst Safe = createSafeDecorator(topicErrorHandler);\n\nclass TopicController {\n    @Safe\n    async get(req: Request, res: Response) {\n        const topics = await getDBTopics();\n        if (!topics || !topics.length) {\n            return res.status(HttpStatuses.BadRequest).send({ message: \"Топики отсутствуют\" });\n        }\n        return res.status(HttpStatuses.OK).send(topics);\n    }\n\n    @Safe\n    async getTopic(req: Request, res: Response) {\n        const id = Number(req.params.id);\n        const topic = await getDBTopic(id);\n        if (!topic) {\n            return res.status(HttpStatuses.BadRequest).send({ message: \"Топики отсутствуют\" });\n        }\n        return res.status(HttpStatuses.OK).send(topic);\n    }\n\n    @Safe\n    async add(req: Request, res: Response) {\n        const topic = await addDBTopic(req.body);\n        if (!topic) {\n            return res.status(HttpStatuses.BadRequest).send(\n                { message: \"Ошибка добавления топика\" },\n            );\n        }\n        return res.status(HttpStatuses.Created).send(topic);\n    }\n\n    @Safe\n    async update(req: Request, res: Response) {\n        const id = Number(req.params.id);\n        const resultArray = await updateDBTopic(id, req.body);\n        const result = resultArray[0];\n        if (!result) {\n            return res.status(HttpStatuses.BadRequest).send({ message: \"Ошибка изменения топика\" });\n        }\n        const topic = await getDBTopic(id);\n        return res.status(HttpStatuses.OK).send(topic);\n    }\n\n    @Safe\n    async delete(req: Request, res: Response) {\n        const id = Number(req.params.id);\n        const result = await removeDBTopic(id);\n        if (!result) {\n            return res.status(HttpStatuses.BadRequest).send({ message: \"Ошибка удаления топика\" });\n        }\n        return res.status(HttpStatuses.OK).sendStatus(HttpStatuses.OK);\n    }\n}\n\nexport default new TopicController();\n","import {\n    AllowNull, AutoIncrement, Column,\n    DataType, Model, PrimaryKey, Table,\n} from \"sequelize-typescript\";\n\n@Table({\n    timestamps: false,\n    tableName: \"themes\",\n})\nexport class Theme extends Model<Theme> {\n    @AutoIncrement\n    @PrimaryKey\n    @Column(DataType.INTEGER)\n        id: number;\n\n    @AllowNull(true)\n    @Column(DataType.STRING)\n        theme: string;\n\n    @AllowNull(true)\n    @Column(DataType.INTEGER)\n        user_id: number;\n}\n","import { Theme } from \"../models/themes\";\n\nexport const getDBTheme = (id: number): Promise<any> => Theme.findOne({ where: { user_id: id } });\n\nexport const updateDBTheme = (id: number, body: any): Promise<any> => {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const data = {\n        theme: body.theme,\n        user_id: id,\n    };\n    return Theme.update(data, { where: { user_id: id } });\n};\n\nexport const addDBTheme = (body: any): Promise<any> => Theme.create(body);\n","import { Request, Response } from \"express\";\nimport { ValidationError } from \"sequelize\";\nimport { updateDBTheme, getDBTheme, addDBTheme } from \"@/server/db/themes/actions/themes\";\nimport { createSafeDecorator } from \"@/server/utils/safeDecorator\";\nimport { HttpStatuses } from \"@/server/utils/httpStatuses\";\n\nconst themeErrorHandler = (err: unknown, res: Response) => {\n    console.log(err);\n    if (err instanceof ValidationError) {\n        return res.status(HttpStatuses.BadRequest).send({ message: \"Неверный формат данных\" });\n    }\n    return res.status(HttpStatuses.ServerError).send({ message: \"Ошибка сервера\" });\n};\n\nconst Safe = createSafeDecorator(themeErrorHandler);\n\nclass ThemeController {\n    @Safe\n    async get(req: Request, res: Response) {\n        const id = Number(req.params.id);\n        const theme = await getDBTheme(id);\n        if (!theme) {\n            // Если нет, то создаем\n            const newTheme = await addDBTheme({\n                user_id: id,\n                theme: \"light\",\n            });\n            if (!newTheme) {\n                return res.status(HttpStatuses.BadRequest).send(\n                    { message: \"Ошибка сохранения темы\" },\n                );\n            }\n            return res.status(HttpStatuses.OK).send(newTheme);\n        }\n        return res.status(HttpStatuses.OK).send(theme);\n    }\n\n    @Safe\n    async update(req: Request, res: Response) {\n        const id = Number(req.params.id);\n        // Сначала проверяем существует ли такой юзер\n        const theme = await getDBTheme(id);\n        if (!theme) {\n            // Если нет, то создаем\n            const newTheme = await addDBTheme({\n                user_id: id,\n                theme: req.body,\n            });\n            if (!newTheme) {\n                return res.status(HttpStatuses.BadRequest).send(\n                    { message: \"Ошибка сохранения темы\" },\n                );\n            }\n            return res.status(HttpStatuses.OK).send(newTheme);\n        }\n        // Если есть, то обновляем\n        const resultArray = await updateDBTheme(id, req.body);\n\n        const result = resultArray[0];\n        if (!result) {\n            return res.status(HttpStatuses.BadRequest).send({ message: \"Ошибка изменения темы\" });\n        }\n\n        // Возвращаем обновленную тему\n        const updatedTheme = await getDBTheme(id);\n        return res.status(HttpStatuses.OK).send(updatedTheme);\n    }\n\n    @Safe\n    async add(req: Request, res: Response) {\n        const currentTheme = await addDBTheme(req.body);\n\n        if (!currentTheme) {\n            return res.status(HttpStatuses.BadRequest).send({ message: \"Ошибка сохранения темы\" });\n        }\n        return res.status(HttpStatuses.OK).send(currentTheme);\n    }\n}\n\nexport default new ThemeController();\n","import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport { checkAuth } from \"server/middlewares/auth\";\nimport { ThemesController, TopicController } from \"@/server/controllers\";\nimport { apiBase } from \"@/services/API/API.service\";\n\nconst apiRouter = express.Router();\nconst middlewares = [\n    bodyParser.json(),\n    checkAuth,\n];\n\napiRouter.get(`${apiBase}/topics`, ...middlewares, TopicController.get);\napiRouter.get(`${apiBase}/topics/:id`, ...middlewares, TopicController.getTopic);\napiRouter.post(`${apiBase}/topics`, ...middlewares, TopicController.add);\napiRouter.put(`${apiBase}/topics/:id`, ...middlewares, TopicController.update);\napiRouter.delete(`${apiBase}/topics/:id`, ...middlewares, TopicController.delete);\n\napiRouter.get(`${apiBase}/themes/:id`, ...middlewares, ThemesController.get);\napiRouter.put(`${apiBase}/themes/:id`, ...middlewares, ThemesController.update);\napiRouter.post(`${apiBase}/themes`, ...middlewares, ThemesController.add);\n\nexport { apiRouter };\n","import express from \"express\";\nimport { base } from \"@/services/API/API.service\";\nimport {\n    apiProxy,\n} from \"../middlewares\";\nimport { checkAuth } from \"@/server/middlewares/auth\";\n\nconst yandexApiRouter = express.Router();\n\nyandexApiRouter.all(`${base}/*`, apiProxy, checkAuth);\n\nexport { yandexApiRouter };\n","import \"dotenv/config\";\nimport express from \"express\";\nimport cookieParser from \"cookie-parser\";\nimport { apiRouter, appRouter, yandexApiRouter } from \"./router\";\n\nconst app = express();\n\napp.use(express.static(`${__dirname}`));\napp.use(cookieParser());\napp.use(apiRouter);\napp.use(yandexApiRouter);\napp.use(appRouter);\n\nexport { app };\n","import { Sequelize, SequelizeOptions } from \"sequelize-typescript\";\nimport { Topic } from \"./forum/models/topic\";\nimport { Theme } from \"./themes/models/themes\";\n\nexport const createSequelize = (): Sequelize => {\n    const sequelizeOptions: SequelizeOptions = {\n        host: process.env.DB_HOST,\n        port: Number(process.env.DB_PORT) || 5432,\n        username: process.env.DB_USERNAME,\n        password: process.env.DB_PASSWORD,\n        database: process.env.DB_NAME,\n        dialect: \"postgres\",\n    };\n\n    const db = new Sequelize(sequelizeOptions);\n    db.addModels([Topic, Theme]);\n\n    return db;\n};\n","import { app } from \"./server\";\r\nimport { createSequelize } from \"./db/init\";\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\nconst DB = createSequelize();\r\nDB?.authenticate()\r\n    .then(() => console.log(\"db connected\"))\r\n    .catch((err) => console.error(\"db error: \", err));\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server started on port ${port}`);\r\n});\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","require","routes","main","path","signIn","signUp","profile","forum","topic","topicEdit","leaderboard","about","game","theme","Method","base","APIService","constructor","isLocalBase","this","method","url","data","fetch","mode","cache","credentials","headers","GET","body","JSON","stringify","LocalAPIService","apiProxy","createProxyMiddleware","target","changeOrigin","cookieDomainRewrite","limiterMiddleware","rateLimit","windowMs","max","isSuccessfulRequest","response","type","message","errorMessage","status","notification","POST","json","id","ProfileDataType","dataType","Common","requestData","display_name","PUT","Password","GET_PROFILE","SET_PASSWORD","PROFILE_LOADING","isServer","window","document","createElement","getCookie","name","matches","cookie","match","RegExp","replace","decodeURIComponent","checkAccess","setSigned","toString","setSignedOAuth","getUserIdCookie","setUserIdCookie","ProfileStages","loading","isLoading","payload","getProfile","async","dispatch","_state","api","error","initialState","second_name","first_name","email","phone","login","password","avatar","stage","INIT","SIGN_IN","SIGN_IN_OAUTH","SIGN_OUT","LOADING","AuthStages","signInSuccess","signOutSuccess","isSignedIn","isSignedInOAuth","SET_THEME","TOPIC_LOAD","TOPIC_SET_LOADING","TOPIC_INIT_STATE","title","created_at","user_id","comments_count","LOAD","SET_LOADING","LEADERBOARD_INIT_STATE","FORUM_LOAD","FORUM_SET_LOADING","FORUM_INIT_STATE","rootReducer","combineReducers","auth","state","action","DONE","leaderBoard","__INITIAL_STATE__","ErrorBoundary","Component","props","super","errorInfo","componentDidCatch","setState","render","children","isActive","className","visible","footer","closable","apiRoutes","providerURLRoot","redirectURI","serviceId","udcClientId","isSignIn","service_id","code","redirect_uri","useMountEffect","effectCallback","useEffect","cutTags","text","description","image","substr","prepareData","property","content","Boolean","CustomInput","prefix","LockOutlined","iconRender","useSelector","useReduxSelector","request","LIGHT_THEME","DARK_THEME","updateDOMTheme","classList","remove","add","themeRequest","updateTheme","currentPath","setRoutes","useState","changeTheme","useDispatch","userId","themeData","useTheme","allRoutes","appRoutes","label","filter","route","map","Link","to","onClick","Text","Typography","renderSignOutButton","history","useHistory","onSignOut","useCallback","event","preventDefault","push","signOut","useHeader","styles","isSpinning","antIcon","LoadingOutlined","style","fontSize","spin","Spin","indicator","size","spinning","SignInFieldNames","location","LoginOutlined","onFinish","onFinishFailed","values","console","log","useSignInForm","Form","layout","Login","rules","required","Input","placeholder","UserOutlined","Button","block","htmlType","SignUpFieldNames","fieldSet","SecondName","FirstName","Email","Phone","useSignUp","set","index","info","infoContainer","container","initialFields","disabled","component","passwordFields","useProfileForm","isEdit","setIsEdit","isOAuthSigned","setIsOAuthSigned","form","useForm","shallowEqual","setFieldsValue","oldPassword","newPassword","rest","profileApi","profileUploadSuccess","setProfile","setPassword","fields","renderFieldSet","item","Item","handleCancel","resetFields","handleEdit","Modal","cancelText","okText","onOk","getFieldsValue","onCancel","EditOutlined","Space","direction","width","height","src","crossOrigin","fallback","ProfileDefault","initialValues","root","setLoading","table","useRef","forumApi","getTopics","useForum","columns","dataIndex","handleRowClick","record","getRowKey","onCreate","Table","ref","dataSource","rowKey","onRow","scroll","y","pagination","TEAM_SCORE","cursor","ratingFieldName","limit","ok","teamName","loadLeaderBoard","LeaderboardApi","getLeaderBoard","icon","LeftOutlined","onMoveLeft","canMoveLeft","RightOutlined","onMoveRight","canMoveRight","score","onChange","filters","sorter","extra","tableScroll","setCanMoveLeft","setCanMoveRight","setCursor","setTableScroll","innerHeight","current","tableHeight","clientHeight","header","getElementsByClassName","headerHeight","length","newCursor","useLeaderBoard","ErrorInfo","errorContainer","back","notFound","GeometryTypes","getGeomId","geometryId","TILE_SIZE","STEP","EventTypes","KeyboardEvents","isImplementingCollision","obj1","hasBox2DCollided","obj2","geometry","calculateBoundingBox","box1","boundingBox","box2","min","x","getNewPositionAfterWallCollision","object","obstacle","moveAnimation","prevPosition","objGeom","obstGeomBB","isMovingRight","isMovingLeft","isMovingDown","isMovingTop","moveState","position","copy","delta","speed","Renderer","canvas","Error","context","getContext","init","scene","camera","c","background","clearRect","fillStyle","g","b","fillRect","objects","Rectangle","_drawRectangle","prerender","objectWithPhysics","updateState","i","j","Physics","onCollide","geom","color","K","_recalculateWorldValuesToCanvasValues","translate","spriteConfig","shouldFlip","scale","rotation","rotationCenter","rotate","sp","sprite","drawImage","sx","sy","sWidth","sHeight","setTransform","bindedObject","Color","Box2","Vector2D","vector","rotateAround","center","angle","Math","cos","sin","RectangleGeometry","geomType","boundingCircle","calculateBoundingCircle","rectangle","p1","p2","p3","p4","minX","maxX","minY","maxY","newMin","newMax","Scene","Array","isArray","addObjectWithPhysics","getObject2DId","objectId","Object2D","frustumCulled","userData","move","vect","GameAnimation","MoveAnimation","update","isMoving","reduce","res","val","SpriteAnimation","sprites","timeAfterLastSpriteUpdate","shouldUpdateSprite","isCurrentSpriteIdle","run_0","getNextRunSprite","getNextIdleSprite","idle_0","idle_1","idle_2","idle_3","run_1","run_2","run_3","AttackAnimation","weapon","active","weaponX","weaponY","currentRotation","maxRotation","maxAnimationStep","weaponGeom","attackCount","Wall","Weapon","damage","TileTypes","TILE_TYPES","Ground","UI","getRandomDirection","directions","random","left","chance","right","down","top","fillMatrix","level","matrix","k","f","ENEMY_MOVE_DIRECTIONS","Enemy","health","_health","onDeath","maxHealth","_createEnemySprites","moveStateUpdateCondition","spriteAnimation","enemySprites","Player","prevRecievedDamage","WorldManager","currentMoveStateCounter","maxMoveStateUpdate","_listeners","Map","on","callback","events","off","listener","emit","args","forEach","eventBus","_keyDownListener","e","ArrowDown","ArrowBottomDown","ArrowLeft","ArrowLeftDown","ArrowRight","ArrowRightDown","ArrowUp","ArrowTopDown","SpaceDown","_keyUpListener","ArrowBottomUp","ArrowLeftUp","ArrowRightUp","ArrowTopUp","SpaceUp","_resizeListener","Resize","addEventListener","unsubscribe","removeEventListener","_createPlayerSprites","_updateWeaponState","playerSprites","attackAnimation","WorldEvents","Camera","bindObject","HEALTH_SPITE","HALF_HEALTH_SPITE","EMPTY_HEALTH_SPITE","Health","isHalf","isEmpty","tileSetImage","PlayerUI","innerWidth","renderer","LEVEL_SIZE","updateHealth","healthObjects","healthGeom","healthObject","updateScore","Image","TileSetImage","composeLevel","gameOverCallback","gameWinCallback","maxRight","fill","maxDown","tileHorizontal","round","tileVertical","directon","generateRandomLevel","_createWallsAndGroundFromLevel","player","sword","_createPlayer","_createEnemies","composeUIScene","playerUI","getTilePositionFromCoordinates","coordinates","floor","number","groundGeom","ground","wallGeom","wall","playerGeom","playerPosition","getFirstGroundTileOnLevel","swordGeometry","enemy","_createEnemy","enemy2","enemy3","enemyGeom","enemyPosition","getLastGroundTileOnLevel","World","uiCanvas","_onResize","bind","startAnimataion","dt","last","performance","now","animationNumber","requestAnimationFrame","stopAnimation","cancelAnimationFrame","destroy","togglePointerLock","documentElement","requestPointerLock","togglePointerUnlock","exitPointerLock","exitFullScreen","fullscreenElement","exitFullscreen","openFullScreen","requestFullscreen","Title","isPaused","isGameOver","isGameWin","onClose","onStart","onResume","canvasRef","uiCanvasRef","onUnmount","setUpPauseButton","setActive","setGameOver","setGameWin","setPause","world","React","user","createRecord","callMenu","callGameOver","callGameWin","useGame","author","Comment","TextArea","setMessage","handleInput","handleSubmit","maxLength","rows","pathname","useLocation","split","slice","getTopic","loadTopic","Number","useTopic","TopicFieldNames","AntInput","submitLabel","titleLabel","hasId","isNaN","updateTopic","createTopic","useTopicForm","Body","isSignedInCookie","isSignedInAll","Route","Redirect","search","URLSearchParams","then","signInOAuth","Switch","exact","from","AccessRedirectRoute","SignUpView","Main","Profile","Forum","Topic","TopicEdit","Leaderboard","About","Game","Offline","ModalChild","sw","navigator","serviceWorker","register","registration","scope","catch","once","useServiceWorkers","HttpStatuses","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","appRouter","express","routesMap","concat","req","next","host","protocol","startsWith","hostUrl","cookies","uuid","authCookie","jsx","Provider","StaticRouter","reactHtml","renderToString","reduxState","getState","helmetData","Helmet","OK","send","meta","makeHTMLPage","end","redirect","checkAuth","Unauthorized","timestamps","createdAt","updatedAt","tableName","Column","DataType","Length","AllowNull","Model","AutoIncrement","PrimaryKey","getDBTopic","where","createSafeDecorator","errorHandler","propertyKey","descriptor","originalMethod","arguments","wrapper","apply","err","Safe","ValidationError","BadRequest","ServerError","TopicController","topics","params","addDBTopic","Created","resultArray","updateDBTopic","result","removeDBTopic","sendStatus","Theme","getDBTheme","findOne","addDBTheme","create","ThemeController","newTheme","updateDBTheme","updatedTheme","currentTheme","apiRouter","middlewares","bodyParser","post","put","delete","ThemesController","yandexApiRouter","all","app","use","__dirname","cookieParser","port","process","env","PORT","sequelizeOptions","DB_HOST","DB_PORT","username","DB_USERNAME","DB_PASSWORD","database","DB_NAME","dialect","db","Sequelize","addModels","createSequelize","authenticate","listen"],"sourceRoot":""}