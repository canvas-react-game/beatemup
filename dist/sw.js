const sw=self,canBeCached=e=>{const t=!("development"===MODE&&e.url.includes("bundle.js"));return"GET"===e.method&&e.url.startsWith("http")&&!e.url.includes("sockjs-node")&&t},CACHE_NAME="CACHE_VERSION_380",MODE="production",OFFLINE_URL="/offline",URLS=["/offline","/main","/signup","/profile","/signin","/forum","/leaderboard","/about","/game","https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap","/main.css","/bundle.js"];sw.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("Opened cache"),e.addAll(URLS)))).catch((e=>{throw console.log(e),e})))})),sw.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return caches.delete(e)}))))))})),sw.addEventListener("fetch",(e=>{const t=e.request;e.respondWith(fetch(t).then((e=>{if(!canBeCached(t))return e;const n=e.clone();return caches.open(CACHE_NAME).then((e=>{e.put(t,n)})).catch((e=>{console.log(e)})),e})).catch((()=>{if("GET"===t.method)return caches.match(t).then((e=>e||caches.match("/offline")));e.waitUntil((async()=>{const t=""!==e.resultingClientId?e.resultingClientId:e.clientId;(await sw.clients.get(t)).postMessage("FORBIDDEN_METHOD")})())})))}));